// Generated by CIRCT firtool-1.62.1
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
`ifdef RANDOMIZE_REG_INIT
`define RANDOMIZE
`endif  // RANDOMIZE_REG_INIT
`endif  // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
`define RANDOM $random
`endif  // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
`define INIT_RANDOM
`endif  // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
`define RANDOMIZE_DELAY 0.002
`endif  // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
`ifdef RANDOMIZE
`ifdef VERILATOR
`define INIT_RANDOM_PROLOG_ `INIT_RANDOM
`else  // VERILATOR
`define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
`endif  // VERILATOR
`else  // RANDOMIZE
`define INIT_RANDOM_PROLOG_
`endif  // RANDOMIZE
`endif  // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
`ifndef ENABLE_INITIAL_REG_
`define ENABLE_INITIAL_REG_
`endif  // not def ENABLE_INITIAL_REG_
`endif  // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
`ifndef ENABLE_INITIAL_MEM_
`define ENABLE_INITIAL_MEM_
`endif  // not def ENABLE_INITIAL_MEM_
`endif  // not def SYNTHESIS

module Core (  // @[Core/src/Core.scala:6:7]
    input         clock,              // @[Core/src/Core.scala:6:7]
    reset,  // @[Core/src/Core.scala:6:7]
    io_master_arready,  // @[Core/src/Core.scala:7:14]
    output        io_master_arvalid,  // @[Core/src/Core.scala:7:14]
    output [31:0] io_master_araddr,   // @[Core/src/Core.scala:7:14]
    input         io_master_rvalid,   // @[Core/src/Core.scala:7:14]
    input  [31:0] io_master_rdata     // @[Core/src/Core.scala:7:14]
);

  wire writebackUop_0_bits_robPtr_flag;  // @[Core/src/Core.scala:25:26] // verilator public_flat
  wire [31:0] _pReg_io_OUT_pRegVal_0_0;  // @[Core/src/Core.scala:20:20]
  wire [31:0] _pReg_io_OUT_pRegVal_0_1;  // @[Core/src/Core.scala:20:20]
  wire [5:0] _readReg_io_OUT_readRegIndex_0_0;  // @[Core/src/Core.scala:19:23]
  wire [5:0] _readReg_io_OUT_readRegIndex_0_1;  // @[Core/src/Core.scala:19:23]
  wire _readReg_io_OUT_readRegUop_0_valid;  // @[Core/src/Core.scala:19:23]
  wire [5:0] _readReg_io_OUT_readRegUop_0_bits_prd;  // @[Core/src/Core.scala:19:23]
  wire [31:0] _readReg_io_OUT_readRegUop_0_bits_src1;  // @[Core/src/Core.scala:19:23]
  wire [31:0] _readReg_io_OUT_readRegUop_0_bits_src2;  // @[Core/src/Core.scala:19:23]
  wire _readReg_io_OUT_readRegUop_0_bits_robPtr_flag;  // @[Core/src/Core.scala:19:23]
  wire [5:0] _readReg_io_OUT_readRegUop_0_bits_robPtr_index;  // @[Core/src/Core.scala:19:23]
  wire [31:0] _readReg_io_OUT_readRegUop_0_bits_imm;  // @[Core/src/Core.scala:19:23]
  wire [31:0] _readReg_io_OUT_readRegUop_0_bits_pc;  // @[Core/src/Core.scala:19:23]
  wire [3:0] _readReg_io_OUT_readRegUop_0_bits_fuType;  // @[Core/src/Core.scala:19:23]
  wire [3:0] _readReg_io_OUT_readRegUop_0_bits_opcode;  // @[Core/src/Core.scala:19:23]
  wire [31:0] _readReg_io_OUT_readRegUop_0_bits_predTarget;  // @[Core/src/Core.scala:19:23]
  wire _iq_0_io_IN_renameUop_ready;  // @[Core/src/Core.scala:18:42]
  wire _iq_0_io_OUT_issueUop_valid;  // @[Core/src/Core.scala:18:42]
  wire [5:0] _iq_0_io_OUT_issueUop_bits_prd;  // @[Core/src/Core.scala:18:42]
  wire [5:0] _iq_0_io_OUT_issueUop_bits_prs1;  // @[Core/src/Core.scala:18:42]
  wire [5:0] _iq_0_io_OUT_issueUop_bits_prs2;  // @[Core/src/Core.scala:18:42]
  wire [1:0] _iq_0_io_OUT_issueUop_bits_src1Type;  // @[Core/src/Core.scala:18:42]
  wire [1:0] _iq_0_io_OUT_issueUop_bits_src2Type;  // @[Core/src/Core.scala:18:42]
  wire _iq_0_io_OUT_issueUop_bits_robPtr_flag;  // @[Core/src/Core.scala:18:42]
  wire [5:0] _iq_0_io_OUT_issueUop_bits_robPtr_index;  // @[Core/src/Core.scala:18:42]
  wire [31:0] _iq_0_io_OUT_issueUop_bits_imm;  // @[Core/src/Core.scala:18:42]
  wire [31:0] _iq_0_io_OUT_issueUop_bits_pc;  // @[Core/src/Core.scala:18:42]
  wire [3:0] _iq_0_io_OUT_issueUop_bits_fuType;  // @[Core/src/Core.scala:18:42]
  wire [3:0] _iq_0_io_OUT_issueUop_bits_opcode;  // @[Core/src/Core.scala:18:42]
  wire [31:0] _iq_0_io_OUT_issueUop_bits_predTarget;  // @[Core/src/Core.scala:18:42]
  wire _scheduler_io_OUT_issueQueueReady_0;  // @[Core/src/Core.scala:17:25]
  wire _scheduler_io_OUT_renameUop_0_valid;  // @[Core/src/Core.scala:17:25]
  wire [5:0] _scheduler_io_OUT_renameUop_0_bits_prd;  // @[Core/src/Core.scala:17:25]
  wire [5:0] _scheduler_io_OUT_renameUop_0_bits_prs1;  // @[Core/src/Core.scala:17:25]
  wire [5:0] _scheduler_io_OUT_renameUop_0_bits_prs2;  // @[Core/src/Core.scala:17:25]
  wire [1:0] _scheduler_io_OUT_renameUop_0_bits_src1Type;  // @[Core/src/Core.scala:17:25]
  wire [1:0] _scheduler_io_OUT_renameUop_0_bits_src2Type;  // @[Core/src/Core.scala:17:25]
  wire _scheduler_io_OUT_renameUop_0_bits_src1Ready;  // @[Core/src/Core.scala:17:25]
  wire _scheduler_io_OUT_renameUop_0_bits_src2Ready;  // @[Core/src/Core.scala:17:25]
  wire _scheduler_io_OUT_renameUop_0_bits_robPtr_flag;  // @[Core/src/Core.scala:17:25]
  wire [5:0] _scheduler_io_OUT_renameUop_0_bits_robPtr_index;  // @[Core/src/Core.scala:17:25]
  wire [31:0] _scheduler_io_OUT_renameUop_0_bits_imm;  // @[Core/src/Core.scala:17:25]
  wire [31:0] _scheduler_io_OUT_renameUop_0_bits_pc;  // @[Core/src/Core.scala:17:25]
  wire [3:0] _scheduler_io_OUT_renameUop_0_bits_fuType;  // @[Core/src/Core.scala:17:25]
  wire [3:0] _scheduler_io_OUT_renameUop_0_bits_opcode;  // @[Core/src/Core.scala:17:25]
  wire [31:0] _scheduler_io_OUT_renameUop_0_bits_predTarget;  // @[Core/src/Core.scala:17:25]
  wire _rob_io_OUT_renameUopReady;  // @[Core/src/Core.scala:16:19]
  wire _rob_io_OUT_redirect_valid;  // @[Core/src/Core.scala:16:19]
  wire [31:0] _rob_io_OUT_redirect_pc;  // @[Core/src/Core.scala:16:19]
  wire _rename_io_IN_decodeUop_0_ready;  // @[Core/src/Core.scala:15:22]
  wire [4:0] _rename_io_OUT_renameUop_0_rd;  // @[Core/src/Core.scala:15:22]
  wire [5:0] _rename_io_OUT_renameUop_0_prd;  // @[Core/src/Core.scala:15:22]
  wire [5:0] _rename_io_OUT_renameUop_0_prs1;  // @[Core/src/Core.scala:15:22]
  wire [5:0] _rename_io_OUT_renameUop_0_prs2;  // @[Core/src/Core.scala:15:22]
  wire [1:0] _rename_io_OUT_renameUop_0_src1Type;  // @[Core/src/Core.scala:15:22]
  wire [1:0] _rename_io_OUT_renameUop_0_src2Type;  // @[Core/src/Core.scala:15:22]
  wire _rename_io_OUT_renameUop_0_src1Ready;  // @[Core/src/Core.scala:15:22]
  wire _rename_io_OUT_renameUop_0_src2Ready;  // @[Core/src/Core.scala:15:22]
  wire _rename_io_OUT_renameUop_0_robPtr_flag;  // @[Core/src/Core.scala:15:22]
  wire [5:0] _rename_io_OUT_renameUop_0_robPtr_index;  // @[Core/src/Core.scala:15:22]
  wire [31:0] _rename_io_OUT_renameUop_0_imm;  // @[Core/src/Core.scala:15:22]
  wire [31:0] _rename_io_OUT_renameUop_0_pc;  // @[Core/src/Core.scala:15:22]
  wire [3:0] _rename_io_OUT_renameUop_0_fuType;  // @[Core/src/Core.scala:15:22]
  wire [3:0] _rename_io_OUT_renameUop_0_opcode;  // @[Core/src/Core.scala:15:22]
  wire [31:0] _rename_io_OUT_renameUop_0_predTarget;  // @[Core/src/Core.scala:15:22]
  wire _rename_io_OUT_robValid_0;  // @[Core/src/Core.scala:15:22]
  wire _rename_io_OUT_issueQueueValid_0;  // @[Core/src/Core.scala:15:22]
  wire _rename_io_OUT_robHeadPtr_flag;  // @[Core/src/Core.scala:15:22]
  wire [5:0] _rename_io_OUT_robHeadPtr_index;  // @[Core/src/Core.scala:15:22]
  wire _idu_io_IN_inst_ready;  // @[Core/src/Core.scala:14:19]
  wire _idu_io_OUT_decodeUop_valid;  // @[Core/src/Core.scala:14:19]
  wire [4:0] _idu_io_OUT_decodeUop_bits_rd;  // @[Core/src/Core.scala:14:19]
  wire [4:0] _idu_io_OUT_decodeUop_bits_rs1;  // @[Core/src/Core.scala:14:19]
  wire [4:0] _idu_io_OUT_decodeUop_bits_rs2;  // @[Core/src/Core.scala:14:19]
  wire [1:0] _idu_io_OUT_decodeUop_bits_src1Type;  // @[Core/src/Core.scala:14:19]
  wire [1:0] _idu_io_OUT_decodeUop_bits_src2Type;  // @[Core/src/Core.scala:14:19]
  wire [31:0] _idu_io_OUT_decodeUop_bits_imm;  // @[Core/src/Core.scala:14:19]
  wire [31:0] _idu_io_OUT_decodeUop_bits_pc;  // @[Core/src/Core.scala:14:19]
  wire [3:0] _idu_io_OUT_decodeUop_bits_fuType;  // @[Core/src/Core.scala:14:19]
  wire [3:0] _idu_io_OUT_decodeUop_bits_opcode;  // @[Core/src/Core.scala:14:19]
  wire [31:0] _idu_io_OUT_decodeUop_bits_predTarget;  // @[Core/src/Core.scala:14:19]
  wire _ifu_io_out_valid;  // @[Core/src/Core.scala:13:19]
  wire [31:0] _ifu_io_out_bits_pc;  // @[Core/src/Core.scala:13:19]
  wire [31:0] _ifu_io_out_bits_inst;  // @[Core/src/Core.scala:13:19]
  wire writebackUop_1_valid = 1'h0;  // @[Core/src/Core.scala:6:7, :25:26] // verilator public_flat
  wire        writebackUop_1_bits_robPtr_flag = 1'h0;	// @[Core/src/Core.scala:6:7, :25:26] // verilator public_flat
  wire writebackUop_2_valid = 1'h0;  // @[Core/src/Core.scala:6:7, :25:26] // verilator public_flat
  wire        writebackUop_2_bits_robPtr_flag = 1'h0;	// @[Core/src/Core.scala:6:7, :25:26] // verilator public_flat
  wire writebackUop_3_valid = 1'h0;  // @[Core/src/Core.scala:6:7, :25:26] // verilator public_flat
  wire        writebackUop_3_bits_robPtr_flag = 1'h0;	// @[Core/src/Core.scala:6:7, :25:26] // verilator public_flat
  wire [5:0]  writebackUop_1_bits_prd = 6'h0;	// @[Core/src/Core.scala:25:26, :28:41] // verilator public_flat
  wire [5:0]  writebackUop_1_bits_robPtr_index = 6'h0;	// @[Core/src/Core.scala:25:26, :28:41] // verilator public_flat
  wire [5:0]  writebackUop_2_bits_prd = 6'h0;	// @[Core/src/Core.scala:25:26, :28:41] // verilator public_flat
  wire [5:0]  writebackUop_2_bits_robPtr_index = 6'h0;	// @[Core/src/Core.scala:25:26, :28:41] // verilator public_flat
  wire [5:0]  writebackUop_3_bits_prd = 6'h0;	// @[Core/src/Core.scala:25:26, :28:41] // verilator public_flat
  wire [5:0]  writebackUop_3_bits_robPtr_index = 6'h0;	// @[Core/src/Core.scala:25:26, :28:41] // verilator public_flat
  wire [31:0] writebackUop_1_bits_data = 32'h0;	// @[Core/src/Core.scala:23:38, :25:26] // verilator public_flat
  wire [31:0] writebackUop_1_bits_target = 32'h0;	// @[Core/src/Core.scala:23:38, :25:26] // verilator public_flat
  wire [31:0] writebackUop_2_bits_data = 32'h0;	// @[Core/src/Core.scala:23:38, :25:26] // verilator public_flat
  wire [31:0] writebackUop_2_bits_target = 32'h0;	// @[Core/src/Core.scala:23:38, :25:26] // verilator public_flat
  wire [31:0] writebackUop_3_bits_data = 32'h0;	// @[Core/src/Core.scala:23:38, :25:26] // verilator public_flat
  wire [31:0] writebackUop_3_bits_target = 32'h0;	// @[Core/src/Core.scala:23:38, :25:26] // verilator public_flat
  wire [3:0]  writebackUop_1_bits_flag = 4'h0;	// @[Core/src/Core.scala:25:26, :28:41] // verilator public_flat
  wire [3:0]  writebackUop_2_bits_flag = 4'h0;	// @[Core/src/Core.scala:25:26, :28:41] // verilator public_flat
  wire [3:0]  writebackUop_3_bits_flag = 4'h0;	// @[Core/src/Core.scala:25:26, :28:41] // verilator public_flat
  reg redirect_valid;  // @[Core/src/Core.scala:23:25]
  reg [31:0] redirect_pc;  // @[Core/src/Core.scala:23:25]
  always @(posedge clock) begin  // @[Core/src/Core.scala:6:7]
    if (reset) begin  // @[Core/src/Core.scala:6:7]
      redirect_valid <= 1'h0;  // @[Core/src/Core.scala:6:7, :23:25]
      redirect_pc <= 32'h0;  // @[Core/src/Core.scala:23:{25,38}]
    end else begin  // @[Core/src/Core.scala:6:7]
      redirect_valid <= _rob_io_OUT_redirect_valid;  // @[Core/src/Core.scala:16:19, :23:25]
      redirect_pc <= _rob_io_OUT_redirect_pc;  // @[Core/src/Core.scala:16:19, :23:25]
    end
  end  // always @(posedge)
`ifdef ENABLE_INITIAL_REG_  // @[Core/src/Core.scala:6:7]
`ifdef FIRRTL_BEFORE_INITIAL  // @[Core/src/Core.scala:6:7]
  `FIRRTL_BEFORE_INITIAL  // @[Core/src/Core.scala:6:7]
`endif  // FIRRTL_BEFORE_INITIAL
  logic [31:0] _RANDOM[0:1];  // @[Core/src/Core.scala:6:7]
  initial begin  // @[Core/src/Core.scala:6:7]
`ifdef INIT_RANDOM_PROLOG_  // @[Core/src/Core.scala:6:7]
    `INIT_RANDOM_PROLOG_  // @[Core/src/Core.scala:6:7]
`endif  // INIT_RANDOM_PROLOG_
`ifdef RANDOMIZE_REG_INIT  // @[Core/src/Core.scala:6:7]
    for (logic [1:0] i = 2'h0; i < 2'h2; i += 2'h1) begin
      _RANDOM[i[0]] = `RANDOM;  // @[Core/src/Core.scala:6:7]
    end  // @[Core/src/Core.scala:6:7]
    redirect_valid = _RANDOM[1'h0][0];  // @[Core/src/Core.scala:6:7, :23:25]
    redirect_pc = {_RANDOM[1'h0][31:1], _RANDOM[1'h1][0]};  // @[Core/src/Core.scala:6:7, :23:25]
`endif  // RANDOMIZE_REG_INIT
  end  // initial
`ifdef FIRRTL_AFTER_INITIAL  // @[Core/src/Core.scala:6:7]
  `FIRRTL_AFTER_INITIAL  // @[Core/src/Core.scala:6:7]
`endif  // FIRRTL_AFTER_INITIAL
`endif  // ENABLE_INITIAL_REG_
  IFU ifu (  // @[Core/src/Core.scala:13:19]
      .clock                 (clock),
      .reset                 (reset),
      .io_redirect_valid     (redirect_valid),         // @[Core/src/Core.scala:23:25]
      .io_redirect_pc        (redirect_pc),            // @[Core/src/Core.scala:23:25]
      .io_out_ready          (_idu_io_IN_inst_ready),  // @[Core/src/Core.scala:14:19]
      .io_out_valid          (_ifu_io_out_valid),
      .io_out_bits_pc        (_ifu_io_out_bits_pc),
      .io_out_bits_inst      (_ifu_io_out_bits_inst),
      .io_master_ar_ready    (io_master_arready),
      .io_master_ar_valid    (io_master_arvalid),
      .io_master_ar_bits_addr(io_master_araddr),
      .io_master_r_valid     (io_master_rvalid),
      .io_master_r_bits_data (io_master_rdata)
  );
  IDU idu (  // @[Core/src/Core.scala:14:19]
      .clock(clock),
      .reset(reset),
      .io_IN_inst_ready(_idu_io_IN_inst_ready),
      .io_IN_inst_valid(_ifu_io_out_valid),  // @[Core/src/Core.scala:13:19]
      .io_IN_inst_bits_pc(_ifu_io_out_bits_pc),  // @[Core/src/Core.scala:13:19]
      .io_IN_inst_bits_inst(_ifu_io_out_bits_inst),  // @[Core/src/Core.scala:13:19]
      .io_OUT_decodeUop_ready(_rename_io_IN_decodeUop_0_ready),  // @[Core/src/Core.scala:15:22]
      .io_OUT_decodeUop_valid(_idu_io_OUT_decodeUop_valid),
      .io_OUT_decodeUop_bits_rd(_idu_io_OUT_decodeUop_bits_rd),
      .io_OUT_decodeUop_bits_rs1(_idu_io_OUT_decodeUop_bits_rs1),
      .io_OUT_decodeUop_bits_rs2(_idu_io_OUT_decodeUop_bits_rs2),
      .io_OUT_decodeUop_bits_src1Type(_idu_io_OUT_decodeUop_bits_src1Type),
      .io_OUT_decodeUop_bits_src2Type(_idu_io_OUT_decodeUop_bits_src2Type),
      .io_OUT_decodeUop_bits_imm(_idu_io_OUT_decodeUop_bits_imm),
      .io_OUT_decodeUop_bits_pc(_idu_io_OUT_decodeUop_bits_pc),
      .io_OUT_decodeUop_bits_fuType(_idu_io_OUT_decodeUop_bits_fuType),
      .io_OUT_decodeUop_bits_opcode(_idu_io_OUT_decodeUop_bits_opcode),
      .io_OUT_decodeUop_bits_predTarget(_idu_io_OUT_decodeUop_bits_predTarget),
      .io_IN_flush(redirect_valid)  // @[Core/src/Core.scala:23:25]
  );
  wire       writebackUop_0_valid;  // @[Core/src/Core.scala:25:26] // verilator public_flat
  wire [5:0] writebackUop_0_bits_prd;  // @[Core/src/Core.scala:25:26] // verilator public_flat
  wire       commitUop_0_valid;  // @[Core/src/Core.scala:32:23] // verilator public_flat
  wire [4:0] commitUop_0_bits_rd;  // @[Core/src/Core.scala:32:23] // verilator public_flat
  wire [5:0] commitUop_0_bits_prd;  // @[Core/src/Core.scala:32:23] // verilator public_flat
  Rename rename (  // @[Core/src/Core.scala:15:22]
      .clock(clock),
      .reset(reset),
      .io_IN_decodeUop_0_ready(_rename_io_IN_decodeUop_0_ready),
      .io_IN_decodeUop_0_valid(_idu_io_OUT_decodeUop_valid),  // @[Core/src/Core.scala:14:19]
      .io_IN_decodeUop_0_bits_rd(_idu_io_OUT_decodeUop_bits_rd),  // @[Core/src/Core.scala:14:19]
      .io_IN_decodeUop_0_bits_rs1(_idu_io_OUT_decodeUop_bits_rs1),  // @[Core/src/Core.scala:14:19]
      .io_IN_decodeUop_0_bits_rs2(_idu_io_OUT_decodeUop_bits_rs2),  // @[Core/src/Core.scala:14:19]
      .io_IN_decodeUop_0_bits_src1Type   (_idu_io_OUT_decodeUop_bits_src1Type),	// @[Core/src/Core.scala:14:19]
      .io_IN_decodeUop_0_bits_src2Type   (_idu_io_OUT_decodeUop_bits_src2Type),	// @[Core/src/Core.scala:14:19]
      .io_IN_decodeUop_0_bits_imm(_idu_io_OUT_decodeUop_bits_imm),  // @[Core/src/Core.scala:14:19]
      .io_IN_decodeUop_0_bits_pc(_idu_io_OUT_decodeUop_bits_pc),  // @[Core/src/Core.scala:14:19]
      .io_IN_decodeUop_0_bits_fuType     (_idu_io_OUT_decodeUop_bits_fuType),	// @[Core/src/Core.scala:14:19]
      .io_IN_decodeUop_0_bits_opcode     (_idu_io_OUT_decodeUop_bits_opcode),	// @[Core/src/Core.scala:14:19]
      .io_IN_decodeUop_0_bits_predTarget (_idu_io_OUT_decodeUop_bits_predTarget),	// @[Core/src/Core.scala:14:19]
      .io_OUT_renameUop_0_rd(_rename_io_OUT_renameUop_0_rd),
      .io_OUT_renameUop_0_prd(_rename_io_OUT_renameUop_0_prd),
      .io_OUT_renameUop_0_prs1(_rename_io_OUT_renameUop_0_prs1),
      .io_OUT_renameUop_0_prs2(_rename_io_OUT_renameUop_0_prs2),
      .io_OUT_renameUop_0_src1Type(_rename_io_OUT_renameUop_0_src1Type),
      .io_OUT_renameUop_0_src2Type(_rename_io_OUT_renameUop_0_src2Type),
      .io_OUT_renameUop_0_src1Ready(_rename_io_OUT_renameUop_0_src1Ready),
      .io_OUT_renameUop_0_src2Ready(_rename_io_OUT_renameUop_0_src2Ready),
      .io_OUT_renameUop_0_robPtr_flag(_rename_io_OUT_renameUop_0_robPtr_flag),
      .io_OUT_renameUop_0_robPtr_index(_rename_io_OUT_renameUop_0_robPtr_index),
      .io_OUT_renameUop_0_imm(_rename_io_OUT_renameUop_0_imm),
      .io_OUT_renameUop_0_pc(_rename_io_OUT_renameUop_0_pc),
      .io_OUT_renameUop_0_fuType(_rename_io_OUT_renameUop_0_fuType),
      .io_OUT_renameUop_0_opcode(_rename_io_OUT_renameUop_0_opcode),
      .io_OUT_renameUop_0_predTarget(_rename_io_OUT_renameUop_0_predTarget),
      .io_OUT_robValid_0(_rename_io_OUT_robValid_0),
      .io_IN_robReady(_rob_io_OUT_renameUopReady),  // @[Core/src/Core.scala:16:19]
      .io_OUT_issueQueueValid_0(_rename_io_OUT_issueQueueValid_0),
      .io_IN_issueQueueReady_0           (_scheduler_io_OUT_issueQueueReady_0),	// @[Core/src/Core.scala:17:25]
      .io_IN_writebackUop_0_valid(writebackUop_0_valid),  // @[Core/src/Core.scala:25:26]
      .io_IN_writebackUop_0_bits_prd(writebackUop_0_bits_prd),  // @[Core/src/Core.scala:25:26]
      .io_IN_writebackUop_1_valid(writebackUop_1_valid),  // @[Core/src/Core.scala:25:26]
      .io_IN_writebackUop_1_bits_prd(writebackUop_1_bits_prd),  // @[Core/src/Core.scala:25:26]
      .io_IN_writebackUop_2_valid(writebackUop_2_valid),  // @[Core/src/Core.scala:25:26]
      .io_IN_writebackUop_2_bits_prd(writebackUop_2_bits_prd),  // @[Core/src/Core.scala:25:26]
      .io_IN_writebackUop_3_valid(writebackUop_3_valid),  // @[Core/src/Core.scala:25:26]
      .io_IN_writebackUop_3_bits_prd(writebackUop_3_bits_prd),  // @[Core/src/Core.scala:25:26]
      .io_IN_commitUop_0_valid(commitUop_0_valid),  // @[Core/src/Core.scala:32:23]
      .io_IN_commitUop_0_bits_rd(commitUop_0_bits_rd),  // @[Core/src/Core.scala:32:23]
      .io_IN_commitUop_0_bits_prd(commitUop_0_bits_prd),  // @[Core/src/Core.scala:32:23]
      .io_OUT_robHeadPtr_flag(_rename_io_OUT_robHeadPtr_flag),
      .io_OUT_robHeadPtr_index(_rename_io_OUT_robHeadPtr_index),
      .io_IN_flush(redirect_valid)  // @[Core/src/Core.scala:23:25]
  );
  wire [5:0]  writebackUop_0_bits_robPtr_index;	// @[Core/src/Core.scala:25:26] // verilator public_flat
  wire [3:0] writebackUop_0_bits_flag;  // @[Core/src/Core.scala:25:26] // verilator public_flat
  wire [31:0] writebackUop_0_bits_target;  // @[Core/src/Core.scala:25:26] // verilator public_flat
  ROB rob (  // @[Core/src/Core.scala:16:19]
      .clock(clock),
      .reset(reset),
      .io_IN_renameUop_0_valid(_rename_io_OUT_robValid_0),  // @[Core/src/Core.scala:15:22]
      .io_IN_renameUop_0_bits_rd(_rename_io_OUT_renameUop_0_rd),  // @[Core/src/Core.scala:15:22]
      .io_IN_renameUop_0_bits_prd(_rename_io_OUT_renameUop_0_prd),  // @[Core/src/Core.scala:15:22]
      .io_IN_renameUop_0_bits_robPtr_index    (_rename_io_OUT_renameUop_0_robPtr_index),	// @[Core/src/Core.scala:15:22]
      .io_OUT_renameUopReady(_rob_io_OUT_renameUopReady),
      .io_IN_writebackUop_0_valid(writebackUop_0_valid),  // @[Core/src/Core.scala:25:26]
      .io_IN_writebackUop_0_bits_robPtr_index (writebackUop_0_bits_robPtr_index),	// @[Core/src/Core.scala:25:26]
      .io_IN_writebackUop_0_bits_flag(writebackUop_0_bits_flag),  // @[Core/src/Core.scala:25:26]
      .io_IN_writebackUop_0_bits_target       (writebackUop_0_bits_target),	// @[Core/src/Core.scala:25:26]
      .io_IN_writebackUop_1_valid(writebackUop_1_valid),  // @[Core/src/Core.scala:25:26]
      .io_IN_writebackUop_1_bits_robPtr_index (writebackUop_1_bits_robPtr_index),	// @[Core/src/Core.scala:25:26]
      .io_IN_writebackUop_1_bits_flag(writebackUop_1_bits_flag),  // @[Core/src/Core.scala:25:26]
      .io_IN_writebackUop_1_bits_target       (writebackUop_1_bits_target),	// @[Core/src/Core.scala:25:26]
      .io_IN_writebackUop_2_valid(writebackUop_2_valid),  // @[Core/src/Core.scala:25:26]
      .io_IN_writebackUop_2_bits_robPtr_index (writebackUop_2_bits_robPtr_index),	// @[Core/src/Core.scala:25:26]
      .io_IN_writebackUop_2_bits_flag(writebackUop_2_bits_flag),  // @[Core/src/Core.scala:25:26]
      .io_IN_writebackUop_2_bits_target       (writebackUop_2_bits_target),	// @[Core/src/Core.scala:25:26]
      .io_IN_writebackUop_3_valid(writebackUop_3_valid),  // @[Core/src/Core.scala:25:26]
      .io_IN_writebackUop_3_bits_robPtr_index (writebackUop_3_bits_robPtr_index),	// @[Core/src/Core.scala:25:26]
      .io_IN_writebackUop_3_bits_flag(writebackUop_3_bits_flag),  // @[Core/src/Core.scala:25:26]
      .io_IN_writebackUop_3_bits_target       (writebackUop_3_bits_target),	// @[Core/src/Core.scala:25:26]
      .io_OUT_commitUop_0_valid(commitUop_0_valid),
      .io_OUT_commitUop_0_bits_rd(commitUop_0_bits_rd),
      .io_OUT_commitUop_0_bits_prd(commitUop_0_bits_prd),
      .io_IN_renameRobHeadPtr_flag(_rename_io_OUT_robHeadPtr_flag),  // @[Core/src/Core.scala:15:22]
      .io_IN_renameRobHeadPtr_index           (_rename_io_OUT_robHeadPtr_index),	// @[Core/src/Core.scala:15:22]
      .io_OUT_redirect_valid(_rob_io_OUT_redirect_valid),
      .io_OUT_redirect_pc(_rob_io_OUT_redirect_pc),
      .io_IN_flush(redirect_valid)  // @[Core/src/Core.scala:23:25]
  );
  Scheduler scheduler (  // @[Core/src/Core.scala:17:25]
      .io_IN_renameUop_0_prd(_rename_io_OUT_renameUop_0_prd),  // @[Core/src/Core.scala:15:22]
      .io_IN_renameUop_0_prs1(_rename_io_OUT_renameUop_0_prs1),  // @[Core/src/Core.scala:15:22]
      .io_IN_renameUop_0_prs2(_rename_io_OUT_renameUop_0_prs2),  // @[Core/src/Core.scala:15:22]
      .io_IN_renameUop_0_src1Type           (_rename_io_OUT_renameUop_0_src1Type),	// @[Core/src/Core.scala:15:22]
      .io_IN_renameUop_0_src2Type           (_rename_io_OUT_renameUop_0_src2Type),	// @[Core/src/Core.scala:15:22]
      .io_IN_renameUop_0_src1Ready          (_rename_io_OUT_renameUop_0_src1Ready),	// @[Core/src/Core.scala:15:22]
      .io_IN_renameUop_0_src2Ready          (_rename_io_OUT_renameUop_0_src2Ready),	// @[Core/src/Core.scala:15:22]
      .io_IN_renameUop_0_robPtr_flag        (_rename_io_OUT_renameUop_0_robPtr_flag),	// @[Core/src/Core.scala:15:22]
      .io_IN_renameUop_0_robPtr_index       (_rename_io_OUT_renameUop_0_robPtr_index),	// @[Core/src/Core.scala:15:22]
      .io_IN_renameUop_0_imm(_rename_io_OUT_renameUop_0_imm),  // @[Core/src/Core.scala:15:22]
      .io_IN_renameUop_0_pc(_rename_io_OUT_renameUop_0_pc),  // @[Core/src/Core.scala:15:22]
      .io_IN_renameUop_0_fuType(_rename_io_OUT_renameUop_0_fuType),  // @[Core/src/Core.scala:15:22]
      .io_IN_renameUop_0_opcode(_rename_io_OUT_renameUop_0_opcode),  // @[Core/src/Core.scala:15:22]
      .io_IN_renameUop_0_predTarget         (_rename_io_OUT_renameUop_0_predTarget),	// @[Core/src/Core.scala:15:22]
      .io_IN_issueQueueValid_0(_rename_io_OUT_issueQueueValid_0),  // @[Core/src/Core.scala:15:22]
      .io_OUT_issueQueueReady_0(_scheduler_io_OUT_issueQueueReady_0),
      .io_OUT_renameUop_0_ready(_iq_0_io_IN_renameUop_ready),  // @[Core/src/Core.scala:18:42]
      .io_OUT_renameUop_0_valid(_scheduler_io_OUT_renameUop_0_valid),
      .io_OUT_renameUop_0_bits_prd(_scheduler_io_OUT_renameUop_0_bits_prd),
      .io_OUT_renameUop_0_bits_prs1(_scheduler_io_OUT_renameUop_0_bits_prs1),
      .io_OUT_renameUop_0_bits_prs2(_scheduler_io_OUT_renameUop_0_bits_prs2),
      .io_OUT_renameUop_0_bits_src1Type(_scheduler_io_OUT_renameUop_0_bits_src1Type),
      .io_OUT_renameUop_0_bits_src2Type(_scheduler_io_OUT_renameUop_0_bits_src2Type),
      .io_OUT_renameUop_0_bits_src1Ready(_scheduler_io_OUT_renameUop_0_bits_src1Ready),
      .io_OUT_renameUop_0_bits_src2Ready(_scheduler_io_OUT_renameUop_0_bits_src2Ready),
      .io_OUT_renameUop_0_bits_robPtr_flag(_scheduler_io_OUT_renameUop_0_bits_robPtr_flag),
      .io_OUT_renameUop_0_bits_robPtr_index(_scheduler_io_OUT_renameUop_0_bits_robPtr_index),
      .io_OUT_renameUop_0_bits_imm(_scheduler_io_OUT_renameUop_0_bits_imm),
      .io_OUT_renameUop_0_bits_pc(_scheduler_io_OUT_renameUop_0_bits_pc),
      .io_OUT_renameUop_0_bits_fuType(_scheduler_io_OUT_renameUop_0_bits_fuType),
      .io_OUT_renameUop_0_bits_opcode(_scheduler_io_OUT_renameUop_0_bits_opcode),
      .io_OUT_renameUop_0_bits_predTarget(_scheduler_io_OUT_renameUop_0_bits_predTarget)
  );
  IssueQueue iq_0 (  // @[Core/src/Core.scala:18:42]
      .clock(clock),
      .reset(reset),
      .io_IN_renameUop_ready(_iq_0_io_IN_renameUop_ready),
      .io_IN_renameUop_valid(_scheduler_io_OUT_renameUop_0_valid),  // @[Core/src/Core.scala:17:25]
      .io_IN_renameUop_bits_prd          (_scheduler_io_OUT_renameUop_0_bits_prd),	// @[Core/src/Core.scala:17:25]
      .io_IN_renameUop_bits_prs1         (_scheduler_io_OUT_renameUop_0_bits_prs1),	// @[Core/src/Core.scala:17:25]
      .io_IN_renameUop_bits_prs2         (_scheduler_io_OUT_renameUop_0_bits_prs2),	// @[Core/src/Core.scala:17:25]
      .io_IN_renameUop_bits_src1Type     (_scheduler_io_OUT_renameUop_0_bits_src1Type),	// @[Core/src/Core.scala:17:25]
      .io_IN_renameUop_bits_src2Type     (_scheduler_io_OUT_renameUop_0_bits_src2Type),	// @[Core/src/Core.scala:17:25]
      .io_IN_renameUop_bits_src1Ready    (_scheduler_io_OUT_renameUop_0_bits_src1Ready),	// @[Core/src/Core.scala:17:25]
      .io_IN_renameUop_bits_src2Ready    (_scheduler_io_OUT_renameUop_0_bits_src2Ready),	// @[Core/src/Core.scala:17:25]
      .io_IN_renameUop_bits_robPtr_flag  (_scheduler_io_OUT_renameUop_0_bits_robPtr_flag),	// @[Core/src/Core.scala:17:25]
      .io_IN_renameUop_bits_robPtr_index (_scheduler_io_OUT_renameUop_0_bits_robPtr_index),	// @[Core/src/Core.scala:17:25]
      .io_IN_renameUop_bits_imm          (_scheduler_io_OUT_renameUop_0_bits_imm),	// @[Core/src/Core.scala:17:25]
      .io_IN_renameUop_bits_pc           (_scheduler_io_OUT_renameUop_0_bits_pc),	// @[Core/src/Core.scala:17:25]
      .io_IN_renameUop_bits_fuType       (_scheduler_io_OUT_renameUop_0_bits_fuType),	// @[Core/src/Core.scala:17:25]
      .io_IN_renameUop_bits_opcode       (_scheduler_io_OUT_renameUop_0_bits_opcode),	// @[Core/src/Core.scala:17:25]
      .io_IN_renameUop_bits_predTarget   (_scheduler_io_OUT_renameUop_0_bits_predTarget),	// @[Core/src/Core.scala:17:25]
      .io_IN_writebackUop_0_valid(writebackUop_0_valid),  // @[Core/src/Core.scala:25:26]
      .io_IN_writebackUop_0_bits_prd(writebackUop_0_bits_prd),  // @[Core/src/Core.scala:25:26]
      .io_IN_writebackUop_1_valid(writebackUop_1_valid),  // @[Core/src/Core.scala:25:26]
      .io_IN_writebackUop_1_bits_prd(writebackUop_1_bits_prd),  // @[Core/src/Core.scala:25:26]
      .io_IN_writebackUop_2_valid(writebackUop_2_valid),  // @[Core/src/Core.scala:25:26]
      .io_IN_writebackUop_2_bits_prd(writebackUop_2_bits_prd),  // @[Core/src/Core.scala:25:26]
      .io_IN_writebackUop_3_valid(writebackUop_3_valid),  // @[Core/src/Core.scala:25:26]
      .io_IN_writebackUop_3_bits_prd(writebackUop_3_bits_prd),  // @[Core/src/Core.scala:25:26]
      .io_OUT_issueUop_valid(_iq_0_io_OUT_issueUop_valid),
      .io_OUT_issueUop_bits_prd(_iq_0_io_OUT_issueUop_bits_prd),
      .io_OUT_issueUop_bits_prs1(_iq_0_io_OUT_issueUop_bits_prs1),
      .io_OUT_issueUop_bits_prs2(_iq_0_io_OUT_issueUop_bits_prs2),
      .io_OUT_issueUop_bits_src1Type(_iq_0_io_OUT_issueUop_bits_src1Type),
      .io_OUT_issueUop_bits_src2Type(_iq_0_io_OUT_issueUop_bits_src2Type),
      .io_OUT_issueUop_bits_robPtr_flag(_iq_0_io_OUT_issueUop_bits_robPtr_flag),
      .io_OUT_issueUop_bits_robPtr_index(_iq_0_io_OUT_issueUop_bits_robPtr_index),
      .io_OUT_issueUop_bits_imm(_iq_0_io_OUT_issueUop_bits_imm),
      .io_OUT_issueUop_bits_pc(_iq_0_io_OUT_issueUop_bits_pc),
      .io_OUT_issueUop_bits_fuType(_iq_0_io_OUT_issueUop_bits_fuType),
      .io_OUT_issueUop_bits_opcode(_iq_0_io_OUT_issueUop_bits_opcode),
      .io_OUT_issueUop_bits_predTarget(_iq_0_io_OUT_issueUop_bits_predTarget),
      .io_IN_flush(redirect_valid)  // @[Core/src/Core.scala:23:25]
  );
  ReadReg readReg (  // @[Core/src/Core.scala:19:23]
      .clock(clock),
      .reset(reset),
      .io_IN_issueUop_0_valid(_iq_0_io_OUT_issueUop_valid),  // @[Core/src/Core.scala:18:42]
      .io_IN_issueUop_0_bits_prd(_iq_0_io_OUT_issueUop_bits_prd),  // @[Core/src/Core.scala:18:42]
      .io_IN_issueUop_0_bits_prs1(_iq_0_io_OUT_issueUop_bits_prs1),  // @[Core/src/Core.scala:18:42]
      .io_IN_issueUop_0_bits_prs2(_iq_0_io_OUT_issueUop_bits_prs2),  // @[Core/src/Core.scala:18:42]
      .io_IN_issueUop_0_bits_src1Type        (_iq_0_io_OUT_issueUop_bits_src1Type),	// @[Core/src/Core.scala:18:42]
      .io_IN_issueUop_0_bits_src2Type        (_iq_0_io_OUT_issueUop_bits_src2Type),	// @[Core/src/Core.scala:18:42]
      .io_IN_issueUop_0_bits_robPtr_flag     (_iq_0_io_OUT_issueUop_bits_robPtr_flag),	// @[Core/src/Core.scala:18:42]
      .io_IN_issueUop_0_bits_robPtr_index    (_iq_0_io_OUT_issueUop_bits_robPtr_index),	// @[Core/src/Core.scala:18:42]
      .io_IN_issueUop_0_bits_imm(_iq_0_io_OUT_issueUop_bits_imm),  // @[Core/src/Core.scala:18:42]
      .io_IN_issueUop_0_bits_pc(_iq_0_io_OUT_issueUop_bits_pc),  // @[Core/src/Core.scala:18:42]
      .io_IN_issueUop_0_bits_fuType          (_iq_0_io_OUT_issueUop_bits_fuType),	// @[Core/src/Core.scala:18:42]
      .io_IN_issueUop_0_bits_opcode          (_iq_0_io_OUT_issueUop_bits_opcode),	// @[Core/src/Core.scala:18:42]
      .io_IN_issueUop_0_bits_predTarget      (_iq_0_io_OUT_issueUop_bits_predTarget),	// @[Core/src/Core.scala:18:42]
      .io_OUT_readRegIndex_0_0(_readReg_io_OUT_readRegIndex_0_0),
      .io_OUT_readRegIndex_0_1(_readReg_io_OUT_readRegIndex_0_1),
      .io_IN_readRegVal_0_0(_pReg_io_OUT_pRegVal_0_0),  // @[Core/src/Core.scala:20:20]
      .io_IN_readRegVal_0_1(_pReg_io_OUT_pRegVal_0_1),  // @[Core/src/Core.scala:20:20]
      .io_OUT_readRegUop_0_valid(_readReg_io_OUT_readRegUop_0_valid),
      .io_OUT_readRegUop_0_bits_prd(_readReg_io_OUT_readRegUop_0_bits_prd),
      .io_OUT_readRegUop_0_bits_src1(_readReg_io_OUT_readRegUop_0_bits_src1),
      .io_OUT_readRegUop_0_bits_src2(_readReg_io_OUT_readRegUop_0_bits_src2),
      .io_OUT_readRegUop_0_bits_robPtr_flag(_readReg_io_OUT_readRegUop_0_bits_robPtr_flag),
      .io_OUT_readRegUop_0_bits_robPtr_index(_readReg_io_OUT_readRegUop_0_bits_robPtr_index),
      .io_OUT_readRegUop_0_bits_imm(_readReg_io_OUT_readRegUop_0_bits_imm),
      .io_OUT_readRegUop_0_bits_pc(_readReg_io_OUT_readRegUop_0_bits_pc),
      .io_OUT_readRegUop_0_bits_fuType(_readReg_io_OUT_readRegUop_0_bits_fuType),
      .io_OUT_readRegUop_0_bits_opcode(_readReg_io_OUT_readRegUop_0_bits_opcode),
      .io_OUT_readRegUop_0_bits_predTarget(_readReg_io_OUT_readRegUop_0_bits_predTarget)
  );
  wire [31:0] writebackUop_0_bits_data;  // @[Core/src/Core.scala:25:26] // verilator public_flat
  PReg pReg (  // @[Core/src/Core.scala:20:20]
      .clock(clock),
      .io_IN_pRegIndex_0_0(_readReg_io_OUT_readRegIndex_0_0),  // @[Core/src/Core.scala:19:23]
      .io_IN_pRegIndex_0_1(_readReg_io_OUT_readRegIndex_0_1),  // @[Core/src/Core.scala:19:23]
      .io_IN_writebackUop_0_valid(writebackUop_0_valid),  // @[Core/src/Core.scala:25:26]
      .io_IN_writebackUop_0_bits_prd(writebackUop_0_bits_prd),  // @[Core/src/Core.scala:25:26]
      .io_IN_writebackUop_0_bits_data(writebackUop_0_bits_data),  // @[Core/src/Core.scala:25:26]
      .io_IN_writebackUop_1_valid(writebackUop_1_valid),  // @[Core/src/Core.scala:25:26]
      .io_IN_writebackUop_1_bits_prd(writebackUop_1_bits_prd),  // @[Core/src/Core.scala:25:26]
      .io_IN_writebackUop_1_bits_data(writebackUop_1_bits_data),  // @[Core/src/Core.scala:25:26]
      .io_IN_writebackUop_2_valid(writebackUop_2_valid),  // @[Core/src/Core.scala:25:26]
      .io_IN_writebackUop_2_bits_prd(writebackUop_2_bits_prd),  // @[Core/src/Core.scala:25:26]
      .io_IN_writebackUop_2_bits_data(writebackUop_2_bits_data),  // @[Core/src/Core.scala:25:26]
      .io_IN_writebackUop_3_valid(writebackUop_3_valid),  // @[Core/src/Core.scala:25:26]
      .io_IN_writebackUop_3_bits_prd(writebackUop_3_bits_prd),  // @[Core/src/Core.scala:25:26]
      .io_IN_writebackUop_3_bits_data(writebackUop_3_bits_data),  // @[Core/src/Core.scala:25:26]
      .io_OUT_pRegVal_0_0(_pReg_io_OUT_pRegVal_0_0),
      .io_OUT_pRegVal_0_1(_pReg_io_OUT_pRegVal_0_1)
  );
  ALU alu (  // @[Core/src/Core.scala:21:19]
      .clock(clock),
      .reset(reset),
      .io_IN_readRegUop_valid(_readReg_io_OUT_readRegUop_0_valid),  // @[Core/src/Core.scala:19:23]
      .io_IN_readRegUop_bits_prd             (_readReg_io_OUT_readRegUop_0_bits_prd),	// @[Core/src/Core.scala:19:23]
      .io_IN_readRegUop_bits_src1            (_readReg_io_OUT_readRegUop_0_bits_src1),	// @[Core/src/Core.scala:19:23]
      .io_IN_readRegUop_bits_src2            (_readReg_io_OUT_readRegUop_0_bits_src2),	// @[Core/src/Core.scala:19:23]
      .io_IN_readRegUop_bits_robPtr_flag
      (_readReg_io_OUT_readRegUop_0_bits_robPtr_flag),	// @[Core/src/Core.scala:19:23]
      .io_IN_readRegUop_bits_robPtr_index
      (_readReg_io_OUT_readRegUop_0_bits_robPtr_index),	// @[Core/src/Core.scala:19:23]
      .io_IN_readRegUop_bits_imm             (_readReg_io_OUT_readRegUop_0_bits_imm),	// @[Core/src/Core.scala:19:23]
      .io_IN_readRegUop_bits_pc              (_readReg_io_OUT_readRegUop_0_bits_pc),	// @[Core/src/Core.scala:19:23]
      .io_IN_readRegUop_bits_fuType          (_readReg_io_OUT_readRegUop_0_bits_fuType),	// @[Core/src/Core.scala:19:23]
      .io_IN_readRegUop_bits_opcode          (_readReg_io_OUT_readRegUop_0_bits_opcode),	// @[Core/src/Core.scala:19:23]
      .io_IN_readRegUop_bits_predTarget      (_readReg_io_OUT_readRegUop_0_bits_predTarget),	// @[Core/src/Core.scala:19:23]
      .io_OUT_writebackUop_valid(writebackUop_0_valid),
      .io_OUT_writebackUop_bits_prd(writebackUop_0_bits_prd),
      .io_OUT_writebackUop_bits_data(writebackUop_0_bits_data),
      .io_OUT_writebackUop_bits_robPtr_flag(writebackUop_0_bits_robPtr_flag),
      .io_OUT_writebackUop_bits_robPtr_index(writebackUop_0_bits_robPtr_index),
      .io_OUT_writebackUop_bits_flag(writebackUop_0_bits_flag),
      .io_OUT_writebackUop_bits_target(writebackUop_0_bits_target)
  );
endmodule
