// Generated by CIRCT firtool-1.62.1
module Core(
  input          clock,
                 reset,
                 io_master_awready,
  output         io_master_awvalid,
  output [31:0]  io_master_awaddr,
  output [3:0]   io_master_awid,
  output [7:0]   io_master_awlen,
  output [2:0]   io_master_awsize,
  output [1:0]   io_master_awburst,
  input          io_master_wready,
  output         io_master_wvalid,
  output [255:0] io_master_wdata,
  output [31:0]  io_master_wstrb,
  output         io_master_wlast,
                 io_master_bready,
  input          io_master_bvalid,
  input  [1:0]   io_master_bresp,
  input  [3:0]   io_master_bid,
  input          io_master_arready,
  output         io_master_arvalid,
  output [31:0]  io_master_araddr,
  output [3:0]   io_master_arid,
  output [7:0]   io_master_arlen,
  output [2:0]   io_master_arsize,
  output [1:0]   io_master_arburst,
  output         io_master_rready,
  input          io_master_rvalid,
  input  [1:0]   io_master_rresp,
  input  [255:0] io_master_rdata,
  input          io_master_rlast,
  input  [3:0]   io_master_rid
);

  wire         writebackUop_1_bits_robPtr_flag /*verilator public_flat*/;
  wire         writebackUop_0_bits_robPtr_flag /*verilator public_flat*/;
  wire         writebackUop_3_bits_robPtr_flag /*verilator public_flat*/;
  wire         aguUop_bits_compressed /*verilator public_flat*/;
  wire [31:0]  aguUop_bits_predTarget /*verilator public_flat*/;
  wire [3:0]   aguUop_bits_opcode /*verilator public_flat*/;
  wire [3:0]   aguUop_bits_fuType /*verilator public_flat*/;
  wire [3:0]   aguUop_bits_stqPtr_index /*verilator public_flat*/;
  wire         aguUop_bits_stqPtr_flag /*verilator public_flat*/;
  wire [3:0]   aguUop_bits_ldqPtr_index /*verilator public_flat*/;
  wire         aguUop_bits_ldqPtr_flag /*verilator public_flat*/;
  wire [4:0]   aguUop_bits_robPtr_index /*verilator public_flat*/;
  wire         aguUop_bits_robPtr_flag /*verilator public_flat*/;
  wire         aguUop_bits_dest /*verilator public_flat*/;
  wire [31:0]  aguUop_bits_wdata /*verilator public_flat*/;
  wire [31:0]  aguUop_bits_addr /*verilator public_flat*/;
  wire [5:0]   aguUop_bits_prd /*verilator public_flat*/;
  wire         aguUop_valid /*verilator public_flat*/;
  wire         writebackUop_4_bits_robPtr_flag /*verilator public_flat*/;
  wire         writebackUop_2_bits_robPtr_flag /*verilator public_flat*/;
  wire         readRegUop_3_bits_compressed /*verilator public_flat*/;
  wire [31:0]  readRegUop_3_bits_predTarget /*verilator public_flat*/;
  wire [3:0]   readRegUop_3_bits_opcode /*verilator public_flat*/;
  wire [3:0]   readRegUop_3_bits_fuType /*verilator public_flat*/;
  wire [31:0]  readRegUop_3_bits_pc /*verilator public_flat*/;
  wire [31:0]  readRegUop_3_bits_imm /*verilator public_flat*/;
  wire [3:0]   readRegUop_3_bits_stqPtr_index /*verilator public_flat*/;
  wire         readRegUop_3_bits_stqPtr_flag /*verilator public_flat*/;
  wire [3:0]   readRegUop_3_bits_ldqPtr_index /*verilator public_flat*/;
  wire         readRegUop_3_bits_ldqPtr_flag /*verilator public_flat*/;
  wire [4:0]   readRegUop_3_bits_robPtr_index /*verilator public_flat*/;
  wire         readRegUop_3_bits_robPtr_flag /*verilator public_flat*/;
  wire [31:0]  readRegUop_3_bits_src2 /*verilator public_flat*/;
  wire [31:0]  readRegUop_3_bits_src1 /*verilator public_flat*/;
  wire [5:0]   readRegUop_3_bits_prs2 /*verilator public_flat*/;
  wire [5:0]   readRegUop_3_bits_prs1 /*verilator public_flat*/;
  wire [5:0]   readRegUop_3_bits_prd /*verilator public_flat*/;
  wire [4:0]   readRegUop_3_bits_rd /*verilator public_flat*/;
  wire         readRegUop_3_valid /*verilator public_flat*/;
  wire         readRegUop_2_bits_compressed /*verilator public_flat*/;
  wire [31:0]  readRegUop_2_bits_predTarget /*verilator public_flat*/;
  wire [3:0]   readRegUop_2_bits_opcode /*verilator public_flat*/;
  wire [3:0]   readRegUop_2_bits_fuType /*verilator public_flat*/;
  wire [31:0]  readRegUop_2_bits_pc /*verilator public_flat*/;
  wire [31:0]  readRegUop_2_bits_imm /*verilator public_flat*/;
  wire [3:0]   readRegUop_2_bits_stqPtr_index /*verilator public_flat*/;
  wire         readRegUop_2_bits_stqPtr_flag /*verilator public_flat*/;
  wire [3:0]   readRegUop_2_bits_ldqPtr_index /*verilator public_flat*/;
  wire         readRegUop_2_bits_ldqPtr_flag /*verilator public_flat*/;
  wire [4:0]   readRegUop_2_bits_robPtr_index /*verilator public_flat*/;
  wire         readRegUop_2_bits_robPtr_flag /*verilator public_flat*/;
  wire [31:0]  readRegUop_2_bits_src2 /*verilator public_flat*/;
  wire [31:0]  readRegUop_2_bits_src1 /*verilator public_flat*/;
  wire [5:0]   readRegUop_2_bits_prs2 /*verilator public_flat*/;
  wire [5:0]   readRegUop_2_bits_prs1 /*verilator public_flat*/;
  wire [5:0]   readRegUop_2_bits_prd /*verilator public_flat*/;
  wire [4:0]   readRegUop_2_bits_rd /*verilator public_flat*/;
  wire         readRegUop_2_valid /*verilator public_flat*/;
  wire         readRegUop_1_bits_compressed /*verilator public_flat*/;
  wire [31:0]  readRegUop_1_bits_predTarget /*verilator public_flat*/;
  wire [31:0]  readRegUop_1_bits_pc /*verilator public_flat*/;
  wire [31:0]  readRegUop_1_bits_imm /*verilator public_flat*/;
  wire [3:0]   readRegUop_1_bits_stqPtr_index /*verilator public_flat*/;
  wire         readRegUop_1_bits_stqPtr_flag /*verilator public_flat*/;
  wire [3:0]   readRegUop_1_bits_ldqPtr_index /*verilator public_flat*/;
  wire         readRegUop_1_bits_ldqPtr_flag /*verilator public_flat*/;
  wire [5:0]   readRegUop_1_bits_prs2 /*verilator public_flat*/;
  wire [5:0]   readRegUop_1_bits_prs1 /*verilator public_flat*/;
  wire [4:0]   readRegUop_1_bits_rd /*verilator public_flat*/;
  wire         readRegUop_0_bits_compressed /*verilator public_flat*/;
  wire [31:0]  readRegUop_0_bits_predTarget /*verilator public_flat*/;
  wire [3:0]   readRegUop_0_bits_stqPtr_index /*verilator public_flat*/;
  wire         readRegUop_0_bits_stqPtr_flag /*verilator public_flat*/;
  wire [3:0]   readRegUop_0_bits_ldqPtr_index /*verilator public_flat*/;
  wire         readRegUop_0_bits_ldqPtr_flag /*verilator public_flat*/;
  wire [5:0]   readRegUop_0_bits_prs2 /*verilator public_flat*/;
  wire [5:0]   readRegUop_0_bits_prs1 /*verilator public_flat*/;
  wire [4:0]   readRegUop_0_bits_rd /*verilator public_flat*/;
  wire         readRegUop_1_ready /*verilator public_flat*/;
  wire [31:0]  issueUop_3_bits_inst /*verilator public_flat*/;
  wire [4:0]   issueUop_3_bits_rs2 /*verilator public_flat*/;
  wire [4:0]   issueUop_3_bits_rs1 /*verilator public_flat*/;
  wire         issueUop_3_bits_lastBranch /*verilator public_flat*/;
  wire         issueUop_3_bits_compressed /*verilator public_flat*/;
  wire [31:0]  issueUop_3_bits_predTarget /*verilator public_flat*/;
  wire         issueUop_3_bits_lockBackend /*verilator public_flat*/;
  wire [3:0]   issueUop_3_bits_opcode /*verilator public_flat*/;
  wire [3:0]   issueUop_3_bits_fuType /*verilator public_flat*/;
  wire [31:0]  issueUop_3_bits_pc /*verilator public_flat*/;
  wire [31:0]  issueUop_3_bits_imm /*verilator public_flat*/;
  wire [3:0]   issueUop_3_bits_stqPtr_index /*verilator public_flat*/;
  wire         issueUop_3_bits_stqPtr_flag /*verilator public_flat*/;
  wire [3:0]   issueUop_3_bits_ldqPtr_index /*verilator public_flat*/;
  wire         issueUop_3_bits_ldqPtr_flag /*verilator public_flat*/;
  wire [4:0]   issueUop_3_bits_robPtr_index /*verilator public_flat*/;
  wire         issueUop_3_bits_robPtr_flag /*verilator public_flat*/;
  wire         issueUop_3_bits_src2Ready /*verilator public_flat*/;
  wire         issueUop_3_bits_src1Ready /*verilator public_flat*/;
  wire [1:0]   issueUop_3_bits_src2Type /*verilator public_flat*/;
  wire [1:0]   issueUop_3_bits_src1Type /*verilator public_flat*/;
  wire [5:0]   issueUop_3_bits_prs2 /*verilator public_flat*/;
  wire [5:0]   issueUop_3_bits_prs1 /*verilator public_flat*/;
  wire [5:0]   issueUop_3_bits_prd /*verilator public_flat*/;
  wire [4:0]   issueUop_3_bits_rd /*verilator public_flat*/;
  wire         issueUop_3_valid /*verilator public_flat*/;
  wire [31:0]  issueUop_2_bits_inst /*verilator public_flat*/;
  wire [4:0]   issueUop_2_bits_rs2 /*verilator public_flat*/;
  wire [4:0]   issueUop_2_bits_rs1 /*verilator public_flat*/;
  wire         issueUop_2_bits_lastBranch /*verilator public_flat*/;
  wire         issueUop_2_bits_compressed /*verilator public_flat*/;
  wire [31:0]  issueUop_2_bits_predTarget /*verilator public_flat*/;
  wire         issueUop_2_bits_lockBackend /*verilator public_flat*/;
  wire [3:0]   issueUop_2_bits_opcode /*verilator public_flat*/;
  wire [31:0]  issueUop_2_bits_pc /*verilator public_flat*/;
  wire [31:0]  issueUop_2_bits_imm /*verilator public_flat*/;
  wire [3:0]   issueUop_2_bits_stqPtr_index /*verilator public_flat*/;
  wire         issueUop_2_bits_stqPtr_flag /*verilator public_flat*/;
  wire [3:0]   issueUop_2_bits_ldqPtr_index /*verilator public_flat*/;
  wire         issueUop_2_bits_ldqPtr_flag /*verilator public_flat*/;
  wire [4:0]   issueUop_2_bits_robPtr_index /*verilator public_flat*/;
  wire         issueUop_2_bits_robPtr_flag /*verilator public_flat*/;
  wire         issueUop_2_bits_src2Ready /*verilator public_flat*/;
  wire         issueUop_2_bits_src1Ready /*verilator public_flat*/;
  wire [1:0]   issueUop_2_bits_src2Type /*verilator public_flat*/;
  wire [1:0]   issueUop_2_bits_src1Type /*verilator public_flat*/;
  wire [5:0]   issueUop_2_bits_prs2 /*verilator public_flat*/;
  wire [5:0]   issueUop_2_bits_prs1 /*verilator public_flat*/;
  wire [4:0]   issueUop_2_bits_rd /*verilator public_flat*/;
  wire [31:0]  issueUop_1_bits_inst /*verilator public_flat*/;
  wire [4:0]   issueUop_1_bits_rs2 /*verilator public_flat*/;
  wire [4:0]   issueUop_1_bits_rs1 /*verilator public_flat*/;
  wire         issueUop_1_bits_lastBranch /*verilator public_flat*/;
  wire         issueUop_1_bits_compressed /*verilator public_flat*/;
  wire [31:0]  issueUop_1_bits_predTarget /*verilator public_flat*/;
  wire         issueUop_1_bits_lockBackend /*verilator public_flat*/;
  wire [3:0]   issueUop_1_bits_opcode /*verilator public_flat*/;
  wire [31:0]  issueUop_1_bits_pc /*verilator public_flat*/;
  wire [31:0]  issueUop_1_bits_imm /*verilator public_flat*/;
  wire [3:0]   issueUop_1_bits_stqPtr_index /*verilator public_flat*/;
  wire         issueUop_1_bits_stqPtr_flag /*verilator public_flat*/;
  wire [3:0]   issueUop_1_bits_ldqPtr_index /*verilator public_flat*/;
  wire         issueUop_1_bits_ldqPtr_flag /*verilator public_flat*/;
  wire [4:0]   issueUop_1_bits_robPtr_index /*verilator public_flat*/;
  wire         issueUop_1_bits_robPtr_flag /*verilator public_flat*/;
  wire         issueUop_1_bits_src2Ready /*verilator public_flat*/;
  wire         issueUop_1_bits_src1Ready /*verilator public_flat*/;
  wire [1:0]   issueUop_1_bits_src2Type /*verilator public_flat*/;
  wire [1:0]   issueUop_1_bits_src1Type /*verilator public_flat*/;
  wire [5:0]   issueUop_1_bits_prs2 /*verilator public_flat*/;
  wire [5:0]   issueUop_1_bits_prs1 /*verilator public_flat*/;
  wire [4:0]   issueUop_1_bits_rd /*verilator public_flat*/;
  wire [31:0]  issueUop_0_bits_inst /*verilator public_flat*/;
  wire [4:0]   issueUop_0_bits_rs2 /*verilator public_flat*/;
  wire [4:0]   issueUop_0_bits_rs1 /*verilator public_flat*/;
  wire         issueUop_0_bits_lastBranch /*verilator public_flat*/;
  wire         issueUop_0_bits_compressed /*verilator public_flat*/;
  wire [31:0]  issueUop_0_bits_predTarget /*verilator public_flat*/;
  wire         issueUop_0_bits_lockBackend /*verilator public_flat*/;
  wire [3:0]   issueUop_0_bits_opcode /*verilator public_flat*/;
  wire [31:0]  issueUop_0_bits_pc /*verilator public_flat*/;
  wire [31:0]  issueUop_0_bits_imm /*verilator public_flat*/;
  wire [3:0]   issueUop_0_bits_stqPtr_index /*verilator public_flat*/;
  wire         issueUop_0_bits_stqPtr_flag /*verilator public_flat*/;
  wire [3:0]   issueUop_0_bits_ldqPtr_index /*verilator public_flat*/;
  wire         issueUop_0_bits_ldqPtr_flag /*verilator public_flat*/;
  wire [4:0]   issueUop_0_bits_robPtr_index /*verilator public_flat*/;
  wire         issueUop_0_bits_robPtr_flag /*verilator public_flat*/;
  wire         issueUop_0_bits_src2Ready /*verilator public_flat*/;
  wire         issueUop_0_bits_src1Ready /*verilator public_flat*/;
  wire [1:0]   issueUop_0_bits_src2Type /*verilator public_flat*/;
  wire [1:0]   issueUop_0_bits_src1Type /*verilator public_flat*/;
  wire [5:0]   issueUop_0_bits_prs2 /*verilator public_flat*/;
  wire [5:0]   issueUop_0_bits_prs1 /*verilator public_flat*/;
  wire [4:0]   issueUop_0_bits_rd /*verilator public_flat*/;
  wire [4:0]   flagUop_bits_robPtr_index /*verilator public_flat*/;
  wire         flagUop_bits_robPtr_flag /*verilator public_flat*/;
  wire [31:0]  flagUop_bits_target /*verilator public_flat*/;
  wire [31:0]  flagUop_bits_pc /*verilator public_flat*/;
  wire [3:0]   flagUop_bits_flag /*verilator public_flat*/;
  wire [5:0]   flagUop_bits_rd /*verilator public_flat*/;
  wire         flagUop_valid /*verilator public_flat*/;
  wire [31:0]  commitUop_3_bits_result /*verilator public_flat*/;
  wire [3:0]   commitUop_3_bits_stqPtr_index /*verilator public_flat*/;
  wire         commitUop_3_bits_stqPtr_flag /*verilator public_flat*/;
  wire [3:0]   commitUop_3_bits_ldqPtr_index /*verilator public_flat*/;
  wire         commitUop_3_bits_ldqPtr_flag /*verilator public_flat*/;
  wire [31:0]  commitUop_3_bits_target /*verilator public_flat*/;
  wire [3:0]   commitUop_3_bits_flag /*verilator public_flat*/;
  wire [31:0]  commitUop_3_bits_pc /*verilator public_flat*/;
  wire [4:0]   commitUop_3_bits_robPtr_index /*verilator public_flat*/;
  wire         commitUop_3_bits_robPtr_flag /*verilator public_flat*/;
  wire [31:0]  commitUop_2_bits_result /*verilator public_flat*/;
  wire [3:0]   commitUop_2_bits_stqPtr_index /*verilator public_flat*/;
  wire         commitUop_2_bits_stqPtr_flag /*verilator public_flat*/;
  wire [3:0]   commitUop_2_bits_ldqPtr_index /*verilator public_flat*/;
  wire         commitUop_2_bits_ldqPtr_flag /*verilator public_flat*/;
  wire [31:0]  commitUop_2_bits_target /*verilator public_flat*/;
  wire [3:0]   commitUop_2_bits_flag /*verilator public_flat*/;
  wire [31:0]  commitUop_2_bits_pc /*verilator public_flat*/;
  wire [4:0]   commitUop_2_bits_robPtr_index /*verilator public_flat*/;
  wire         commitUop_2_bits_robPtr_flag /*verilator public_flat*/;
  wire [31:0]  commitUop_1_bits_result /*verilator public_flat*/;
  wire [3:0]   commitUop_1_bits_stqPtr_index /*verilator public_flat*/;
  wire         commitUop_1_bits_stqPtr_flag /*verilator public_flat*/;
  wire [3:0]   commitUop_1_bits_ldqPtr_index /*verilator public_flat*/;
  wire         commitUop_1_bits_ldqPtr_flag /*verilator public_flat*/;
  wire [31:0]  commitUop_1_bits_target /*verilator public_flat*/;
  wire [3:0]   commitUop_1_bits_flag /*verilator public_flat*/;
  wire [31:0]  commitUop_1_bits_pc /*verilator public_flat*/;
  wire [4:0]   commitUop_1_bits_robPtr_index /*verilator public_flat*/;
  wire         commitUop_1_bits_robPtr_flag /*verilator public_flat*/;
  wire [31:0]  commitUop_0_bits_result /*verilator public_flat*/;
  wire [3:0]   commitUop_0_bits_stqPtr_index /*verilator public_flat*/;
  wire         commitUop_0_bits_stqPtr_flag /*verilator public_flat*/;
  wire [3:0]   commitUop_0_bits_ldqPtr_index /*verilator public_flat*/;
  wire         commitUop_0_bits_ldqPtr_flag /*verilator public_flat*/;
  wire [31:0]  commitUop_0_bits_target /*verilator public_flat*/;
  wire [3:0]   commitUop_0_bits_flag /*verilator public_flat*/;
  wire [31:0]  commitUop_0_bits_pc /*verilator public_flat*/;
  wire [4:0]   commitUop_0_bits_robPtr_index /*verilator public_flat*/;
  wire         commitUop_0_bits_robPtr_flag /*verilator public_flat*/;
  wire         renameIQValid_3 /*verilator public_flat*/;
  wire         renameIQValid_2 /*verilator public_flat*/;
  wire         renameIQValid_1 /*verilator public_flat*/;
  wire         renameIQValid_0 /*verilator public_flat*/;
  wire         renameRobValid_3 /*verilator public_flat*/;
  wire         renameRobValid_2 /*verilator public_flat*/;
  wire         renameRobValid_1 /*verilator public_flat*/;
  wire         renameRobValid_0 /*verilator public_flat*/;
  wire [31:0]  renameUop_3_inst /*verilator public_flat*/;
  wire [4:0]   renameUop_3_rs2 /*verilator public_flat*/;
  wire [4:0]   renameUop_3_rs1 /*verilator public_flat*/;
  wire         renameUop_3_lastBranch /*verilator public_flat*/;
  wire         renameUop_3_compressed /*verilator public_flat*/;
  wire [31:0]  renameUop_3_predTarget /*verilator public_flat*/;
  wire         renameUop_3_lockBackend /*verilator public_flat*/;
  wire [3:0]   renameUop_3_opcode /*verilator public_flat*/;
  wire [3:0]   renameUop_3_fuType /*verilator public_flat*/;
  wire [31:0]  renameUop_3_pc /*verilator public_flat*/;
  wire [31:0]  renameUop_3_imm /*verilator public_flat*/;
  wire [3:0]   renameUop_3_stqPtr_index /*verilator public_flat*/;
  wire         renameUop_3_stqPtr_flag /*verilator public_flat*/;
  wire [3:0]   renameUop_3_ldqPtr_index /*verilator public_flat*/;
  wire         renameUop_3_ldqPtr_flag /*verilator public_flat*/;
  wire [4:0]   renameUop_3_robPtr_index /*verilator public_flat*/;
  wire         renameUop_3_robPtr_flag /*verilator public_flat*/;
  wire         renameUop_3_src2Ready /*verilator public_flat*/;
  wire         renameUop_3_src1Ready /*verilator public_flat*/;
  wire [1:0]   renameUop_3_src2Type /*verilator public_flat*/;
  wire [1:0]   renameUop_3_src1Type /*verilator public_flat*/;
  wire [5:0]   renameUop_3_prs2 /*verilator public_flat*/;
  wire [5:0]   renameUop_3_prs1 /*verilator public_flat*/;
  wire [5:0]   renameUop_3_prd /*verilator public_flat*/;
  wire [4:0]   renameUop_3_rd /*verilator public_flat*/;
  wire [31:0]  renameUop_2_inst /*verilator public_flat*/;
  wire [4:0]   renameUop_2_rs2 /*verilator public_flat*/;
  wire [4:0]   renameUop_2_rs1 /*verilator public_flat*/;
  wire         renameUop_2_lastBranch /*verilator public_flat*/;
  wire         renameUop_2_compressed /*verilator public_flat*/;
  wire [31:0]  renameUop_2_predTarget /*verilator public_flat*/;
  wire         renameUop_2_lockBackend /*verilator public_flat*/;
  wire [3:0]   renameUop_2_opcode /*verilator public_flat*/;
  wire [3:0]   renameUop_2_fuType /*verilator public_flat*/;
  wire [31:0]  renameUop_2_pc /*verilator public_flat*/;
  wire [31:0]  renameUop_2_imm /*verilator public_flat*/;
  wire [3:0]   renameUop_2_stqPtr_index /*verilator public_flat*/;
  wire         renameUop_2_stqPtr_flag /*verilator public_flat*/;
  wire [3:0]   renameUop_2_ldqPtr_index /*verilator public_flat*/;
  wire         renameUop_2_ldqPtr_flag /*verilator public_flat*/;
  wire [4:0]   renameUop_2_robPtr_index /*verilator public_flat*/;
  wire         renameUop_2_robPtr_flag /*verilator public_flat*/;
  wire         renameUop_2_src2Ready /*verilator public_flat*/;
  wire         renameUop_2_src1Ready /*verilator public_flat*/;
  wire [1:0]   renameUop_2_src2Type /*verilator public_flat*/;
  wire [1:0]   renameUop_2_src1Type /*verilator public_flat*/;
  wire [5:0]   renameUop_2_prs2 /*verilator public_flat*/;
  wire [5:0]   renameUop_2_prs1 /*verilator public_flat*/;
  wire [5:0]   renameUop_2_prd /*verilator public_flat*/;
  wire [4:0]   renameUop_2_rd /*verilator public_flat*/;
  wire [31:0]  renameUop_1_inst /*verilator public_flat*/;
  wire [4:0]   renameUop_1_rs2 /*verilator public_flat*/;
  wire [4:0]   renameUop_1_rs1 /*verilator public_flat*/;
  wire         renameUop_1_lastBranch /*verilator public_flat*/;
  wire         renameUop_1_compressed /*verilator public_flat*/;
  wire [31:0]  renameUop_1_predTarget /*verilator public_flat*/;
  wire         renameUop_1_lockBackend /*verilator public_flat*/;
  wire [3:0]   renameUop_1_opcode /*verilator public_flat*/;
  wire [3:0]   renameUop_1_fuType /*verilator public_flat*/;
  wire [31:0]  renameUop_1_pc /*verilator public_flat*/;
  wire [31:0]  renameUop_1_imm /*verilator public_flat*/;
  wire [3:0]   renameUop_1_stqPtr_index /*verilator public_flat*/;
  wire         renameUop_1_stqPtr_flag /*verilator public_flat*/;
  wire [3:0]   renameUop_1_ldqPtr_index /*verilator public_flat*/;
  wire         renameUop_1_ldqPtr_flag /*verilator public_flat*/;
  wire [4:0]   renameUop_1_robPtr_index /*verilator public_flat*/;
  wire         renameUop_1_robPtr_flag /*verilator public_flat*/;
  wire         renameUop_1_src2Ready /*verilator public_flat*/;
  wire         renameUop_1_src1Ready /*verilator public_flat*/;
  wire [1:0]   renameUop_1_src2Type /*verilator public_flat*/;
  wire [1:0]   renameUop_1_src1Type /*verilator public_flat*/;
  wire [5:0]   renameUop_1_prs2 /*verilator public_flat*/;
  wire [5:0]   renameUop_1_prs1 /*verilator public_flat*/;
  wire [5:0]   renameUop_1_prd /*verilator public_flat*/;
  wire [4:0]   renameUop_1_rd /*verilator public_flat*/;
  wire [31:0]  renameUop_0_inst /*verilator public_flat*/;
  wire [4:0]   renameUop_0_rs2 /*verilator public_flat*/;
  wire [4:0]   renameUop_0_rs1 /*verilator public_flat*/;
  wire         renameUop_0_lastBranch /*verilator public_flat*/;
  wire         renameUop_0_compressed /*verilator public_flat*/;
  wire [31:0]  renameUop_0_predTarget /*verilator public_flat*/;
  wire         renameUop_0_lockBackend /*verilator public_flat*/;
  wire [3:0]   renameUop_0_opcode /*verilator public_flat*/;
  wire [3:0]   renameUop_0_fuType /*verilator public_flat*/;
  wire [31:0]  renameUop_0_pc /*verilator public_flat*/;
  wire [31:0]  renameUop_0_imm /*verilator public_flat*/;
  wire [3:0]   renameUop_0_stqPtr_index /*verilator public_flat*/;
  wire         renameUop_0_stqPtr_flag /*verilator public_flat*/;
  wire [3:0]   renameUop_0_ldqPtr_index /*verilator public_flat*/;
  wire         renameUop_0_ldqPtr_flag /*verilator public_flat*/;
  wire [4:0]   renameUop_0_robPtr_index /*verilator public_flat*/;
  wire         renameUop_0_robPtr_flag /*verilator public_flat*/;
  wire         renameUop_0_src2Ready /*verilator public_flat*/;
  wire         renameUop_0_src1Ready /*verilator public_flat*/;
  wire [1:0]   renameUop_0_src2Type /*verilator public_flat*/;
  wire [1:0]   renameUop_0_src1Type /*verilator public_flat*/;
  wire [5:0]   renameUop_0_prs2 /*verilator public_flat*/;
  wire [5:0]   renameUop_0_prs1 /*verilator public_flat*/;
  wire [5:0]   renameUop_0_prd /*verilator public_flat*/;
  wire [4:0]   renameUop_0_rd /*verilator public_flat*/;
  wire         decodeUop_3_ready /*verilator public_flat*/;
  wire         decodeUop_2_ready /*verilator public_flat*/;
  wire         decodeUop_1_ready /*verilator public_flat*/;
  wire [31:0]  decodeUop_3_bits_inst /*verilator public_flat*/;
  wire         decodeUop_3_bits_lastBranch /*verilator public_flat*/;
  wire         decodeUop_3_bits_lockBackend /*verilator public_flat*/;
  wire         decodeUop_3_bits_compressed /*verilator public_flat*/;
  wire [31:0]  decodeUop_3_bits_predTarget /*verilator public_flat*/;
  wire [3:0]   decodeUop_3_bits_opcode /*verilator public_flat*/;
  wire [3:0]   decodeUop_3_bits_fuType /*verilator public_flat*/;
  wire [31:0]  decodeUop_3_bits_pc /*verilator public_flat*/;
  wire [31:0]  decodeUop_3_bits_imm /*verilator public_flat*/;
  wire [1:0]   decodeUop_3_bits_src2Type /*verilator public_flat*/;
  wire [1:0]   decodeUop_3_bits_src1Type /*verilator public_flat*/;
  wire [4:0]   decodeUop_3_bits_rs2 /*verilator public_flat*/;
  wire [4:0]   decodeUop_3_bits_rs1 /*verilator public_flat*/;
  wire [4:0]   decodeUop_3_bits_rd /*verilator public_flat*/;
  wire         decodeUop_3_valid /*verilator public_flat*/;
  wire [31:0]  decodeUop_2_bits_inst /*verilator public_flat*/;
  wire         decodeUop_2_bits_lastBranch /*verilator public_flat*/;
  wire         decodeUop_2_bits_lockBackend /*verilator public_flat*/;
  wire         decodeUop_2_bits_compressed /*verilator public_flat*/;
  wire [31:0]  decodeUop_2_bits_predTarget /*verilator public_flat*/;
  wire [3:0]   decodeUop_2_bits_opcode /*verilator public_flat*/;
  wire [3:0]   decodeUop_2_bits_fuType /*verilator public_flat*/;
  wire [31:0]  decodeUop_2_bits_pc /*verilator public_flat*/;
  wire [31:0]  decodeUop_2_bits_imm /*verilator public_flat*/;
  wire [1:0]   decodeUop_2_bits_src2Type /*verilator public_flat*/;
  wire [1:0]   decodeUop_2_bits_src1Type /*verilator public_flat*/;
  wire [4:0]   decodeUop_2_bits_rs2 /*verilator public_flat*/;
  wire [4:0]   decodeUop_2_bits_rs1 /*verilator public_flat*/;
  wire [4:0]   decodeUop_2_bits_rd /*verilator public_flat*/;
  wire         decodeUop_2_valid /*verilator public_flat*/;
  wire [31:0]  decodeUop_1_bits_inst /*verilator public_flat*/;
  wire         decodeUop_1_bits_lastBranch /*verilator public_flat*/;
  wire         decodeUop_1_bits_lockBackend /*verilator public_flat*/;
  wire         decodeUop_1_bits_compressed /*verilator public_flat*/;
  wire [31:0]  decodeUop_1_bits_predTarget /*verilator public_flat*/;
  wire [3:0]   decodeUop_1_bits_opcode /*verilator public_flat*/;
  wire [3:0]   decodeUop_1_bits_fuType /*verilator public_flat*/;
  wire [31:0]  decodeUop_1_bits_pc /*verilator public_flat*/;
  wire [31:0]  decodeUop_1_bits_imm /*verilator public_flat*/;
  wire [1:0]   decodeUop_1_bits_src2Type /*verilator public_flat*/;
  wire [1:0]   decodeUop_1_bits_src1Type /*verilator public_flat*/;
  wire [4:0]   decodeUop_1_bits_rs2 /*verilator public_flat*/;
  wire [4:0]   decodeUop_1_bits_rs1 /*verilator public_flat*/;
  wire [4:0]   decodeUop_1_bits_rd /*verilator public_flat*/;
  wire         decodeUop_1_valid /*verilator public_flat*/;
  wire [31:0]  decodeUop_0_bits_inst /*verilator public_flat*/;
  wire         decodeUop_0_bits_lastBranch /*verilator public_flat*/;
  wire         decodeUop_0_bits_lockBackend /*verilator public_flat*/;
  wire         decodeUop_0_bits_compressed /*verilator public_flat*/;
  wire [31:0]  decodeUop_0_bits_predTarget /*verilator public_flat*/;
  wire [3:0]   decodeUop_0_bits_opcode /*verilator public_flat*/;
  wire [3:0]   decodeUop_0_bits_fuType /*verilator public_flat*/;
  wire [31:0]  decodeUop_0_bits_pc /*verilator public_flat*/;
  wire [31:0]  decodeUop_0_bits_imm /*verilator public_flat*/;
  wire [1:0]   decodeUop_0_bits_src2Type /*verilator public_flat*/;
  wire [1:0]   decodeUop_0_bits_src1Type /*verilator public_flat*/;
  wire [4:0]   decodeUop_0_bits_rs2 /*verilator public_flat*/;
  wire [4:0]   decodeUop_0_bits_rs1 /*verilator public_flat*/;
  wire [4:0]   decodeUop_0_bits_rd /*verilator public_flat*/;
  wire         decodeUop_0_valid /*verilator public_flat*/;
  wire         _flagHandler_io_OUT_flush;
  wire         _flagHandler_io_OUT_TLBFlush;
  wire         _xtvalRecorder_io_IN_flush;
  wire         _ptw_io_OUT_PTWUop_ready;
  wire         _ptw_io_OUT_PTWResp_valid;
  wire         _ptw_io_OUT_PTWResp_bits_isSuper;
  wire [9:0]   _ptw_io_OUT_PTWResp_bits_pte_ppn1;
  wire [9:0]   _ptw_io_OUT_PTWResp_bits_pte_ppn0;
  wire         _ptw_io_OUT_PTWResp_bits_pte_a;
  wire         _ptw_io_OUT_PTWResp_bits_pte_u;
  wire         _ptw_io_OUT_PTWResp_bits_pte_x;
  wire         _ptw_io_OUT_PTWResp_bits_pte_w;
  wire         _ptw_io_OUT_PTWResp_bits_pte_r;
  wire         _ptw_io_OUT_PTWResp_bits_pte_v;
  wire [19:0]  _ptw_io_OUT_PTWResp_bits_vpn;
  wire         _ptw_io_OUT_PTWResp_bits_id;
  wire         _ptw_io_OUT_PTWUop_valid;
  wire [31:0]  _ptw_io_OUT_PTWUop_bits_addr;
  wire         _ptw_io_OUT_PTWUop_bits_stqPtr_flag;
  wire [3:0]   _ptw_io_OUT_PTWUop_bits_stqPtr_index;
  wire         _dtlb_io_IN_PTWResp_valid;
  wire         _dtlb_io_IN_PTWResp_bits_isSuper;
  wire [9:0]   _dtlb_io_IN_PTWResp_bits_pte_ppn1;
  wire [9:0]   _dtlb_io_IN_PTWResp_bits_pte_ppn0;
  wire         _dtlb_io_IN_PTWResp_bits_pte_d;
  wire         _dtlb_io_IN_PTWResp_bits_pte_a;
  wire         _dtlb_io_IN_PTWResp_bits_pte_u;
  wire         _dtlb_io_IN_PTWResp_bits_pte_x;
  wire         _dtlb_io_IN_PTWResp_bits_pte_w;
  wire         _dtlb_io_IN_PTWResp_bits_pte_r;
  wire         _dtlb_io_IN_PTWResp_bits_pte_v;
  wire [19:0]  _dtlb_io_IN_PTWResp_bits_vpn;
  wire         _dtlb_io_IN_PTWResp_bits_id;
  wire         _dtlb_io_IN_TLBFlush;
  wire         _lsu_io_IN_loadUop_valid;
  wire [5:0]   _lsu_io_IN_loadUop_bits_prd;
  wire [31:0]  _lsu_io_IN_loadUop_bits_addr;
  wire         _lsu_io_IN_loadUop_bits_dest;
  wire         _lsu_io_IN_loadUop_bits_robPtr_flag;
  wire [4:0]   _lsu_io_IN_loadUop_bits_robPtr_index;
  wire [3:0]   _lsu_io_IN_loadUop_bits_ldqPtr_index;
  wire         _lsu_io_IN_loadUop_bits_stqPtr_flag;
  wire [3:0]   _lsu_io_IN_loadUop_bits_stqPtr_index;
  wire [3:0]   _lsu_io_IN_loadUop_bits_opcode;
  wire         _lsu_io_IN_flushDCache;
  wire         _lsu_io_IN_flush;
  wire         _lsu_io_IN_loadUop_ready;
  wire         _lsu_io_OUT_loadNegAck_valid;
  wire         _lsu_io_OUT_loadNegAck_bits_dest;
  wire [31:0]  _lsu_io_OUT_storeBypassReq_addr;
  wire         _lsu_io_OUT_flushBusy;
  wire         _amoUnit_io_IN_amoAck_valid;
  wire [1:0]   _amoUnit_io_IN_amoAck_bits_resp;
  wire         _amoUnit_io_OUT_amoUop_ready;
  wire         _amoUnit_io_OUT_amoActive;
  wire         _amoUnit_io_OUT_amoUop_valid;
  wire [5:0]   _amoUnit_io_OUT_amoUop_bits_prd;
  wire [31:0]  _amoUnit_io_OUT_amoUop_bits_addr;
  wire [31:0]  _amoUnit_io_OUT_amoUop_bits_wdata;
  wire         _amoUnit_io_OUT_amoUop_bits_dest;
  wire         _amoUnit_io_OUT_amoUop_bits_robPtr_flag;
  wire [4:0]   _amoUnit_io_OUT_amoUop_bits_robPtr_index;
  wire [3:0]   _amoUnit_io_OUT_amoUop_bits_opcode;
  wire         _storeBuffer_io_OUT_storeUop_ready;
  wire         _storeBuffer_io_IN_storeAck_valid;
  wire [1:0]   _storeBuffer_io_IN_storeAck_bits_resp;
  wire [31:0]  _storeBuffer_io_IN_storeBypassReq_addr;
  wire         _storeBuffer_io_OUT_storeUop_valid;
  wire [31:0]  _storeBuffer_io_OUT_storeUop_bits_addr;
  wire [31:0]  _storeBuffer_io_OUT_storeUop_bits_wdata;
  wire [3:0]   _storeBuffer_io_OUT_storeUop_bits_opcode;
  wire         _storeBuffer_io_OUT_storeBufferEmpty;
  wire [31:0]  _storeBuffer_io_OUT_storeBypassResp_data;
  wire [3:0]   _storeBuffer_io_OUT_storeBypassResp_mask;
  wire         _storeQueue_io_OUT_stUop_ready;
  wire [31:0]  _storeQueue_io_IN_storeBypassReq_addr;
  wire         _storeQueue_io_IN_storeBypassReq_stqPtr_flag;
  wire [3:0]   _storeQueue_io_IN_storeBypassReq_stqPtr_index;
  wire         _storeQueue_io_OUT_stUop_valid;
  wire [31:0]  _storeQueue_io_OUT_stUop_bits_addr;
  wire [31:0]  _storeQueue_io_OUT_stUop_bits_wdata;
  wire [3:0]   _storeQueue_io_OUT_stUop_bits_opcode;
  wire         _storeQueue_io_OUT_stqBasePtr_flag;
  wire [3:0]   _storeQueue_io_OUT_stqBasePtr_index;
  wire         _storeQueue_io_OUT_storeQueueEmpty;
  wire [31:0]  _storeQueue_io_OUT_storeBypassResp_data;
  wire [3:0]   _storeQueue_io_OUT_storeBypassResp_mask;
  wire         _loadQueue_io_IN_negAck_valid;
  wire [3:0]   _loadQueue_io_IN_negAck_bits_ldqPtr_index;
  wire         _loadQueue_io_IN_negAck_bits_dest;
  wire         _loadQueue_io_OUT_ldUop_ready;
  wire         _loadQueue_io_IN_flush;
  wire         _loadQueue_io_OUT_ldUop_valid;
  wire [5:0]   _loadQueue_io_OUT_ldUop_bits_prd;
  wire [31:0]  _loadQueue_io_OUT_ldUop_bits_addr;
  wire         _loadQueue_io_OUT_ldUop_bits_dest;
  wire         _loadQueue_io_OUT_ldUop_bits_robPtr_flag;
  wire [4:0]   _loadQueue_io_OUT_ldUop_bits_robPtr_index;
  wire [3:0]   _loadQueue_io_OUT_ldUop_bits_ldqPtr_index;
  wire         _loadQueue_io_OUT_ldUop_bits_stqPtr_flag;
  wire [3:0]   _loadQueue_io_OUT_ldUop_bits_stqPtr_index;
  wire [3:0]   _loadQueue_io_OUT_ldUop_bits_opcode;
  wire         _agu_io_IN_TLBResp_valid;
  wire         _agu_io_IN_TLBResp_bits_isSuper;
  wire [9:0]   _agu_io_IN_TLBResp_bits_pte_ppn1;
  wire [9:0]   _agu_io_IN_TLBResp_bits_pte_ppn0;
  wire         _agu_io_IN_TLBResp_bits_pte_d;
  wire         _agu_io_IN_TLBResp_bits_pte_a;
  wire         _agu_io_IN_TLBResp_bits_pte_u;
  wire         _agu_io_IN_TLBResp_bits_pte_x;
  wire         _agu_io_IN_TLBResp_bits_pte_w;
  wire         _agu_io_IN_TLBResp_bits_pte_r;
  wire         _agu_io_IN_TLBResp_bits_pte_v;
  wire         _agu_io_IN_PTWResp_valid;
  wire         _agu_io_IN_PTWResp_bits_id;
  wire         _agu_io_IN_flush;
  wire         _agu_io_OUT_TLBReq_valid;
  wire [19:0]  _agu_io_OUT_TLBReq_bits_vpn;
  wire         _agu_io_OUT_PTWReq_valid;
  wire [19:0]  _agu_io_OUT_PTWReq_bits_vpn;
  wire         _agu_io_OUT_PTWReq_bits_stqPtr_flag;
  wire [3:0]   _agu_io_OUT_PTWReq_bits_stqPtr_index;
  wire         _agu_io_OUT_xtvalRec_valid;
  wire [31:0]  _agu_io_OUT_xtvalRec_bits_tval;
  wire         _agu_io_OUT_xtvalRec_bits_robPtr_flag;
  wire [4:0]   _agu_io_OUT_xtvalRec_bits_robPtr_index;
  wire         _alu2_io_IN_flush;
  wire         _div_io_IN_flush;
  wire         _div_io_OUT_writebackUop_valid;
  wire [5:0]   _div_io_OUT_writebackUop_bits_prd;
  wire [31:0]  _div_io_OUT_writebackUop_bits_data;
  wire         _div_io_OUT_writebackUop_bits_robPtr_flag;
  wire [4:0]   _div_io_OUT_writebackUop_bits_robPtr_index;
  wire         _div_io_OUT_idivBusy;
  wire         _alu1_io_IN_flush;
  wire         _alu1_io_OUT_writebackUop_valid;
  wire [5:0]   _alu1_io_OUT_writebackUop_bits_prd;
  wire [31:0]  _alu1_io_OUT_writebackUop_bits_data;
  wire         _alu1_io_OUT_writebackUop_bits_robPtr_flag;
  wire [4:0]   _alu1_io_OUT_writebackUop_bits_robPtr_index;
  wire         _csr_io_IN_xtvalRec_valid;
  wire [31:0]  _csr_io_IN_xtvalRec_bits_tval;
  wire         _csr_io_OUT_writebackUop_valid;
  wire [5:0]   _csr_io_OUT_writebackUop_bits_prd;
  wire [31:0]  _csr_io_OUT_writebackUop_bits_data;
  wire         _csr_io_OUT_writebackUop_bits_robPtr_flag;
  wire [4:0]   _csr_io_OUT_writebackUop_bits_robPtr_index;
  wire [3:0]   _csr_io_OUT_writebackUop_bits_flag;
  wire [31:0]  _csr_io_OUT_writebackUop_bits_target;
  wire         _csr_io_OUT_VMCSR_mode;
  wire [19:0]  _csr_io_OUT_VMCSR_rootPPN;
  wire [1:0]   _csr_io_OUT_VMCSR_epm;
  wire         _csr_io_OUT_VMCSR_mxr;
  wire         _csr_io_OUT_VMCSR_sum;
  wire [31:0]  _csr_io_OUT_trapCSR_mtvec;
  wire [31:0]  _csr_io_OUT_trapCSR_mepc;
  wire [31:0]  _csr_io_OUT_trapCSR_stvec;
  wire [31:0]  _csr_io_OUT_trapCSR_sepc;
  wire [31:0]  _csr_io_OUT_trapCSR_mideleg;
  wire [31:0]  _csr_io_OUT_trapCSR_medeleg;
  wire [1:0]   _csr_io_OUT_trapCSR_priv;
  wire         _csr_io_OUT_trapCSR_interrupt;
  wire [3:0]   _csr_io_OUT_trapCSR_interruptCause;
  wire         _mul_io_IN_flush;
  wire         _mul_io_OUT_writebackUop_valid;
  wire [5:0]   _mul_io_OUT_writebackUop_bits_prd;
  wire [31:0]  _mul_io_OUT_writebackUop_bits_data;
  wire         _mul_io_OUT_writebackUop_bits_robPtr_flag;
  wire [4:0]   _mul_io_OUT_writebackUop_bits_robPtr_index;
  wire         _alu0_io_IN_flush;
  wire         _alu0_io_OUT_writebackUop_valid;
  wire [5:0]   _alu0_io_OUT_writebackUop_bits_prd;
  wire [31:0]  _alu0_io_OUT_writebackUop_bits_data;
  wire         _alu0_io_OUT_writebackUop_bits_robPtr_flag;
  wire [4:0]   _alu0_io_OUT_writebackUop_bits_robPtr_index;
  wire         _readReg_io_IN_zeroCycleForward_0_valid;
  wire [5:0]   _readReg_io_IN_zeroCycleForward_0_bits_prd;
  wire [31:0]  _readReg_io_IN_zeroCycleForward_0_bits_data;
  wire         _readReg_io_IN_zeroCycleForward_1_valid;
  wire [5:0]   _readReg_io_IN_zeroCycleForward_1_bits_prd;
  wire [31:0]  _readReg_io_IN_zeroCycleForward_1_bits_data;
  wire         _readReg_io_IN_zeroCycleForward_2_valid;
  wire [5:0]   _readReg_io_IN_zeroCycleForward_2_bits_prd;
  wire [31:0]  _readReg_io_IN_zeroCycleForward_2_bits_data;
  wire [31:0]  _readReg_io_IN_readRegVal_0_0;
  wire [31:0]  _readReg_io_IN_readRegVal_0_1;
  wire [31:0]  _readReg_io_IN_readRegVal_1_0;
  wire [31:0]  _readReg_io_IN_readRegVal_1_1;
  wire [31:0]  _readReg_io_IN_readRegVal_2_0;
  wire [31:0]  _readReg_io_IN_readRegVal_2_1;
  wire [31:0]  _readReg_io_IN_readRegVal_3_0;
  wire [31:0]  _readReg_io_IN_readRegVal_3_1;
  wire         _readReg_io_IN_flush;
  wire [5:0]   _readReg_io_OUT_readRegIndex_0_0;
  wire [5:0]   _readReg_io_OUT_readRegIndex_0_1;
  wire [5:0]   _readReg_io_OUT_readRegIndex_1_0;
  wire [5:0]   _readReg_io_OUT_readRegIndex_1_1;
  wire [5:0]   _readReg_io_OUT_readRegIndex_2_0;
  wire [5:0]   _readReg_io_OUT_readRegIndex_2_1;
  wire [5:0]   _readReg_io_OUT_readRegIndex_3_0;
  wire [5:0]   _readReg_io_OUT_readRegIndex_3_1;
  wire         _dispatcher_1_io_OUT_uop_1_ready;
  wire         _dispatcher_1_io_OUT_uop_0_valid;
  wire [5:0]   _dispatcher_1_io_OUT_uop_0_bits_prd;
  wire [31:0]  _dispatcher_1_io_OUT_uop_0_bits_src1;
  wire [31:0]  _dispatcher_1_io_OUT_uop_0_bits_src2;
  wire         _dispatcher_1_io_OUT_uop_0_bits_robPtr_flag;
  wire [4:0]   _dispatcher_1_io_OUT_uop_0_bits_robPtr_index;
  wire [3:0]   _dispatcher_1_io_OUT_uop_0_bits_opcode;
  wire         _dispatcher_1_io_OUT_uop_1_valid;
  wire [5:0]   _dispatcher_1_io_OUT_uop_1_bits_prd;
  wire [31:0]  _dispatcher_1_io_OUT_uop_1_bits_src1;
  wire [31:0]  _dispatcher_1_io_OUT_uop_1_bits_src2;
  wire         _dispatcher_1_io_OUT_uop_1_bits_robPtr_flag;
  wire [4:0]   _dispatcher_1_io_OUT_uop_1_bits_robPtr_index;
  wire [3:0]   _dispatcher_1_io_OUT_uop_1_bits_opcode;
  wire         _dispatcher_0_io_OUT_uop_0_valid;
  wire [5:0]   _dispatcher_0_io_OUT_uop_0_bits_prd;
  wire [31:0]  _dispatcher_0_io_OUT_uop_0_bits_src1;
  wire [31:0]  _dispatcher_0_io_OUT_uop_0_bits_src2;
  wire         _dispatcher_0_io_OUT_uop_0_bits_robPtr_flag;
  wire [4:0]   _dispatcher_0_io_OUT_uop_0_bits_robPtr_index;
  wire [3:0]   _dispatcher_0_io_OUT_uop_0_bits_opcode;
  wire         _dispatcher_0_io_OUT_uop_1_valid;
  wire [5:0]   _dispatcher_0_io_OUT_uop_1_bits_prd;
  wire [31:0]  _dispatcher_0_io_OUT_uop_1_bits_src1;
  wire [31:0]  _dispatcher_0_io_OUT_uop_1_bits_src2;
  wire         _dispatcher_0_io_OUT_uop_1_bits_robPtr_flag;
  wire [4:0]   _dispatcher_0_io_OUT_uop_1_bits_robPtr_index;
  wire [3:0]   _dispatcher_0_io_OUT_uop_1_bits_opcode;
  wire         _dispatcher_0_io_OUT_uop_2_valid;
  wire [5:0]   _dispatcher_0_io_OUT_uop_2_bits_prd;
  wire [31:0]  _dispatcher_0_io_OUT_uop_2_bits_src1;
  wire         _dispatcher_0_io_OUT_uop_2_bits_robPtr_flag;
  wire [4:0]   _dispatcher_0_io_OUT_uop_2_bits_robPtr_index;
  wire [31:0]  _dispatcher_0_io_OUT_uop_2_bits_imm;
  wire [31:0]  _dispatcher_0_io_OUT_uop_2_bits_pc;
  wire [3:0]   _dispatcher_0_io_OUT_uop_2_bits_opcode;
  wire         _iq_3_io_IN_stqBasePtr_flag;
  wire [3:0]   _iq_3_io_IN_stqBasePtr_index;
  wire         _iq_3_io_IN_flush;
  wire         _iq_3_io_IN_idivBusy;
  wire         _iq_2_io_IN_stqBasePtr_flag;
  wire [3:0]   _iq_2_io_IN_stqBasePtr_index;
  wire         _iq_2_io_IN_flush;
  wire         _iq_2_io_IN_idivBusy;
  wire         _iq_1_io_IN_stqBasePtr_flag;
  wire [3:0]   _iq_1_io_IN_stqBasePtr_index;
  wire         _iq_1_io_IN_flush;
  wire         _iq_1_io_IN_idivBusy;
  wire         _iq_1_io_OUT_issueUop_valid;
  wire [3:0]   _iq_1_io_OUT_issueUop_bits_fuType;
  wire         _iq_0_io_IN_stqBasePtr_flag;
  wire [3:0]   _iq_0_io_IN_stqBasePtr_index;
  wire         _iq_0_io_IN_flush;
  wire         _iq_0_io_IN_idivBusy;
  wire         _scheduler_io_OUT_renameUop_0_ready;
  wire         _scheduler_io_OUT_renameUop_1_ready;
  wire         _scheduler_io_OUT_renameUop_2_ready;
  wire         _scheduler_io_OUT_renameUop_3_ready;
  wire         _scheduler_io_OUT_renameUop_0_valid;
  wire [4:0]   _scheduler_io_OUT_renameUop_0_bits_rd;
  wire [5:0]   _scheduler_io_OUT_renameUop_0_bits_prd;
  wire [5:0]   _scheduler_io_OUT_renameUop_0_bits_prs1;
  wire [5:0]   _scheduler_io_OUT_renameUop_0_bits_prs2;
  wire [1:0]   _scheduler_io_OUT_renameUop_0_bits_src1Type;
  wire [1:0]   _scheduler_io_OUT_renameUop_0_bits_src2Type;
  wire         _scheduler_io_OUT_renameUop_0_bits_src1Ready;
  wire         _scheduler_io_OUT_renameUop_0_bits_src2Ready;
  wire         _scheduler_io_OUT_renameUop_0_bits_robPtr_flag;
  wire [4:0]   _scheduler_io_OUT_renameUop_0_bits_robPtr_index;
  wire         _scheduler_io_OUT_renameUop_0_bits_ldqPtr_flag;
  wire [3:0]   _scheduler_io_OUT_renameUop_0_bits_ldqPtr_index;
  wire         _scheduler_io_OUT_renameUop_0_bits_stqPtr_flag;
  wire [3:0]   _scheduler_io_OUT_renameUop_0_bits_stqPtr_index;
  wire [31:0]  _scheduler_io_OUT_renameUop_0_bits_imm;
  wire [31:0]  _scheduler_io_OUT_renameUop_0_bits_pc;
  wire [3:0]   _scheduler_io_OUT_renameUop_0_bits_fuType;
  wire [3:0]   _scheduler_io_OUT_renameUop_0_bits_opcode;
  wire         _scheduler_io_OUT_renameUop_0_bits_lockBackend;
  wire [31:0]  _scheduler_io_OUT_renameUop_0_bits_predTarget;
  wire         _scheduler_io_OUT_renameUop_0_bits_compressed;
  wire         _scheduler_io_OUT_renameUop_0_bits_lastBranch;
  wire [4:0]   _scheduler_io_OUT_renameUop_0_bits_rs1;
  wire [4:0]   _scheduler_io_OUT_renameUop_0_bits_rs2;
  wire [31:0]  _scheduler_io_OUT_renameUop_0_bits_inst;
  wire         _scheduler_io_OUT_renameUop_1_valid;
  wire [4:0]   _scheduler_io_OUT_renameUop_1_bits_rd;
  wire [5:0]   _scheduler_io_OUT_renameUop_1_bits_prd;
  wire [5:0]   _scheduler_io_OUT_renameUop_1_bits_prs1;
  wire [5:0]   _scheduler_io_OUT_renameUop_1_bits_prs2;
  wire [1:0]   _scheduler_io_OUT_renameUop_1_bits_src1Type;
  wire [1:0]   _scheduler_io_OUT_renameUop_1_bits_src2Type;
  wire         _scheduler_io_OUT_renameUop_1_bits_src1Ready;
  wire         _scheduler_io_OUT_renameUop_1_bits_src2Ready;
  wire         _scheduler_io_OUT_renameUop_1_bits_robPtr_flag;
  wire [4:0]   _scheduler_io_OUT_renameUop_1_bits_robPtr_index;
  wire         _scheduler_io_OUT_renameUop_1_bits_ldqPtr_flag;
  wire [3:0]   _scheduler_io_OUT_renameUop_1_bits_ldqPtr_index;
  wire         _scheduler_io_OUT_renameUop_1_bits_stqPtr_flag;
  wire [3:0]   _scheduler_io_OUT_renameUop_1_bits_stqPtr_index;
  wire [31:0]  _scheduler_io_OUT_renameUop_1_bits_imm;
  wire [31:0]  _scheduler_io_OUT_renameUop_1_bits_pc;
  wire [3:0]   _scheduler_io_OUT_renameUop_1_bits_fuType;
  wire [3:0]   _scheduler_io_OUT_renameUop_1_bits_opcode;
  wire         _scheduler_io_OUT_renameUop_1_bits_lockBackend;
  wire [31:0]  _scheduler_io_OUT_renameUop_1_bits_predTarget;
  wire         _scheduler_io_OUT_renameUop_1_bits_compressed;
  wire         _scheduler_io_OUT_renameUop_1_bits_lastBranch;
  wire [4:0]   _scheduler_io_OUT_renameUop_1_bits_rs1;
  wire [4:0]   _scheduler_io_OUT_renameUop_1_bits_rs2;
  wire [31:0]  _scheduler_io_OUT_renameUop_1_bits_inst;
  wire         _scheduler_io_OUT_renameUop_2_valid;
  wire [4:0]   _scheduler_io_OUT_renameUop_2_bits_rd;
  wire [5:0]   _scheduler_io_OUT_renameUop_2_bits_prd;
  wire [5:0]   _scheduler_io_OUT_renameUop_2_bits_prs1;
  wire [5:0]   _scheduler_io_OUT_renameUop_2_bits_prs2;
  wire [1:0]   _scheduler_io_OUT_renameUop_2_bits_src1Type;
  wire [1:0]   _scheduler_io_OUT_renameUop_2_bits_src2Type;
  wire         _scheduler_io_OUT_renameUop_2_bits_src1Ready;
  wire         _scheduler_io_OUT_renameUop_2_bits_src2Ready;
  wire         _scheduler_io_OUT_renameUop_2_bits_robPtr_flag;
  wire [4:0]   _scheduler_io_OUT_renameUop_2_bits_robPtr_index;
  wire         _scheduler_io_OUT_renameUop_2_bits_ldqPtr_flag;
  wire [3:0]   _scheduler_io_OUT_renameUop_2_bits_ldqPtr_index;
  wire         _scheduler_io_OUT_renameUop_2_bits_stqPtr_flag;
  wire [3:0]   _scheduler_io_OUT_renameUop_2_bits_stqPtr_index;
  wire [31:0]  _scheduler_io_OUT_renameUop_2_bits_imm;
  wire [31:0]  _scheduler_io_OUT_renameUop_2_bits_pc;
  wire [3:0]   _scheduler_io_OUT_renameUop_2_bits_fuType;
  wire [3:0]   _scheduler_io_OUT_renameUop_2_bits_opcode;
  wire         _scheduler_io_OUT_renameUop_2_bits_lockBackend;
  wire [31:0]  _scheduler_io_OUT_renameUop_2_bits_predTarget;
  wire         _scheduler_io_OUT_renameUop_2_bits_compressed;
  wire         _scheduler_io_OUT_renameUop_2_bits_lastBranch;
  wire [4:0]   _scheduler_io_OUT_renameUop_2_bits_rs1;
  wire [4:0]   _scheduler_io_OUT_renameUop_2_bits_rs2;
  wire [31:0]  _scheduler_io_OUT_renameUop_2_bits_inst;
  wire         _scheduler_io_OUT_renameUop_3_valid;
  wire [4:0]   _scheduler_io_OUT_renameUop_3_bits_rd;
  wire [5:0]   _scheduler_io_OUT_renameUop_3_bits_prd;
  wire [5:0]   _scheduler_io_OUT_renameUop_3_bits_prs1;
  wire [5:0]   _scheduler_io_OUT_renameUop_3_bits_prs2;
  wire [1:0]   _scheduler_io_OUT_renameUop_3_bits_src1Type;
  wire [1:0]   _scheduler_io_OUT_renameUop_3_bits_src2Type;
  wire         _scheduler_io_OUT_renameUop_3_bits_src1Ready;
  wire         _scheduler_io_OUT_renameUop_3_bits_src2Ready;
  wire         _scheduler_io_OUT_renameUop_3_bits_robPtr_flag;
  wire [4:0]   _scheduler_io_OUT_renameUop_3_bits_robPtr_index;
  wire         _scheduler_io_OUT_renameUop_3_bits_ldqPtr_flag;
  wire [3:0]   _scheduler_io_OUT_renameUop_3_bits_ldqPtr_index;
  wire         _scheduler_io_OUT_renameUop_3_bits_stqPtr_flag;
  wire [3:0]   _scheduler_io_OUT_renameUop_3_bits_stqPtr_index;
  wire [31:0]  _scheduler_io_OUT_renameUop_3_bits_imm;
  wire [31:0]  _scheduler_io_OUT_renameUop_3_bits_pc;
  wire [3:0]   _scheduler_io_OUT_renameUop_3_bits_fuType;
  wire [3:0]   _scheduler_io_OUT_renameUop_3_bits_opcode;
  wire         _scheduler_io_OUT_renameUop_3_bits_lockBackend;
  wire [31:0]  _scheduler_io_OUT_renameUop_3_bits_predTarget;
  wire         _scheduler_io_OUT_renameUop_3_bits_compressed;
  wire         _scheduler_io_OUT_renameUop_3_bits_lastBranch;
  wire [4:0]   _scheduler_io_OUT_renameUop_3_bits_rs1;
  wire [4:0]   _scheduler_io_OUT_renameUop_3_bits_rs2;
  wire [31:0]  _scheduler_io_OUT_renameUop_3_bits_inst;
  wire         _rob_io_IN_flush;
  wire         _rob_io_OUT_robTailPtr_flag;
  wire [4:0]   _rob_io_OUT_robTailPtr_index;
  wire         _rob_io_OUT_ldqTailPtr_flag;
  wire [3:0]   _rob_io_OUT_ldqTailPtr_index;
  wire         _rob_io_OUT_stqTailPtr_flag;
  wire [3:0]   _rob_io_OUT_stqTailPtr_index;
  wire         _rename_io_IN_robTailPtr_flag;
  wire [4:0]   _rename_io_IN_robTailPtr_index;
  wire         _rename_io_IN_robEmpty;
  wire         _rename_io_IN_ldqTailPtr_flag;
  wire [3:0]   _rename_io_IN_ldqTailPtr_index;
  wire         _rename_io_IN_stqTailPtr_flag;
  wire [3:0]   _rename_io_IN_stqTailPtr_index;
  wire         _rename_io_IN_storeQueueEmpty;
  wire         _rename_io_IN_storeBufferEmpty;
  wire         _rename_io_IN_flush;
  wire         _idu_io_IN_flush;
  wire         _itlb_io_IN_PTWResp_valid;
  wire         _itlb_io_IN_PTWResp_bits_isSuper;
  wire [9:0]   _itlb_io_IN_PTWResp_bits_pte_ppn1;
  wire [9:0]   _itlb_io_IN_PTWResp_bits_pte_ppn0;
  wire         _itlb_io_IN_PTWResp_bits_pte_a;
  wire         _itlb_io_IN_PTWResp_bits_pte_u;
  wire         _itlb_io_IN_PTWResp_bits_pte_x;
  wire         _itlb_io_IN_PTWResp_bits_pte_w;
  wire         _itlb_io_IN_PTWResp_bits_pte_r;
  wire         _itlb_io_IN_PTWResp_bits_pte_v;
  wire [19:0]  _itlb_io_IN_PTWResp_bits_vpn;
  wire         _itlb_io_IN_PTWResp_bits_id;
  wire         _itlb_io_IN_TLBFlush;
  wire         _ifu_io_IN_flushICache;
  wire         _ifu_io_IN_fetchEnable;
  wire         _ifu_io_IN_btbUpdate_valid;
  wire [31:0]  _ifu_io_IN_btbUpdate_bits_pc;
  wire         _ifu_io_IN_btbUpdate_bits_flush;
  wire [31:0]  _ifu_io_IN_btbUpdate_bits_target;
  wire [1:0]   _ifu_io_IN_btbUpdate_bits_brType;
  wire         _ifu_io_IN_phtUpdate_valid;
  wire [31:0]  _ifu_io_IN_phtUpdate_bits_pc;
  wire         _ifu_io_IN_phtUpdate_bits_isLastBranch;
  wire         _ifu_io_IN_phtUpdate_bits_taken;
  wire         _ifu_io_IN_rasCommitUpdate_valid;
  wire         _ifu_io_IN_rasCommitUpdate_bits_push;
  wire [31:0]  _ifu_io_IN_rasCommitUpdate_bits_target;
  wire         _ifu_io_IN_ready;
  wire         _ifu_io_IN_TLBResp_valid;
  wire         _ifu_io_IN_TLBResp_bits_isSuper;
  wire [9:0]   _ifu_io_IN_TLBResp_bits_pte_ppn1;
  wire [9:0]   _ifu_io_IN_TLBResp_bits_pte_ppn0;
  wire         _ifu_io_IN_TLBResp_bits_pte_a;
  wire         _ifu_io_IN_TLBResp_bits_pte_u;
  wire         _ifu_io_IN_TLBResp_bits_pte_x;
  wire         _ifu_io_IN_TLBResp_bits_pte_w;
  wire         _ifu_io_IN_TLBResp_bits_pte_r;
  wire         _ifu_io_IN_TLBResp_bits_pte_v;
  wire         _ifu_io_IN_PTWResp_valid;
  wire         _ifu_io_IN_PTWResp_bits_id;
  wire         _ifu_io_IN_VMCSR_mode;
  wire [1:0]   _ifu_io_IN_VMCSR_priv;
  wire         _ifu_io_IN_trapCSR_interrupt;
  wire         _ifu_io_out_0_valid;
  wire [31:0]  _ifu_io_out_0_bits_pc;
  wire [31:0]  _ifu_io_out_0_bits_predTarget;
  wire [31:0]  _ifu_io_out_0_bits_inst;
  wire         _ifu_io_out_0_bits_pageFault;
  wire         _ifu_io_out_0_bits_interrupt;
  wire         _ifu_io_out_0_bits_lastBranch;
  wire         _ifu_io_out_1_valid;
  wire [31:0]  _ifu_io_out_1_bits_pc;
  wire [31:0]  _ifu_io_out_1_bits_predTarget;
  wire [31:0]  _ifu_io_out_1_bits_inst;
  wire         _ifu_io_out_1_bits_pageFault;
  wire         _ifu_io_out_1_bits_interrupt;
  wire         _ifu_io_out_1_bits_lastBranch;
  wire         _ifu_io_out_2_valid;
  wire [31:0]  _ifu_io_out_2_bits_pc;
  wire [31:0]  _ifu_io_out_2_bits_predTarget;
  wire [31:0]  _ifu_io_out_2_bits_inst;
  wire         _ifu_io_out_2_bits_pageFault;
  wire         _ifu_io_out_2_bits_interrupt;
  wire         _ifu_io_out_2_bits_lastBranch;
  wire         _ifu_io_out_3_valid;
  wire [31:0]  _ifu_io_out_3_bits_pc;
  wire [31:0]  _ifu_io_out_3_bits_predTarget;
  wire [31:0]  _ifu_io_out_3_bits_inst;
  wire         _ifu_io_out_3_bits_pageFault;
  wire         _ifu_io_out_3_bits_interrupt;
  wire         _ifu_io_out_3_bits_lastBranch;
  wire         _ifu_io_OUT_TLBReq_valid;
  wire [19:0]  _ifu_io_OUT_TLBReq_bits_vpn;
  wire         _ifu_io_OUT_PTWReq_valid;
  wire [19:0]  _ifu_io_OUT_PTWReq_bits_vpn;
  wire         _ifu_io_OUT_PTWReq_bits_stqPtr_flag;
  wire [3:0]   _ifu_io_OUT_PTWReq_bits_stqPtr_index;
  wire         _cacheController_io_IN_cacheCtrlUop_0_valid;
  wire [6:0]   _cacheController_io_IN_cacheCtrlUop_0_bits_index;
  wire [19:0]  _cacheController_io_IN_cacheCtrlUop_0_bits_rtag;
  wire [1:0]   _cacheController_io_IN_cacheCtrlUop_0_bits_way;
  wire [19:0]  _cacheController_io_IN_cacheCtrlUop_0_bits_wtag;
  wire [4:0]   _cacheController_io_IN_cacheCtrlUop_0_bits_offset;
  wire [3:0]   _cacheController_io_IN_cacheCtrlUop_0_bits_opcode;
  wire         _cacheController_io_IN_cacheCtrlUop_1_valid;
  wire [6:0]   _cacheController_io_IN_cacheCtrlUop_1_bits_index;
  wire [19:0]  _cacheController_io_IN_cacheCtrlUop_1_bits_rtag;
  wire [1:0]   _cacheController_io_IN_cacheCtrlUop_1_bits_way;
  wire [19:0]  _cacheController_io_IN_cacheCtrlUop_1_bits_wtag;
  wire [3:0]   _cacheController_io_IN_cacheCtrlUop_1_bits_wmask;
  wire [4:0]   _cacheController_io_IN_cacheCtrlUop_1_bits_offset;
  wire [31:0]  _cacheController_io_IN_cacheCtrlUop_1_bits_wdata;
  wire [3:0]   _cacheController_io_IN_cacheCtrlUop_1_bits_opcode;
  wire         _cacheController_io_IN_cacheCtrlUop_2_valid;
  wire [6:0]   _cacheController_io_IN_cacheCtrlUop_2_bits_index;
  wire [19:0]  _cacheController_io_IN_cacheCtrlUop_2_bits_rtag;
  wire [1:0]   _cacheController_io_IN_cacheCtrlUop_2_bits_way;
  wire [4:0]   _cacheController_io_IN_cacheCtrlUop_2_bits_offset;
  wire         _cacheController_io_IN_cacheCtrlUop_0_ready;
  wire         _cacheController_io_IN_cacheCtrlUop_1_ready;
  wire         _cacheController_io_IN_cacheCtrlUop_2_ready;
  wire         _cacheController_io_OUT_MSHR_0_valid;
  wire         _cacheController_io_OUT_MSHR_0_cacheId;
  wire [1:0]   _cacheController_io_OUT_MSHR_0_way;
  wire [31:0]  _cacheController_io_OUT_MSHR_0_memReadAddr;
  wire [31:0]  _cacheController_io_OUT_MSHR_0_memWriteAddr;
  wire         _cacheController_io_OUT_MSHR_1_valid;
  wire         _cacheController_io_OUT_MSHR_1_cacheId;
  wire [1:0]   _cacheController_io_OUT_MSHR_1_way;
  wire [31:0]  _cacheController_io_OUT_MSHR_1_memReadAddr;
  wire [31:0]  _cacheController_io_OUT_MSHR_1_memWriteAddr;
  wire         _cacheController_io_OUT_MSHR_2_valid;
  wire         _cacheController_io_OUT_MSHR_2_cacheId;
  wire [1:0]   _cacheController_io_OUT_MSHR_2_way;
  wire [31:0]  _cacheController_io_OUT_MSHR_2_memReadAddr;
  wire [31:0]  _cacheController_io_OUT_MSHR_2_memWriteAddr;
  wire         _cacheController_io_OUT_MSHR_3_valid;
  wire         _cacheController_io_OUT_MSHR_3_cacheId;
  wire [1:0]   _cacheController_io_OUT_MSHR_3_way;
  wire [31:0]  _cacheController_io_OUT_MSHR_3_memReadAddr;
  wire [31:0]  _cacheController_io_OUT_MSHR_3_memWriteAddr;
  wire         _cacheController_io_OUT_MSHR_4_valid;
  wire         _cacheController_io_OUT_MSHR_4_cacheId;
  wire [1:0]   _cacheController_io_OUT_MSHR_4_way;
  wire [31:0]  _cacheController_io_OUT_MSHR_4_memReadAddr;
  wire [31:0]  _cacheController_io_OUT_MSHR_4_memWriteAddr;
  wire         _cacheController_io_OUT_MSHR_5_valid;
  wire         _cacheController_io_OUT_MSHR_5_cacheId;
  wire [1:0]   _cacheController_io_OUT_MSHR_5_way;
  wire [31:0]  _cacheController_io_OUT_MSHR_5_memReadAddr;
  wire [31:0]  _cacheController_io_OUT_MSHR_5_memWriteAddr;
  wire         _cacheController_io_OUT_MSHR_6_valid;
  wire         _cacheController_io_OUT_MSHR_6_cacheId;
  wire [1:0]   _cacheController_io_OUT_MSHR_6_way;
  wire [31:0]  _cacheController_io_OUT_MSHR_6_memReadAddr;
  wire [31:0]  _cacheController_io_OUT_MSHR_6_memWriteAddr;
  wire         _cacheController_io_OUT_MSHR_7_valid;
  wire         _cacheController_io_OUT_MSHR_7_cacheId;
  wire [1:0]   _cacheController_io_OUT_MSHR_7_way;
  wire [31:0]  _cacheController_io_OUT_MSHR_7_memReadAddr;
  wire [31:0]  _cacheController_io_OUT_MSHR_7_memWriteAddr;
  wire         _cacheController_io_OUT_memLoadFoward_valid;
  wire [31:0]  _cacheController_io_OUT_memLoadFoward_bits_addr;
  wire [255:0] _cacheController_io_OUT_memLoadFoward_bits_data;
  wire         _cacheController_io_OUT_memLoadFoward_bits_uncached;
  wire         _cacheController_io_OUT_uncacheStoreResp;
  wire [31:0]  _icache_io_IN_tagRead_bits_addr;
  wire         _icache_io_IN_tagWrite_valid;
  wire [31:0]  _icache_io_IN_tagWrite_bits_addr;
  wire [1:0]   _icache_io_IN_tagWrite_bits_way;
  wire         _icache_io_IN_tagWrite_bits_data_valid;
  wire [19:0]  _icache_io_IN_tagWrite_bits_data_tag;
  wire [31:0]  _icache_io_IN_dataRead_bits_addr;
  wire         _icache_io_IN_ctrlDataWrite_valid;
  wire [31:0]  _icache_io_IN_ctrlDataWrite_bits_addr;
  wire [1:0]   _icache_io_IN_ctrlDataWrite_bits_way;
  wire [31:0]  _icache_io_IN_ctrlDataWrite_bits_wmask;
  wire [31:0]  _icache_io_IN_ctrlDataWrite_bits_data_0;
  wire [31:0]  _icache_io_IN_ctrlDataWrite_bits_data_1;
  wire [31:0]  _icache_io_IN_ctrlDataWrite_bits_data_2;
  wire [31:0]  _icache_io_IN_ctrlDataWrite_bits_data_3;
  wire [31:0]  _icache_io_IN_ctrlDataWrite_bits_data_4;
  wire [31:0]  _icache_io_IN_ctrlDataWrite_bits_data_5;
  wire [31:0]  _icache_io_IN_ctrlDataWrite_bits_data_6;
  wire [31:0]  _icache_io_IN_ctrlDataWrite_bits_data_7;
  wire         _icache_io_OUT_tagResp_tags_0_valid;
  wire [19:0]  _icache_io_OUT_tagResp_tags_0_tag;
  wire         _icache_io_OUT_tagResp_tags_1_valid;
  wire [19:0]  _icache_io_OUT_tagResp_tags_1_tag;
  wire         _icache_io_OUT_tagResp_tags_2_valid;
  wire [19:0]  _icache_io_OUT_tagResp_tags_2_tag;
  wire         _icache_io_OUT_tagResp_tags_3_valid;
  wire [19:0]  _icache_io_OUT_tagResp_tags_3_tag;
  wire [31:0]  _icache_io_OUT_dataResp_data_0_0;
  wire [31:0]  _icache_io_OUT_dataResp_data_0_1;
  wire [31:0]  _icache_io_OUT_dataResp_data_0_2;
  wire [31:0]  _icache_io_OUT_dataResp_data_0_3;
  wire [31:0]  _icache_io_OUT_dataResp_data_0_4;
  wire [31:0]  _icache_io_OUT_dataResp_data_0_5;
  wire [31:0]  _icache_io_OUT_dataResp_data_0_6;
  wire [31:0]  _icache_io_OUT_dataResp_data_0_7;
  wire [31:0]  _icache_io_OUT_dataResp_data_1_0;
  wire [31:0]  _icache_io_OUT_dataResp_data_1_1;
  wire [31:0]  _icache_io_OUT_dataResp_data_1_2;
  wire [31:0]  _icache_io_OUT_dataResp_data_1_3;
  wire [31:0]  _icache_io_OUT_dataResp_data_1_4;
  wire [31:0]  _icache_io_OUT_dataResp_data_1_5;
  wire [31:0]  _icache_io_OUT_dataResp_data_1_6;
  wire [31:0]  _icache_io_OUT_dataResp_data_1_7;
  wire [31:0]  _icache_io_OUT_dataResp_data_2_0;
  wire [31:0]  _icache_io_OUT_dataResp_data_2_1;
  wire [31:0]  _icache_io_OUT_dataResp_data_2_2;
  wire [31:0]  _icache_io_OUT_dataResp_data_2_3;
  wire [31:0]  _icache_io_OUT_dataResp_data_2_4;
  wire [31:0]  _icache_io_OUT_dataResp_data_2_5;
  wire [31:0]  _icache_io_OUT_dataResp_data_2_6;
  wire [31:0]  _icache_io_OUT_dataResp_data_2_7;
  wire [31:0]  _icache_io_OUT_dataResp_data_3_0;
  wire [31:0]  _icache_io_OUT_dataResp_data_3_1;
  wire [31:0]  _icache_io_OUT_dataResp_data_3_2;
  wire [31:0]  _icache_io_OUT_dataResp_data_3_3;
  wire [31:0]  _icache_io_OUT_dataResp_data_3_4;
  wire [31:0]  _icache_io_OUT_dataResp_data_3_5;
  wire [31:0]  _icache_io_OUT_dataResp_data_3_6;
  wire [31:0]  _icache_io_OUT_dataResp_data_3_7;
  wire         _dcache_io_IN_tagReq_valid;
  wire [31:0]  _dcache_io_IN_tagReq_bits_addr;
  wire         _dcache_io_IN_tagReq_bits_write;
  wire [1:0]   _dcache_io_IN_tagReq_bits_way;
  wire         _dcache_io_IN_tagReq_bits_data_valid;
  wire [19:0]  _dcache_io_IN_tagReq_bits_data_tag;
  wire         _dcache_io_IN_dataReq_valid;
  wire [31:0]  _dcache_io_IN_dataReq_bits_addr;
  wire [1:0]   _dcache_io_IN_dataReq_bits_way;
  wire [31:0]  _dcache_io_IN_dataReq_bits_wmask;
  wire [255:0] _dcache_io_IN_dataReq_bits_data;
  wire         _dcache_io_IN_ctrlDataRead_valid;
  wire [31:0]  _dcache_io_IN_ctrlDataRead_bits_addr;
  wire         _dcache_io_IN_ctrlDataWrite_valid;
  wire [31:0]  _dcache_io_IN_ctrlDataWrite_bits_addr;
  wire [1:0]   _dcache_io_IN_ctrlDataWrite_bits_way;
  wire [31:0]  _dcache_io_IN_ctrlDataWrite_bits_wmask;
  wire [255:0] _dcache_io_IN_ctrlDataWrite_bits_data;
  wire         _dcache_io_OUT_tagResp_tags_0_valid;
  wire [19:0]  _dcache_io_OUT_tagResp_tags_0_tag;
  wire         _dcache_io_OUT_tagResp_tags_1_valid;
  wire [19:0]  _dcache_io_OUT_tagResp_tags_1_tag;
  wire         _dcache_io_OUT_tagResp_tags_2_valid;
  wire [19:0]  _dcache_io_OUT_tagResp_tags_2_tag;
  wire         _dcache_io_OUT_tagResp_tags_3_valid;
  wire [19:0]  _dcache_io_OUT_tagResp_tags_3_tag;
  wire         _dcache_io_IN_dataReq_ready;
  wire [31:0]  _dcache_io_OUT_dataResp_data_0_0;
  wire [31:0]  _dcache_io_OUT_dataResp_data_0_1;
  wire [31:0]  _dcache_io_OUT_dataResp_data_0_2;
  wire [31:0]  _dcache_io_OUT_dataResp_data_0_3;
  wire [31:0]  _dcache_io_OUT_dataResp_data_0_4;
  wire [31:0]  _dcache_io_OUT_dataResp_data_0_5;
  wire [31:0]  _dcache_io_OUT_dataResp_data_0_6;
  wire [31:0]  _dcache_io_OUT_dataResp_data_0_7;
  wire [31:0]  _dcache_io_OUT_dataResp_data_1_0;
  wire [31:0]  _dcache_io_OUT_dataResp_data_1_1;
  wire [31:0]  _dcache_io_OUT_dataResp_data_1_2;
  wire [31:0]  _dcache_io_OUT_dataResp_data_1_3;
  wire [31:0]  _dcache_io_OUT_dataResp_data_1_4;
  wire [31:0]  _dcache_io_OUT_dataResp_data_1_5;
  wire [31:0]  _dcache_io_OUT_dataResp_data_1_6;
  wire [31:0]  _dcache_io_OUT_dataResp_data_1_7;
  wire [31:0]  _dcache_io_OUT_dataResp_data_2_0;
  wire [31:0]  _dcache_io_OUT_dataResp_data_2_1;
  wire [31:0]  _dcache_io_OUT_dataResp_data_2_2;
  wire [31:0]  _dcache_io_OUT_dataResp_data_2_3;
  wire [31:0]  _dcache_io_OUT_dataResp_data_2_4;
  wire [31:0]  _dcache_io_OUT_dataResp_data_2_5;
  wire [31:0]  _dcache_io_OUT_dataResp_data_2_6;
  wire [31:0]  _dcache_io_OUT_dataResp_data_2_7;
  wire [31:0]  _dcache_io_OUT_dataResp_data_3_0;
  wire [31:0]  _dcache_io_OUT_dataResp_data_3_1;
  wire [31:0]  _dcache_io_OUT_dataResp_data_3_2;
  wire [31:0]  _dcache_io_OUT_dataResp_data_3_3;
  wire [31:0]  _dcache_io_OUT_dataResp_data_3_4;
  wire [31:0]  _dcache_io_OUT_dataResp_data_3_5;
  wire [31:0]  _dcache_io_OUT_dataResp_data_3_6;
  wire [31:0]  _dcache_io_OUT_dataResp_data_3_7;
  wire [31:0]  _dcache_io_OUT_ctrlDataResp_data_0_0;
  wire [31:0]  _dcache_io_OUT_ctrlDataResp_data_0_1;
  wire [31:0]  _dcache_io_OUT_ctrlDataResp_data_0_2;
  wire [31:0]  _dcache_io_OUT_ctrlDataResp_data_0_3;
  wire [31:0]  _dcache_io_OUT_ctrlDataResp_data_0_4;
  wire [31:0]  _dcache_io_OUT_ctrlDataResp_data_0_5;
  wire [31:0]  _dcache_io_OUT_ctrlDataResp_data_0_6;
  wire [31:0]  _dcache_io_OUT_ctrlDataResp_data_0_7;
  wire [31:0]  _dcache_io_OUT_ctrlDataResp_data_1_0;
  wire [31:0]  _dcache_io_OUT_ctrlDataResp_data_1_1;
  wire [31:0]  _dcache_io_OUT_ctrlDataResp_data_1_2;
  wire [31:0]  _dcache_io_OUT_ctrlDataResp_data_1_3;
  wire [31:0]  _dcache_io_OUT_ctrlDataResp_data_1_4;
  wire [31:0]  _dcache_io_OUT_ctrlDataResp_data_1_5;
  wire [31:0]  _dcache_io_OUT_ctrlDataResp_data_1_6;
  wire [31:0]  _dcache_io_OUT_ctrlDataResp_data_1_7;
  wire [31:0]  _dcache_io_OUT_ctrlDataResp_data_2_0;
  wire [31:0]  _dcache_io_OUT_ctrlDataResp_data_2_1;
  wire [31:0]  _dcache_io_OUT_ctrlDataResp_data_2_2;
  wire [31:0]  _dcache_io_OUT_ctrlDataResp_data_2_3;
  wire [31:0]  _dcache_io_OUT_ctrlDataResp_data_2_4;
  wire [31:0]  _dcache_io_OUT_ctrlDataResp_data_2_5;
  wire [31:0]  _dcache_io_OUT_ctrlDataResp_data_2_6;
  wire [31:0]  _dcache_io_OUT_ctrlDataResp_data_2_7;
  wire [31:0]  _dcache_io_OUT_ctrlDataResp_data_3_0;
  wire [31:0]  _dcache_io_OUT_ctrlDataResp_data_3_1;
  wire [31:0]  _dcache_io_OUT_ctrlDataResp_data_3_2;
  wire [31:0]  _dcache_io_OUT_ctrlDataResp_data_3_3;
  wire [31:0]  _dcache_io_OUT_ctrlDataResp_data_3_4;
  wire [31:0]  _dcache_io_OUT_ctrlDataResp_data_3_5;
  wire [31:0]  _dcache_io_OUT_ctrlDataResp_data_3_6;
  wire [31:0]  _dcache_io_OUT_ctrlDataResp_data_3_7;
  wire [31:0]  _internalMMIO_io_IN_mmioReq_addr;
  wire         _internalMMIO_io_IN_mmioReq_ren;
  wire [31:0]  _internalMMIO_io_IN_mmioReq_wdata;
  wire         _internalMMIO_io_IN_mmioReq_wen;
  wire [31:0]  _internalMMIO_io_OUT_mmioResp_data;
  wire [63:0]  _internalMMIO_io_OUT_mtime;
  wire         _internalMMIO_io_OUT_MTIP;
  wire [5:0]   writebackUop_4_bits_prd /*verilator public_flat*/ = 6'h0;
  wire [3:0]   writebackUop_1_bits_flag /*verilator public_flat*/ = 4'h0;
  wire [3:0]   writebackUop_3_bits_flag /*verilator public_flat*/ = 4'h0;
  wire [31:0]  writebackUop_1_bits_target /*verilator public_flat*/ = 32'h0;
  wire [31:0]  writebackUop_3_bits_target /*verilator public_flat*/ = 32'h0;
  wire [31:0]  writebackUop_4_bits_data /*verilator public_flat*/ = 32'h0;
  wire         readRegUop_0_ready /*verilator public_flat*/ = 1'h1;
  wire         readRegUop_2_ready /*verilator public_flat*/ = 1'h1;
  wire         writebackUop_0_bits_dest /*verilator public_flat*/ = 1'h0;
  wire         writebackUop_1_bits_dest /*verilator public_flat*/ = 1'h0;
  wire         writebackUop_2_bits_dest /*verilator public_flat*/ = 1'h0;
  wire         writebackUop_4_bits_dest /*verilator public_flat*/ = 1'h0;
  wire         _iq_3_io_IN_idivBusy_T = _iq_1_io_OUT_issueUop_bits_fuType == 4'h4;
  wire [3:0]   readRegUop_1_bits_fuType /*verilator public_flat*/;
  wire         _iq_3_io_IN_idivBusy_T_2 = readRegUop_1_bits_fuType == 4'h4;
  wire         readRegUop_1_valid /*verilator public_flat*/;
  InternalMMIO internalMMIO (
    .clock                (clock),
    .reset                (reset),
    .io_IN_mmioReq_addr   (_internalMMIO_io_IN_mmioReq_addr),
    .io_IN_mmioReq_ren    (_internalMMIO_io_IN_mmioReq_ren),
    .io_IN_mmioReq_wdata  (_internalMMIO_io_IN_mmioReq_wdata),
    .io_IN_mmioReq_wen    (_internalMMIO_io_IN_mmioReq_wen),
    .io_OUT_mmioResp_data (_internalMMIO_io_OUT_mmioResp_data),
    .io_OUT_mtime         (_internalMMIO_io_OUT_mtime),
    .io_OUT_MTIP          (_internalMMIO_io_OUT_MTIP)
  );
  DCache dcache (
    .clock                          (clock),
    .io_IN_tagReq_valid             (_dcache_io_IN_tagReq_valid),
    .io_IN_tagReq_bits_addr         (_dcache_io_IN_tagReq_bits_addr),
    .io_IN_tagReq_bits_write        (_dcache_io_IN_tagReq_bits_write),
    .io_IN_tagReq_bits_way          (_dcache_io_IN_tagReq_bits_way),
    .io_IN_tagReq_bits_data_valid   (_dcache_io_IN_tagReq_bits_data_valid),
    .io_IN_tagReq_bits_data_tag     (_dcache_io_IN_tagReq_bits_data_tag),
    .io_OUT_tagResp_tags_0_valid    (_dcache_io_OUT_tagResp_tags_0_valid),
    .io_OUT_tagResp_tags_0_tag      (_dcache_io_OUT_tagResp_tags_0_tag),
    .io_OUT_tagResp_tags_1_valid    (_dcache_io_OUT_tagResp_tags_1_valid),
    .io_OUT_tagResp_tags_1_tag      (_dcache_io_OUT_tagResp_tags_1_tag),
    .io_OUT_tagResp_tags_2_valid    (_dcache_io_OUT_tagResp_tags_2_valid),
    .io_OUT_tagResp_tags_2_tag      (_dcache_io_OUT_tagResp_tags_2_tag),
    .io_OUT_tagResp_tags_3_valid    (_dcache_io_OUT_tagResp_tags_3_valid),
    .io_OUT_tagResp_tags_3_tag      (_dcache_io_OUT_tagResp_tags_3_tag),
    .io_IN_dataReq_ready            (_dcache_io_IN_dataReq_ready),
    .io_IN_dataReq_valid            (_dcache_io_IN_dataReq_valid),
    .io_IN_dataReq_bits_addr        (_dcache_io_IN_dataReq_bits_addr),
    .io_IN_dataReq_bits_way         (_dcache_io_IN_dataReq_bits_way),
    .io_IN_dataReq_bits_wmask       (_dcache_io_IN_dataReq_bits_wmask),
    .io_IN_dataReq_bits_data        (_dcache_io_IN_dataReq_bits_data),
    .io_OUT_dataResp_data_0_0       (_dcache_io_OUT_dataResp_data_0_0),
    .io_OUT_dataResp_data_0_1       (_dcache_io_OUT_dataResp_data_0_1),
    .io_OUT_dataResp_data_0_2       (_dcache_io_OUT_dataResp_data_0_2),
    .io_OUT_dataResp_data_0_3       (_dcache_io_OUT_dataResp_data_0_3),
    .io_OUT_dataResp_data_0_4       (_dcache_io_OUT_dataResp_data_0_4),
    .io_OUT_dataResp_data_0_5       (_dcache_io_OUT_dataResp_data_0_5),
    .io_OUT_dataResp_data_0_6       (_dcache_io_OUT_dataResp_data_0_6),
    .io_OUT_dataResp_data_0_7       (_dcache_io_OUT_dataResp_data_0_7),
    .io_OUT_dataResp_data_1_0       (_dcache_io_OUT_dataResp_data_1_0),
    .io_OUT_dataResp_data_1_1       (_dcache_io_OUT_dataResp_data_1_1),
    .io_OUT_dataResp_data_1_2       (_dcache_io_OUT_dataResp_data_1_2),
    .io_OUT_dataResp_data_1_3       (_dcache_io_OUT_dataResp_data_1_3),
    .io_OUT_dataResp_data_1_4       (_dcache_io_OUT_dataResp_data_1_4),
    .io_OUT_dataResp_data_1_5       (_dcache_io_OUT_dataResp_data_1_5),
    .io_OUT_dataResp_data_1_6       (_dcache_io_OUT_dataResp_data_1_6),
    .io_OUT_dataResp_data_1_7       (_dcache_io_OUT_dataResp_data_1_7),
    .io_OUT_dataResp_data_2_0       (_dcache_io_OUT_dataResp_data_2_0),
    .io_OUT_dataResp_data_2_1       (_dcache_io_OUT_dataResp_data_2_1),
    .io_OUT_dataResp_data_2_2       (_dcache_io_OUT_dataResp_data_2_2),
    .io_OUT_dataResp_data_2_3       (_dcache_io_OUT_dataResp_data_2_3),
    .io_OUT_dataResp_data_2_4       (_dcache_io_OUT_dataResp_data_2_4),
    .io_OUT_dataResp_data_2_5       (_dcache_io_OUT_dataResp_data_2_5),
    .io_OUT_dataResp_data_2_6       (_dcache_io_OUT_dataResp_data_2_6),
    .io_OUT_dataResp_data_2_7       (_dcache_io_OUT_dataResp_data_2_7),
    .io_OUT_dataResp_data_3_0       (_dcache_io_OUT_dataResp_data_3_0),
    .io_OUT_dataResp_data_3_1       (_dcache_io_OUT_dataResp_data_3_1),
    .io_OUT_dataResp_data_3_2       (_dcache_io_OUT_dataResp_data_3_2),
    .io_OUT_dataResp_data_3_3       (_dcache_io_OUT_dataResp_data_3_3),
    .io_OUT_dataResp_data_3_4       (_dcache_io_OUT_dataResp_data_3_4),
    .io_OUT_dataResp_data_3_5       (_dcache_io_OUT_dataResp_data_3_5),
    .io_OUT_dataResp_data_3_6       (_dcache_io_OUT_dataResp_data_3_6),
    .io_OUT_dataResp_data_3_7       (_dcache_io_OUT_dataResp_data_3_7),
    .io_IN_ctrlDataRead_valid       (_dcache_io_IN_ctrlDataRead_valid),
    .io_IN_ctrlDataRead_bits_addr   (_dcache_io_IN_ctrlDataRead_bits_addr),
    .io_OUT_ctrlDataResp_data_0_0   (_dcache_io_OUT_ctrlDataResp_data_0_0),
    .io_OUT_ctrlDataResp_data_0_1   (_dcache_io_OUT_ctrlDataResp_data_0_1),
    .io_OUT_ctrlDataResp_data_0_2   (_dcache_io_OUT_ctrlDataResp_data_0_2),
    .io_OUT_ctrlDataResp_data_0_3   (_dcache_io_OUT_ctrlDataResp_data_0_3),
    .io_OUT_ctrlDataResp_data_0_4   (_dcache_io_OUT_ctrlDataResp_data_0_4),
    .io_OUT_ctrlDataResp_data_0_5   (_dcache_io_OUT_ctrlDataResp_data_0_5),
    .io_OUT_ctrlDataResp_data_0_6   (_dcache_io_OUT_ctrlDataResp_data_0_6),
    .io_OUT_ctrlDataResp_data_0_7   (_dcache_io_OUT_ctrlDataResp_data_0_7),
    .io_OUT_ctrlDataResp_data_1_0   (_dcache_io_OUT_ctrlDataResp_data_1_0),
    .io_OUT_ctrlDataResp_data_1_1   (_dcache_io_OUT_ctrlDataResp_data_1_1),
    .io_OUT_ctrlDataResp_data_1_2   (_dcache_io_OUT_ctrlDataResp_data_1_2),
    .io_OUT_ctrlDataResp_data_1_3   (_dcache_io_OUT_ctrlDataResp_data_1_3),
    .io_OUT_ctrlDataResp_data_1_4   (_dcache_io_OUT_ctrlDataResp_data_1_4),
    .io_OUT_ctrlDataResp_data_1_5   (_dcache_io_OUT_ctrlDataResp_data_1_5),
    .io_OUT_ctrlDataResp_data_1_6   (_dcache_io_OUT_ctrlDataResp_data_1_6),
    .io_OUT_ctrlDataResp_data_1_7   (_dcache_io_OUT_ctrlDataResp_data_1_7),
    .io_OUT_ctrlDataResp_data_2_0   (_dcache_io_OUT_ctrlDataResp_data_2_0),
    .io_OUT_ctrlDataResp_data_2_1   (_dcache_io_OUT_ctrlDataResp_data_2_1),
    .io_OUT_ctrlDataResp_data_2_2   (_dcache_io_OUT_ctrlDataResp_data_2_2),
    .io_OUT_ctrlDataResp_data_2_3   (_dcache_io_OUT_ctrlDataResp_data_2_3),
    .io_OUT_ctrlDataResp_data_2_4   (_dcache_io_OUT_ctrlDataResp_data_2_4),
    .io_OUT_ctrlDataResp_data_2_5   (_dcache_io_OUT_ctrlDataResp_data_2_5),
    .io_OUT_ctrlDataResp_data_2_6   (_dcache_io_OUT_ctrlDataResp_data_2_6),
    .io_OUT_ctrlDataResp_data_2_7   (_dcache_io_OUT_ctrlDataResp_data_2_7),
    .io_OUT_ctrlDataResp_data_3_0   (_dcache_io_OUT_ctrlDataResp_data_3_0),
    .io_OUT_ctrlDataResp_data_3_1   (_dcache_io_OUT_ctrlDataResp_data_3_1),
    .io_OUT_ctrlDataResp_data_3_2   (_dcache_io_OUT_ctrlDataResp_data_3_2),
    .io_OUT_ctrlDataResp_data_3_3   (_dcache_io_OUT_ctrlDataResp_data_3_3),
    .io_OUT_ctrlDataResp_data_3_4   (_dcache_io_OUT_ctrlDataResp_data_3_4),
    .io_OUT_ctrlDataResp_data_3_5   (_dcache_io_OUT_ctrlDataResp_data_3_5),
    .io_OUT_ctrlDataResp_data_3_6   (_dcache_io_OUT_ctrlDataResp_data_3_6),
    .io_OUT_ctrlDataResp_data_3_7   (_dcache_io_OUT_ctrlDataResp_data_3_7),
    .io_IN_ctrlDataWrite_valid      (_dcache_io_IN_ctrlDataWrite_valid),
    .io_IN_ctrlDataWrite_bits_addr  (_dcache_io_IN_ctrlDataWrite_bits_addr),
    .io_IN_ctrlDataWrite_bits_way   (_dcache_io_IN_ctrlDataWrite_bits_way),
    .io_IN_ctrlDataWrite_bits_wmask (_dcache_io_IN_ctrlDataWrite_bits_wmask),
    .io_IN_ctrlDataWrite_bits_data  (_dcache_io_IN_ctrlDataWrite_bits_data)
  );
  NewICache icache (
    .clock                           (clock),
    .io_IN_tagRead_bits_addr         (_icache_io_IN_tagRead_bits_addr),
    .io_OUT_tagResp_tags_0_valid     (_icache_io_OUT_tagResp_tags_0_valid),
    .io_OUT_tagResp_tags_0_tag       (_icache_io_OUT_tagResp_tags_0_tag),
    .io_OUT_tagResp_tags_1_valid     (_icache_io_OUT_tagResp_tags_1_valid),
    .io_OUT_tagResp_tags_1_tag       (_icache_io_OUT_tagResp_tags_1_tag),
    .io_OUT_tagResp_tags_2_valid     (_icache_io_OUT_tagResp_tags_2_valid),
    .io_OUT_tagResp_tags_2_tag       (_icache_io_OUT_tagResp_tags_2_tag),
    .io_OUT_tagResp_tags_3_valid     (_icache_io_OUT_tagResp_tags_3_valid),
    .io_OUT_tagResp_tags_3_tag       (_icache_io_OUT_tagResp_tags_3_tag),
    .io_IN_tagWrite_valid            (_icache_io_IN_tagWrite_valid),
    .io_IN_tagWrite_bits_addr        (_icache_io_IN_tagWrite_bits_addr),
    .io_IN_tagWrite_bits_way         (_icache_io_IN_tagWrite_bits_way),
    .io_IN_tagWrite_bits_data_valid  (_icache_io_IN_tagWrite_bits_data_valid),
    .io_IN_tagWrite_bits_data_tag    (_icache_io_IN_tagWrite_bits_data_tag),
    .io_IN_dataRead_bits_addr        (_icache_io_IN_dataRead_bits_addr),
    .io_OUT_dataResp_data_0_0        (_icache_io_OUT_dataResp_data_0_0),
    .io_OUT_dataResp_data_0_1        (_icache_io_OUT_dataResp_data_0_1),
    .io_OUT_dataResp_data_0_2        (_icache_io_OUT_dataResp_data_0_2),
    .io_OUT_dataResp_data_0_3        (_icache_io_OUT_dataResp_data_0_3),
    .io_OUT_dataResp_data_0_4        (_icache_io_OUT_dataResp_data_0_4),
    .io_OUT_dataResp_data_0_5        (_icache_io_OUT_dataResp_data_0_5),
    .io_OUT_dataResp_data_0_6        (_icache_io_OUT_dataResp_data_0_6),
    .io_OUT_dataResp_data_0_7        (_icache_io_OUT_dataResp_data_0_7),
    .io_OUT_dataResp_data_1_0        (_icache_io_OUT_dataResp_data_1_0),
    .io_OUT_dataResp_data_1_1        (_icache_io_OUT_dataResp_data_1_1),
    .io_OUT_dataResp_data_1_2        (_icache_io_OUT_dataResp_data_1_2),
    .io_OUT_dataResp_data_1_3        (_icache_io_OUT_dataResp_data_1_3),
    .io_OUT_dataResp_data_1_4        (_icache_io_OUT_dataResp_data_1_4),
    .io_OUT_dataResp_data_1_5        (_icache_io_OUT_dataResp_data_1_5),
    .io_OUT_dataResp_data_1_6        (_icache_io_OUT_dataResp_data_1_6),
    .io_OUT_dataResp_data_1_7        (_icache_io_OUT_dataResp_data_1_7),
    .io_OUT_dataResp_data_2_0        (_icache_io_OUT_dataResp_data_2_0),
    .io_OUT_dataResp_data_2_1        (_icache_io_OUT_dataResp_data_2_1),
    .io_OUT_dataResp_data_2_2        (_icache_io_OUT_dataResp_data_2_2),
    .io_OUT_dataResp_data_2_3        (_icache_io_OUT_dataResp_data_2_3),
    .io_OUT_dataResp_data_2_4        (_icache_io_OUT_dataResp_data_2_4),
    .io_OUT_dataResp_data_2_5        (_icache_io_OUT_dataResp_data_2_5),
    .io_OUT_dataResp_data_2_6        (_icache_io_OUT_dataResp_data_2_6),
    .io_OUT_dataResp_data_2_7        (_icache_io_OUT_dataResp_data_2_7),
    .io_OUT_dataResp_data_3_0        (_icache_io_OUT_dataResp_data_3_0),
    .io_OUT_dataResp_data_3_1        (_icache_io_OUT_dataResp_data_3_1),
    .io_OUT_dataResp_data_3_2        (_icache_io_OUT_dataResp_data_3_2),
    .io_OUT_dataResp_data_3_3        (_icache_io_OUT_dataResp_data_3_3),
    .io_OUT_dataResp_data_3_4        (_icache_io_OUT_dataResp_data_3_4),
    .io_OUT_dataResp_data_3_5        (_icache_io_OUT_dataResp_data_3_5),
    .io_OUT_dataResp_data_3_6        (_icache_io_OUT_dataResp_data_3_6),
    .io_OUT_dataResp_data_3_7        (_icache_io_OUT_dataResp_data_3_7),
    .io_IN_ctrlDataWrite_valid       (_icache_io_IN_ctrlDataWrite_valid),
    .io_IN_ctrlDataWrite_bits_addr   (_icache_io_IN_ctrlDataWrite_bits_addr),
    .io_IN_ctrlDataWrite_bits_way    (_icache_io_IN_ctrlDataWrite_bits_way),
    .io_IN_ctrlDataWrite_bits_wmask  (_icache_io_IN_ctrlDataWrite_bits_wmask),
    .io_IN_ctrlDataWrite_bits_data_0 (_icache_io_IN_ctrlDataWrite_bits_data_0),
    .io_IN_ctrlDataWrite_bits_data_1 (_icache_io_IN_ctrlDataWrite_bits_data_1),
    .io_IN_ctrlDataWrite_bits_data_2 (_icache_io_IN_ctrlDataWrite_bits_data_2),
    .io_IN_ctrlDataWrite_bits_data_3 (_icache_io_IN_ctrlDataWrite_bits_data_3),
    .io_IN_ctrlDataWrite_bits_data_4 (_icache_io_IN_ctrlDataWrite_bits_data_4),
    .io_IN_ctrlDataWrite_bits_data_5 (_icache_io_IN_ctrlDataWrite_bits_data_5),
    .io_IN_ctrlDataWrite_bits_data_6 (_icache_io_IN_ctrlDataWrite_bits_data_6),
    .io_IN_ctrlDataWrite_bits_data_7 (_icache_io_IN_ctrlDataWrite_bits_data_7)
  );
  CacheController cacheController (
    .clock                              (clock),
    .reset                              (reset),
    .io_IN_cacheCtrlUop_0_ready         (_cacheController_io_IN_cacheCtrlUop_0_ready),
    .io_IN_cacheCtrlUop_0_valid         (_cacheController_io_IN_cacheCtrlUop_0_valid),
    .io_IN_cacheCtrlUop_0_bits_index
      (_cacheController_io_IN_cacheCtrlUop_0_bits_index),
    .io_IN_cacheCtrlUop_0_bits_rtag     (_cacheController_io_IN_cacheCtrlUop_0_bits_rtag),
    .io_IN_cacheCtrlUop_0_bits_way      (_cacheController_io_IN_cacheCtrlUop_0_bits_way),
    .io_IN_cacheCtrlUop_0_bits_wtag     (_cacheController_io_IN_cacheCtrlUop_0_bits_wtag),
    .io_IN_cacheCtrlUop_0_bits_offset
      (_cacheController_io_IN_cacheCtrlUop_0_bits_offset),
    .io_IN_cacheCtrlUop_0_bits_opcode
      (_cacheController_io_IN_cacheCtrlUop_0_bits_opcode),
    .io_IN_cacheCtrlUop_1_ready         (_cacheController_io_IN_cacheCtrlUop_1_ready),
    .io_IN_cacheCtrlUop_1_valid         (_cacheController_io_IN_cacheCtrlUop_1_valid),
    .io_IN_cacheCtrlUop_1_bits_index
      (_cacheController_io_IN_cacheCtrlUop_1_bits_index),
    .io_IN_cacheCtrlUop_1_bits_rtag     (_cacheController_io_IN_cacheCtrlUop_1_bits_rtag),
    .io_IN_cacheCtrlUop_1_bits_way      (_cacheController_io_IN_cacheCtrlUop_1_bits_way),
    .io_IN_cacheCtrlUop_1_bits_wtag     (_cacheController_io_IN_cacheCtrlUop_1_bits_wtag),
    .io_IN_cacheCtrlUop_1_bits_wmask
      (_cacheController_io_IN_cacheCtrlUop_1_bits_wmask),
    .io_IN_cacheCtrlUop_1_bits_offset
      (_cacheController_io_IN_cacheCtrlUop_1_bits_offset),
    .io_IN_cacheCtrlUop_1_bits_wdata
      (_cacheController_io_IN_cacheCtrlUop_1_bits_wdata),
    .io_IN_cacheCtrlUop_1_bits_opcode
      (_cacheController_io_IN_cacheCtrlUop_1_bits_opcode),
    .io_IN_cacheCtrlUop_2_ready         (_cacheController_io_IN_cacheCtrlUop_2_ready),
    .io_IN_cacheCtrlUop_2_valid         (_cacheController_io_IN_cacheCtrlUop_2_valid),
    .io_IN_cacheCtrlUop_2_bits_index
      (_cacheController_io_IN_cacheCtrlUop_2_bits_index),
    .io_IN_cacheCtrlUop_2_bits_rtag     (_cacheController_io_IN_cacheCtrlUop_2_bits_rtag),
    .io_IN_cacheCtrlUop_2_bits_way      (_cacheController_io_IN_cacheCtrlUop_2_bits_way),
    .io_IN_cacheCtrlUop_2_bits_offset
      (_cacheController_io_IN_cacheCtrlUop_2_bits_offset),
    .io_OUT_DDataRead_valid             (_dcache_io_IN_ctrlDataRead_valid),
    .io_OUT_DDataRead_bits_addr         (_dcache_io_IN_ctrlDataRead_bits_addr),
    .io_OUT_DDataWrite_valid            (_dcache_io_IN_ctrlDataWrite_valid),
    .io_OUT_DDataWrite_bits_addr        (_dcache_io_IN_ctrlDataWrite_bits_addr),
    .io_OUT_DDataWrite_bits_way         (_dcache_io_IN_ctrlDataWrite_bits_way),
    .io_OUT_DDataWrite_bits_wmask       (_dcache_io_IN_ctrlDataWrite_bits_wmask),
    .io_OUT_DDataWrite_bits_data        (_dcache_io_IN_ctrlDataWrite_bits_data),
    .io_IN_DDataResp_data_0_0           (_dcache_io_OUT_ctrlDataResp_data_0_0),
    .io_IN_DDataResp_data_0_1           (_dcache_io_OUT_ctrlDataResp_data_0_1),
    .io_IN_DDataResp_data_0_2           (_dcache_io_OUT_ctrlDataResp_data_0_2),
    .io_IN_DDataResp_data_0_3           (_dcache_io_OUT_ctrlDataResp_data_0_3),
    .io_IN_DDataResp_data_0_4           (_dcache_io_OUT_ctrlDataResp_data_0_4),
    .io_IN_DDataResp_data_0_5           (_dcache_io_OUT_ctrlDataResp_data_0_5),
    .io_IN_DDataResp_data_0_6           (_dcache_io_OUT_ctrlDataResp_data_0_6),
    .io_IN_DDataResp_data_0_7           (_dcache_io_OUT_ctrlDataResp_data_0_7),
    .io_IN_DDataResp_data_1_0           (_dcache_io_OUT_ctrlDataResp_data_1_0),
    .io_IN_DDataResp_data_1_1           (_dcache_io_OUT_ctrlDataResp_data_1_1),
    .io_IN_DDataResp_data_1_2           (_dcache_io_OUT_ctrlDataResp_data_1_2),
    .io_IN_DDataResp_data_1_3           (_dcache_io_OUT_ctrlDataResp_data_1_3),
    .io_IN_DDataResp_data_1_4           (_dcache_io_OUT_ctrlDataResp_data_1_4),
    .io_IN_DDataResp_data_1_5           (_dcache_io_OUT_ctrlDataResp_data_1_5),
    .io_IN_DDataResp_data_1_6           (_dcache_io_OUT_ctrlDataResp_data_1_6),
    .io_IN_DDataResp_data_1_7           (_dcache_io_OUT_ctrlDataResp_data_1_7),
    .io_IN_DDataResp_data_2_0           (_dcache_io_OUT_ctrlDataResp_data_2_0),
    .io_IN_DDataResp_data_2_1           (_dcache_io_OUT_ctrlDataResp_data_2_1),
    .io_IN_DDataResp_data_2_2           (_dcache_io_OUT_ctrlDataResp_data_2_2),
    .io_IN_DDataResp_data_2_3           (_dcache_io_OUT_ctrlDataResp_data_2_3),
    .io_IN_DDataResp_data_2_4           (_dcache_io_OUT_ctrlDataResp_data_2_4),
    .io_IN_DDataResp_data_2_5           (_dcache_io_OUT_ctrlDataResp_data_2_5),
    .io_IN_DDataResp_data_2_6           (_dcache_io_OUT_ctrlDataResp_data_2_6),
    .io_IN_DDataResp_data_2_7           (_dcache_io_OUT_ctrlDataResp_data_2_7),
    .io_IN_DDataResp_data_3_0           (_dcache_io_OUT_ctrlDataResp_data_3_0),
    .io_IN_DDataResp_data_3_1           (_dcache_io_OUT_ctrlDataResp_data_3_1),
    .io_IN_DDataResp_data_3_2           (_dcache_io_OUT_ctrlDataResp_data_3_2),
    .io_IN_DDataResp_data_3_3           (_dcache_io_OUT_ctrlDataResp_data_3_3),
    .io_IN_DDataResp_data_3_4           (_dcache_io_OUT_ctrlDataResp_data_3_4),
    .io_IN_DDataResp_data_3_5           (_dcache_io_OUT_ctrlDataResp_data_3_5),
    .io_IN_DDataResp_data_3_6           (_dcache_io_OUT_ctrlDataResp_data_3_6),
    .io_IN_DDataResp_data_3_7           (_dcache_io_OUT_ctrlDataResp_data_3_7),
    .io_OUT_IDataWrite_valid            (_icache_io_IN_ctrlDataWrite_valid),
    .io_OUT_IDataWrite_bits_addr        (_icache_io_IN_ctrlDataWrite_bits_addr),
    .io_OUT_IDataWrite_bits_way         (_icache_io_IN_ctrlDataWrite_bits_way),
    .io_OUT_IDataWrite_bits_wmask       (_icache_io_IN_ctrlDataWrite_bits_wmask),
    .io_OUT_IDataWrite_bits_data_0      (_icache_io_IN_ctrlDataWrite_bits_data_0),
    .io_OUT_IDataWrite_bits_data_1      (_icache_io_IN_ctrlDataWrite_bits_data_1),
    .io_OUT_IDataWrite_bits_data_2      (_icache_io_IN_ctrlDataWrite_bits_data_2),
    .io_OUT_IDataWrite_bits_data_3      (_icache_io_IN_ctrlDataWrite_bits_data_3),
    .io_OUT_IDataWrite_bits_data_4      (_icache_io_IN_ctrlDataWrite_bits_data_4),
    .io_OUT_IDataWrite_bits_data_5      (_icache_io_IN_ctrlDataWrite_bits_data_5),
    .io_OUT_IDataWrite_bits_data_6      (_icache_io_IN_ctrlDataWrite_bits_data_6),
    .io_OUT_IDataWrite_bits_data_7      (_icache_io_IN_ctrlDataWrite_bits_data_7),
    .io_OUT_MSHR_0_valid                (_cacheController_io_OUT_MSHR_0_valid),
    .io_OUT_MSHR_0_cacheId              (_cacheController_io_OUT_MSHR_0_cacheId),
    .io_OUT_MSHR_0_way                  (_cacheController_io_OUT_MSHR_0_way),
    .io_OUT_MSHR_0_memReadAddr          (_cacheController_io_OUT_MSHR_0_memReadAddr),
    .io_OUT_MSHR_0_memWriteAddr         (_cacheController_io_OUT_MSHR_0_memWriteAddr),
    .io_OUT_MSHR_1_valid                (_cacheController_io_OUT_MSHR_1_valid),
    .io_OUT_MSHR_1_cacheId              (_cacheController_io_OUT_MSHR_1_cacheId),
    .io_OUT_MSHR_1_way                  (_cacheController_io_OUT_MSHR_1_way),
    .io_OUT_MSHR_1_memReadAddr          (_cacheController_io_OUT_MSHR_1_memReadAddr),
    .io_OUT_MSHR_1_memWriteAddr         (_cacheController_io_OUT_MSHR_1_memWriteAddr),
    .io_OUT_MSHR_2_valid                (_cacheController_io_OUT_MSHR_2_valid),
    .io_OUT_MSHR_2_cacheId              (_cacheController_io_OUT_MSHR_2_cacheId),
    .io_OUT_MSHR_2_way                  (_cacheController_io_OUT_MSHR_2_way),
    .io_OUT_MSHR_2_memReadAddr          (_cacheController_io_OUT_MSHR_2_memReadAddr),
    .io_OUT_MSHR_2_memWriteAddr         (_cacheController_io_OUT_MSHR_2_memWriteAddr),
    .io_OUT_MSHR_3_valid                (_cacheController_io_OUT_MSHR_3_valid),
    .io_OUT_MSHR_3_cacheId              (_cacheController_io_OUT_MSHR_3_cacheId),
    .io_OUT_MSHR_3_way                  (_cacheController_io_OUT_MSHR_3_way),
    .io_OUT_MSHR_3_memReadAddr          (_cacheController_io_OUT_MSHR_3_memReadAddr),
    .io_OUT_MSHR_3_memWriteAddr         (_cacheController_io_OUT_MSHR_3_memWriteAddr),
    .io_OUT_MSHR_4_valid                (_cacheController_io_OUT_MSHR_4_valid),
    .io_OUT_MSHR_4_cacheId              (_cacheController_io_OUT_MSHR_4_cacheId),
    .io_OUT_MSHR_4_way                  (_cacheController_io_OUT_MSHR_4_way),
    .io_OUT_MSHR_4_memReadAddr          (_cacheController_io_OUT_MSHR_4_memReadAddr),
    .io_OUT_MSHR_4_memWriteAddr         (_cacheController_io_OUT_MSHR_4_memWriteAddr),
    .io_OUT_MSHR_5_valid                (_cacheController_io_OUT_MSHR_5_valid),
    .io_OUT_MSHR_5_cacheId              (_cacheController_io_OUT_MSHR_5_cacheId),
    .io_OUT_MSHR_5_way                  (_cacheController_io_OUT_MSHR_5_way),
    .io_OUT_MSHR_5_memReadAddr          (_cacheController_io_OUT_MSHR_5_memReadAddr),
    .io_OUT_MSHR_5_memWriteAddr         (_cacheController_io_OUT_MSHR_5_memWriteAddr),
    .io_OUT_MSHR_6_valid                (_cacheController_io_OUT_MSHR_6_valid),
    .io_OUT_MSHR_6_cacheId              (_cacheController_io_OUT_MSHR_6_cacheId),
    .io_OUT_MSHR_6_way                  (_cacheController_io_OUT_MSHR_6_way),
    .io_OUT_MSHR_6_memReadAddr          (_cacheController_io_OUT_MSHR_6_memReadAddr),
    .io_OUT_MSHR_6_memWriteAddr         (_cacheController_io_OUT_MSHR_6_memWriteAddr),
    .io_OUT_MSHR_7_valid                (_cacheController_io_OUT_MSHR_7_valid),
    .io_OUT_MSHR_7_cacheId              (_cacheController_io_OUT_MSHR_7_cacheId),
    .io_OUT_MSHR_7_way                  (_cacheController_io_OUT_MSHR_7_way),
    .io_OUT_MSHR_7_memReadAddr          (_cacheController_io_OUT_MSHR_7_memReadAddr),
    .io_OUT_MSHR_7_memWriteAddr         (_cacheController_io_OUT_MSHR_7_memWriteAddr),
    .io_OUT_memLoadFoward_valid         (_cacheController_io_OUT_memLoadFoward_valid),
    .io_OUT_memLoadFoward_bits_addr     (_cacheController_io_OUT_memLoadFoward_bits_addr),
    .io_OUT_memLoadFoward_bits_data     (_cacheController_io_OUT_memLoadFoward_bits_data),
    .io_OUT_memLoadFoward_bits_uncached
      (_cacheController_io_OUT_memLoadFoward_bits_uncached),
    .io_OUT_uncacheStoreResp            (_cacheController_io_OUT_uncacheStoreResp),
    .io_OUT_axi_aw_ready                (io_master_awready),
    .io_OUT_axi_aw_valid                (io_master_awvalid),
    .io_OUT_axi_aw_bits_addr            (io_master_awaddr),
    .io_OUT_axi_aw_bits_id              (io_master_awid),
    .io_OUT_axi_aw_bits_size            (io_master_awsize),
    .io_OUT_axi_w_ready                 (io_master_wready),
    .io_OUT_axi_w_valid                 (io_master_wvalid),
    .io_OUT_axi_w_bits_data             (io_master_wdata),
    .io_OUT_axi_w_bits_strb             (io_master_wstrb),
    .io_OUT_axi_b_valid                 (io_master_bvalid),
    .io_OUT_axi_b_bits_id               (io_master_bid),
    .io_OUT_axi_ar_ready                (io_master_arready),
    .io_OUT_axi_ar_valid                (io_master_arvalid),
    .io_OUT_axi_ar_bits_addr            (io_master_araddr),
    .io_OUT_axi_ar_bits_id              (io_master_arid),
    .io_OUT_axi_ar_bits_size            (io_master_arsize),
    .io_OUT_axi_r_valid                 (io_master_rvalid),
    .io_OUT_axi_r_bits_data             (io_master_rdata),
    .io_OUT_axi_r_bits_id               (io_master_rid)
  );
  wire         redirect_valid /*verilator public_flat*/;
  wire [31:0]  redirect_pc /*verilator public_flat*/;
  assign _ifu_io_IN_fetchEnable = ~_lsu_io_OUT_flushBusy;
  assign _ifu_io_IN_PTWResp_valid = _ptw_io_OUT_PTWResp_valid;
  assign _ifu_io_IN_PTWResp_bits_id = _ptw_io_OUT_PTWResp_bits_id;
  assign _ifu_io_IN_VMCSR_mode = _csr_io_OUT_VMCSR_mode;
  assign _ifu_io_IN_trapCSR_interrupt = _csr_io_OUT_trapCSR_interrupt;
  IFU ifu (
    .clock                             (clock),
    .reset                             (reset),
    .io_IN_flushICache                 (_ifu_io_IN_flushICache),
    .io_IN_fetchEnable                 (_ifu_io_IN_fetchEnable),
    .io_redirect_valid                 (redirect_valid),
    .io_redirect_pc                    (redirect_pc),
    .io_IN_btbUpdate_valid             (_ifu_io_IN_btbUpdate_valid),
    .io_IN_btbUpdate_bits_pc           (_ifu_io_IN_btbUpdate_bits_pc),
    .io_IN_btbUpdate_bits_flush        (_ifu_io_IN_btbUpdate_bits_flush),
    .io_IN_btbUpdate_bits_target       (_ifu_io_IN_btbUpdate_bits_target),
    .io_IN_btbUpdate_bits_brType       (_ifu_io_IN_btbUpdate_bits_brType),
    .io_IN_phtUpdate_valid             (_ifu_io_IN_phtUpdate_valid),
    .io_IN_phtUpdate_bits_pc           (_ifu_io_IN_phtUpdate_bits_pc),
    .io_IN_phtUpdate_bits_isLastBranch (_ifu_io_IN_phtUpdate_bits_isLastBranch),
    .io_IN_phtUpdate_bits_taken        (_ifu_io_IN_phtUpdate_bits_taken),
    .io_IN_rasCommitUpdate_valid       (_ifu_io_IN_rasCommitUpdate_valid),
    .io_IN_rasCommitUpdate_bits_push   (_ifu_io_IN_rasCommitUpdate_bits_push),
    .io_IN_rasCommitUpdate_bits_target (_ifu_io_IN_rasCommitUpdate_bits_target),
    .io_out_0_valid                    (_ifu_io_out_0_valid),
    .io_out_0_bits_pc                  (_ifu_io_out_0_bits_pc),
    .io_out_0_bits_predTarget          (_ifu_io_out_0_bits_predTarget),
    .io_out_0_bits_inst                (_ifu_io_out_0_bits_inst),
    .io_out_0_bits_pageFault           (_ifu_io_out_0_bits_pageFault),
    .io_out_0_bits_interrupt           (_ifu_io_out_0_bits_interrupt),
    .io_out_0_bits_lastBranch          (_ifu_io_out_0_bits_lastBranch),
    .io_out_1_valid                    (_ifu_io_out_1_valid),
    .io_out_1_bits_pc                  (_ifu_io_out_1_bits_pc),
    .io_out_1_bits_predTarget          (_ifu_io_out_1_bits_predTarget),
    .io_out_1_bits_inst                (_ifu_io_out_1_bits_inst),
    .io_out_1_bits_pageFault           (_ifu_io_out_1_bits_pageFault),
    .io_out_1_bits_interrupt           (_ifu_io_out_1_bits_interrupt),
    .io_out_1_bits_lastBranch          (_ifu_io_out_1_bits_lastBranch),
    .io_out_2_valid                    (_ifu_io_out_2_valid),
    .io_out_2_bits_pc                  (_ifu_io_out_2_bits_pc),
    .io_out_2_bits_predTarget          (_ifu_io_out_2_bits_predTarget),
    .io_out_2_bits_inst                (_ifu_io_out_2_bits_inst),
    .io_out_2_bits_pageFault           (_ifu_io_out_2_bits_pageFault),
    .io_out_2_bits_interrupt           (_ifu_io_out_2_bits_interrupt),
    .io_out_2_bits_lastBranch          (_ifu_io_out_2_bits_lastBranch),
    .io_out_3_valid                    (_ifu_io_out_3_valid),
    .io_out_3_bits_pc                  (_ifu_io_out_3_bits_pc),
    .io_out_3_bits_predTarget          (_ifu_io_out_3_bits_predTarget),
    .io_out_3_bits_inst                (_ifu_io_out_3_bits_inst),
    .io_out_3_bits_pageFault           (_ifu_io_out_3_bits_pageFault),
    .io_out_3_bits_interrupt           (_ifu_io_out_3_bits_interrupt),
    .io_out_3_bits_lastBranch          (_ifu_io_out_3_bits_lastBranch),
    .io_IN_ready                       (_ifu_io_IN_ready),
    .io_OUT_ITagRead_bits_addr         (_icache_io_IN_tagRead_bits_addr),
    .io_OUT_ITagWrite_valid            (_icache_io_IN_tagWrite_valid),
    .io_OUT_ITagWrite_bits_addr        (_icache_io_IN_tagWrite_bits_addr),
    .io_OUT_ITagWrite_bits_way         (_icache_io_IN_tagWrite_bits_way),
    .io_OUT_ITagWrite_bits_data_valid  (_icache_io_IN_tagWrite_bits_data_valid),
    .io_OUT_ITagWrite_bits_data_tag    (_icache_io_IN_tagWrite_bits_data_tag),
    .io_IN_ITagResp_tags_0_valid       (_icache_io_OUT_tagResp_tags_0_valid),
    .io_IN_ITagResp_tags_0_tag         (_icache_io_OUT_tagResp_tags_0_tag),
    .io_IN_ITagResp_tags_1_valid       (_icache_io_OUT_tagResp_tags_1_valid),
    .io_IN_ITagResp_tags_1_tag         (_icache_io_OUT_tagResp_tags_1_tag),
    .io_IN_ITagResp_tags_2_valid       (_icache_io_OUT_tagResp_tags_2_valid),
    .io_IN_ITagResp_tags_2_tag         (_icache_io_OUT_tagResp_tags_2_tag),
    .io_IN_ITagResp_tags_3_valid       (_icache_io_OUT_tagResp_tags_3_valid),
    .io_IN_ITagResp_tags_3_tag         (_icache_io_OUT_tagResp_tags_3_tag),
    .io_OUT_IDataRead_bits_addr        (_icache_io_IN_dataRead_bits_addr),
    .io_IN_IDataResp_data_0_0          (_icache_io_OUT_dataResp_data_0_0),
    .io_IN_IDataResp_data_0_1          (_icache_io_OUT_dataResp_data_0_1),
    .io_IN_IDataResp_data_0_2          (_icache_io_OUT_dataResp_data_0_2),
    .io_IN_IDataResp_data_0_3          (_icache_io_OUT_dataResp_data_0_3),
    .io_IN_IDataResp_data_0_4          (_icache_io_OUT_dataResp_data_0_4),
    .io_IN_IDataResp_data_0_5          (_icache_io_OUT_dataResp_data_0_5),
    .io_IN_IDataResp_data_0_6          (_icache_io_OUT_dataResp_data_0_6),
    .io_IN_IDataResp_data_0_7          (_icache_io_OUT_dataResp_data_0_7),
    .io_IN_IDataResp_data_1_0          (_icache_io_OUT_dataResp_data_1_0),
    .io_IN_IDataResp_data_1_1          (_icache_io_OUT_dataResp_data_1_1),
    .io_IN_IDataResp_data_1_2          (_icache_io_OUT_dataResp_data_1_2),
    .io_IN_IDataResp_data_1_3          (_icache_io_OUT_dataResp_data_1_3),
    .io_IN_IDataResp_data_1_4          (_icache_io_OUT_dataResp_data_1_4),
    .io_IN_IDataResp_data_1_5          (_icache_io_OUT_dataResp_data_1_5),
    .io_IN_IDataResp_data_1_6          (_icache_io_OUT_dataResp_data_1_6),
    .io_IN_IDataResp_data_1_7          (_icache_io_OUT_dataResp_data_1_7),
    .io_IN_IDataResp_data_2_0          (_icache_io_OUT_dataResp_data_2_0),
    .io_IN_IDataResp_data_2_1          (_icache_io_OUT_dataResp_data_2_1),
    .io_IN_IDataResp_data_2_2          (_icache_io_OUT_dataResp_data_2_2),
    .io_IN_IDataResp_data_2_3          (_icache_io_OUT_dataResp_data_2_3),
    .io_IN_IDataResp_data_2_4          (_icache_io_OUT_dataResp_data_2_4),
    .io_IN_IDataResp_data_2_5          (_icache_io_OUT_dataResp_data_2_5),
    .io_IN_IDataResp_data_2_6          (_icache_io_OUT_dataResp_data_2_6),
    .io_IN_IDataResp_data_2_7          (_icache_io_OUT_dataResp_data_2_7),
    .io_IN_IDataResp_data_3_0          (_icache_io_OUT_dataResp_data_3_0),
    .io_IN_IDataResp_data_3_1          (_icache_io_OUT_dataResp_data_3_1),
    .io_IN_IDataResp_data_3_2          (_icache_io_OUT_dataResp_data_3_2),
    .io_IN_IDataResp_data_3_3          (_icache_io_OUT_dataResp_data_3_3),
    .io_IN_IDataResp_data_3_4          (_icache_io_OUT_dataResp_data_3_4),
    .io_IN_IDataResp_data_3_5          (_icache_io_OUT_dataResp_data_3_5),
    .io_IN_IDataResp_data_3_6          (_icache_io_OUT_dataResp_data_3_6),
    .io_IN_IDataResp_data_3_7          (_icache_io_OUT_dataResp_data_3_7),
    .io_OUT_cacheCtrlUop_ready         (_cacheController_io_IN_cacheCtrlUop_2_ready),
    .io_OUT_cacheCtrlUop_valid         (_cacheController_io_IN_cacheCtrlUop_2_valid),
    .io_OUT_cacheCtrlUop_bits_index    (_cacheController_io_IN_cacheCtrlUop_2_bits_index),
    .io_OUT_cacheCtrlUop_bits_rtag     (_cacheController_io_IN_cacheCtrlUop_2_bits_rtag),
    .io_OUT_cacheCtrlUop_bits_way      (_cacheController_io_IN_cacheCtrlUop_2_bits_way),
    .io_OUT_cacheCtrlUop_bits_offset
      (_cacheController_io_IN_cacheCtrlUop_2_bits_offset),
    .io_IN_mshrs_0_valid               (_cacheController_io_OUT_MSHR_0_valid),
    .io_IN_mshrs_0_cacheId             (_cacheController_io_OUT_MSHR_0_cacheId),
    .io_IN_mshrs_0_way                 (_cacheController_io_OUT_MSHR_0_way),
    .io_IN_mshrs_0_memReadAddr         (_cacheController_io_OUT_MSHR_0_memReadAddr),
    .io_IN_mshrs_0_memWriteAddr        (_cacheController_io_OUT_MSHR_0_memWriteAddr),
    .io_IN_mshrs_1_valid               (_cacheController_io_OUT_MSHR_1_valid),
    .io_IN_mshrs_1_cacheId             (_cacheController_io_OUT_MSHR_1_cacheId),
    .io_IN_mshrs_1_way                 (_cacheController_io_OUT_MSHR_1_way),
    .io_IN_mshrs_1_memReadAddr         (_cacheController_io_OUT_MSHR_1_memReadAddr),
    .io_IN_mshrs_1_memWriteAddr        (_cacheController_io_OUT_MSHR_1_memWriteAddr),
    .io_IN_mshrs_2_valid               (_cacheController_io_OUT_MSHR_2_valid),
    .io_IN_mshrs_2_cacheId             (_cacheController_io_OUT_MSHR_2_cacheId),
    .io_IN_mshrs_2_way                 (_cacheController_io_OUT_MSHR_2_way),
    .io_IN_mshrs_2_memReadAddr         (_cacheController_io_OUT_MSHR_2_memReadAddr),
    .io_IN_mshrs_2_memWriteAddr        (_cacheController_io_OUT_MSHR_2_memWriteAddr),
    .io_IN_mshrs_3_valid               (_cacheController_io_OUT_MSHR_3_valid),
    .io_IN_mshrs_3_cacheId             (_cacheController_io_OUT_MSHR_3_cacheId),
    .io_IN_mshrs_3_way                 (_cacheController_io_OUT_MSHR_3_way),
    .io_IN_mshrs_3_memReadAddr         (_cacheController_io_OUT_MSHR_3_memReadAddr),
    .io_IN_mshrs_3_memWriteAddr        (_cacheController_io_OUT_MSHR_3_memWriteAddr),
    .io_IN_mshrs_4_valid               (_cacheController_io_OUT_MSHR_4_valid),
    .io_IN_mshrs_4_cacheId             (_cacheController_io_OUT_MSHR_4_cacheId),
    .io_IN_mshrs_4_way                 (_cacheController_io_OUT_MSHR_4_way),
    .io_IN_mshrs_4_memReadAddr         (_cacheController_io_OUT_MSHR_4_memReadAddr),
    .io_IN_mshrs_4_memWriteAddr        (_cacheController_io_OUT_MSHR_4_memWriteAddr),
    .io_IN_mshrs_5_valid               (_cacheController_io_OUT_MSHR_5_valid),
    .io_IN_mshrs_5_cacheId             (_cacheController_io_OUT_MSHR_5_cacheId),
    .io_IN_mshrs_5_way                 (_cacheController_io_OUT_MSHR_5_way),
    .io_IN_mshrs_5_memReadAddr         (_cacheController_io_OUT_MSHR_5_memReadAddr),
    .io_IN_mshrs_5_memWriteAddr        (_cacheController_io_OUT_MSHR_5_memWriteAddr),
    .io_IN_mshrs_6_valid               (_cacheController_io_OUT_MSHR_6_valid),
    .io_IN_mshrs_6_cacheId             (_cacheController_io_OUT_MSHR_6_cacheId),
    .io_IN_mshrs_6_way                 (_cacheController_io_OUT_MSHR_6_way),
    .io_IN_mshrs_6_memReadAddr         (_cacheController_io_OUT_MSHR_6_memReadAddr),
    .io_IN_mshrs_6_memWriteAddr        (_cacheController_io_OUT_MSHR_6_memWriteAddr),
    .io_IN_mshrs_7_valid               (_cacheController_io_OUT_MSHR_7_valid),
    .io_IN_mshrs_7_cacheId             (_cacheController_io_OUT_MSHR_7_cacheId),
    .io_IN_mshrs_7_way                 (_cacheController_io_OUT_MSHR_7_way),
    .io_IN_mshrs_7_memReadAddr         (_cacheController_io_OUT_MSHR_7_memReadAddr),
    .io_IN_mshrs_7_memWriteAddr        (_cacheController_io_OUT_MSHR_7_memWriteAddr),
    .io_OUT_TLBReq_valid               (_ifu_io_OUT_TLBReq_valid),
    .io_OUT_TLBReq_bits_vpn            (_ifu_io_OUT_TLBReq_bits_vpn),
    .io_IN_TLBResp_valid               (_ifu_io_IN_TLBResp_valid),
    .io_IN_TLBResp_bits_isSuper        (_ifu_io_IN_TLBResp_bits_isSuper),
    .io_IN_TLBResp_bits_pte_ppn1       (_ifu_io_IN_TLBResp_bits_pte_ppn1),
    .io_IN_TLBResp_bits_pte_ppn0       (_ifu_io_IN_TLBResp_bits_pte_ppn0),
    .io_IN_TLBResp_bits_pte_a          (_ifu_io_IN_TLBResp_bits_pte_a),
    .io_IN_TLBResp_bits_pte_u          (_ifu_io_IN_TLBResp_bits_pte_u),
    .io_IN_TLBResp_bits_pte_x          (_ifu_io_IN_TLBResp_bits_pte_x),
    .io_IN_TLBResp_bits_pte_w          (_ifu_io_IN_TLBResp_bits_pte_w),
    .io_IN_TLBResp_bits_pte_r          (_ifu_io_IN_TLBResp_bits_pte_r),
    .io_IN_TLBResp_bits_pte_v          (_ifu_io_IN_TLBResp_bits_pte_v),
    .io_OUT_PTWReq_valid               (_ifu_io_OUT_PTWReq_valid),
    .io_OUT_PTWReq_bits_vpn            (_ifu_io_OUT_PTWReq_bits_vpn),
    .io_OUT_PTWReq_bits_stqPtr_flag    (_ifu_io_OUT_PTWReq_bits_stqPtr_flag),
    .io_OUT_PTWReq_bits_stqPtr_index   (_ifu_io_OUT_PTWReq_bits_stqPtr_index),
    .io_IN_PTWResp_valid               (_ifu_io_IN_PTWResp_valid),
    .io_IN_PTWResp_bits_id             (_ifu_io_IN_PTWResp_bits_id),
    .io_IN_VMCSR_mode                  (_ifu_io_IN_VMCSR_mode),
    .io_IN_VMCSR_priv                  (_ifu_io_IN_VMCSR_priv),
    .io_IN_trapCSR_interrupt           (_ifu_io_IN_trapCSR_interrupt)
  );
  assign _itlb_io_IN_PTWResp_valid = _ptw_io_OUT_PTWResp_valid;
  assign _itlb_io_IN_PTWResp_bits_isSuper = _ptw_io_OUT_PTWResp_bits_isSuper;
  assign _itlb_io_IN_PTWResp_bits_pte_ppn1 = _ptw_io_OUT_PTWResp_bits_pte_ppn1;
  assign _itlb_io_IN_PTWResp_bits_pte_ppn0 = _ptw_io_OUT_PTWResp_bits_pte_ppn0;
  assign _itlb_io_IN_PTWResp_bits_pte_a = _ptw_io_OUT_PTWResp_bits_pte_a;
  assign _itlb_io_IN_PTWResp_bits_pte_u = _ptw_io_OUT_PTWResp_bits_pte_u;
  assign _itlb_io_IN_PTWResp_bits_pte_x = _ptw_io_OUT_PTWResp_bits_pte_x;
  assign _itlb_io_IN_PTWResp_bits_pte_w = _ptw_io_OUT_PTWResp_bits_pte_w;
  assign _itlb_io_IN_PTWResp_bits_pte_r = _ptw_io_OUT_PTWResp_bits_pte_r;
  assign _itlb_io_IN_PTWResp_bits_pte_v = _ptw_io_OUT_PTWResp_bits_pte_v;
  assign _itlb_io_IN_PTWResp_bits_vpn = _ptw_io_OUT_PTWResp_bits_vpn;
  assign _itlb_io_IN_PTWResp_bits_id = _ptw_io_OUT_PTWResp_bits_id;
  assign _itlb_io_IN_TLBFlush = _flagHandler_io_OUT_TLBFlush;
  TLB itlb (
    .clock                        (clock),
    .reset                        (reset),
    .io_IN_TLBReq_valid           (_ifu_io_OUT_TLBReq_valid),
    .io_IN_TLBReq_bits_vpn        (_ifu_io_OUT_TLBReq_bits_vpn),
    .io_OUT_TLBResp_valid         (_ifu_io_IN_TLBResp_valid),
    .io_OUT_TLBResp_bits_isSuper  (_ifu_io_IN_TLBResp_bits_isSuper),
    .io_OUT_TLBResp_bits_pte_ppn1 (_ifu_io_IN_TLBResp_bits_pte_ppn1),
    .io_OUT_TLBResp_bits_pte_ppn0 (_ifu_io_IN_TLBResp_bits_pte_ppn0),
    .io_OUT_TLBResp_bits_pte_a    (_ifu_io_IN_TLBResp_bits_pte_a),
    .io_OUT_TLBResp_bits_pte_u    (_ifu_io_IN_TLBResp_bits_pte_u),
    .io_OUT_TLBResp_bits_pte_x    (_ifu_io_IN_TLBResp_bits_pte_x),
    .io_OUT_TLBResp_bits_pte_w    (_ifu_io_IN_TLBResp_bits_pte_w),
    .io_OUT_TLBResp_bits_pte_r    (_ifu_io_IN_TLBResp_bits_pte_r),
    .io_OUT_TLBResp_bits_pte_v    (_ifu_io_IN_TLBResp_bits_pte_v),
    .io_IN_PTWResp_valid          (_itlb_io_IN_PTWResp_valid),
    .io_IN_PTWResp_bits_isSuper   (_itlb_io_IN_PTWResp_bits_isSuper),
    .io_IN_PTWResp_bits_pte_ppn1  (_itlb_io_IN_PTWResp_bits_pte_ppn1),
    .io_IN_PTWResp_bits_pte_ppn0  (_itlb_io_IN_PTWResp_bits_pte_ppn0),
    .io_IN_PTWResp_bits_pte_a     (_itlb_io_IN_PTWResp_bits_pte_a),
    .io_IN_PTWResp_bits_pte_u     (_itlb_io_IN_PTWResp_bits_pte_u),
    .io_IN_PTWResp_bits_pte_x     (_itlb_io_IN_PTWResp_bits_pte_x),
    .io_IN_PTWResp_bits_pte_w     (_itlb_io_IN_PTWResp_bits_pte_w),
    .io_IN_PTWResp_bits_pte_r     (_itlb_io_IN_PTWResp_bits_pte_r),
    .io_IN_PTWResp_bits_pte_v     (_itlb_io_IN_PTWResp_bits_pte_v),
    .io_IN_PTWResp_bits_vpn       (_itlb_io_IN_PTWResp_bits_vpn),
    .io_IN_PTWResp_bits_id        (_itlb_io_IN_PTWResp_bits_id),
    .io_IN_TLBFlush               (_itlb_io_IN_TLBFlush)
  );
  wire         decodeUop_0_ready /*verilator public_flat*/;
  assign _idu_io_IN_flush = _flagHandler_io_OUT_flush;
  IDU idu (
    .clock                               (clock),
    .reset                               (reset),
    .io_IN_inst_0_valid                  (_ifu_io_out_0_valid),
    .io_IN_inst_0_bits_pc                (_ifu_io_out_0_bits_pc),
    .io_IN_inst_0_bits_predTarget        (_ifu_io_out_0_bits_predTarget),
    .io_IN_inst_0_bits_inst              (_ifu_io_out_0_bits_inst),
    .io_IN_inst_0_bits_pageFault         (_ifu_io_out_0_bits_pageFault),
    .io_IN_inst_0_bits_interrupt         (_ifu_io_out_0_bits_interrupt),
    .io_IN_inst_0_bits_lastBranch        (_ifu_io_out_0_bits_lastBranch),
    .io_IN_inst_1_valid                  (_ifu_io_out_1_valid),
    .io_IN_inst_1_bits_pc                (_ifu_io_out_1_bits_pc),
    .io_IN_inst_1_bits_predTarget        (_ifu_io_out_1_bits_predTarget),
    .io_IN_inst_1_bits_inst              (_ifu_io_out_1_bits_inst),
    .io_IN_inst_1_bits_pageFault         (_ifu_io_out_1_bits_pageFault),
    .io_IN_inst_1_bits_interrupt         (_ifu_io_out_1_bits_interrupt),
    .io_IN_inst_1_bits_lastBranch        (_ifu_io_out_1_bits_lastBranch),
    .io_IN_inst_2_valid                  (_ifu_io_out_2_valid),
    .io_IN_inst_2_bits_pc                (_ifu_io_out_2_bits_pc),
    .io_IN_inst_2_bits_predTarget        (_ifu_io_out_2_bits_predTarget),
    .io_IN_inst_2_bits_inst              (_ifu_io_out_2_bits_inst),
    .io_IN_inst_2_bits_pageFault         (_ifu_io_out_2_bits_pageFault),
    .io_IN_inst_2_bits_interrupt         (_ifu_io_out_2_bits_interrupt),
    .io_IN_inst_2_bits_lastBranch        (_ifu_io_out_2_bits_lastBranch),
    .io_IN_inst_3_valid                  (_ifu_io_out_3_valid),
    .io_IN_inst_3_bits_pc                (_ifu_io_out_3_bits_pc),
    .io_IN_inst_3_bits_predTarget        (_ifu_io_out_3_bits_predTarget),
    .io_IN_inst_3_bits_inst              (_ifu_io_out_3_bits_inst),
    .io_IN_inst_3_bits_pageFault         (_ifu_io_out_3_bits_pageFault),
    .io_IN_inst_3_bits_interrupt         (_ifu_io_out_3_bits_interrupt),
    .io_IN_inst_3_bits_lastBranch        (_ifu_io_out_3_bits_lastBranch),
    .io_OUT_ready                        (_ifu_io_IN_ready),
    .io_OUT_decodeUop_0_ready            (decodeUop_0_ready),
    .io_OUT_decodeUop_0_valid            (decodeUop_0_valid),
    .io_OUT_decodeUop_0_bits_rd          (decodeUop_0_bits_rd),
    .io_OUT_decodeUop_0_bits_rs1         (decodeUop_0_bits_rs1),
    .io_OUT_decodeUop_0_bits_rs2         (decodeUop_0_bits_rs2),
    .io_OUT_decodeUop_0_bits_src1Type    (decodeUop_0_bits_src1Type),
    .io_OUT_decodeUop_0_bits_src2Type    (decodeUop_0_bits_src2Type),
    .io_OUT_decodeUop_0_bits_imm         (decodeUop_0_bits_imm),
    .io_OUT_decodeUop_0_bits_pc          (decodeUop_0_bits_pc),
    .io_OUT_decodeUop_0_bits_fuType      (decodeUop_0_bits_fuType),
    .io_OUT_decodeUop_0_bits_opcode      (decodeUop_0_bits_opcode),
    .io_OUT_decodeUop_0_bits_predTarget  (decodeUop_0_bits_predTarget),
    .io_OUT_decodeUop_0_bits_compressed  (decodeUop_0_bits_compressed),
    .io_OUT_decodeUop_0_bits_lockBackend (decodeUop_0_bits_lockBackend),
    .io_OUT_decodeUop_0_bits_lastBranch  (decodeUop_0_bits_lastBranch),
    .io_OUT_decodeUop_0_bits_inst        (decodeUop_0_bits_inst),
    .io_OUT_decodeUop_1_valid            (decodeUop_1_valid),
    .io_OUT_decodeUop_1_bits_rd          (decodeUop_1_bits_rd),
    .io_OUT_decodeUop_1_bits_rs1         (decodeUop_1_bits_rs1),
    .io_OUT_decodeUop_1_bits_rs2         (decodeUop_1_bits_rs2),
    .io_OUT_decodeUop_1_bits_src1Type    (decodeUop_1_bits_src1Type),
    .io_OUT_decodeUop_1_bits_src2Type    (decodeUop_1_bits_src2Type),
    .io_OUT_decodeUop_1_bits_imm         (decodeUop_1_bits_imm),
    .io_OUT_decodeUop_1_bits_pc          (decodeUop_1_bits_pc),
    .io_OUT_decodeUop_1_bits_fuType      (decodeUop_1_bits_fuType),
    .io_OUT_decodeUop_1_bits_opcode      (decodeUop_1_bits_opcode),
    .io_OUT_decodeUop_1_bits_predTarget  (decodeUop_1_bits_predTarget),
    .io_OUT_decodeUop_1_bits_compressed  (decodeUop_1_bits_compressed),
    .io_OUT_decodeUop_1_bits_lockBackend (decodeUop_1_bits_lockBackend),
    .io_OUT_decodeUop_1_bits_lastBranch  (decodeUop_1_bits_lastBranch),
    .io_OUT_decodeUop_1_bits_inst        (decodeUop_1_bits_inst),
    .io_OUT_decodeUop_2_valid            (decodeUop_2_valid),
    .io_OUT_decodeUop_2_bits_rd          (decodeUop_2_bits_rd),
    .io_OUT_decodeUop_2_bits_rs1         (decodeUop_2_bits_rs1),
    .io_OUT_decodeUop_2_bits_rs2         (decodeUop_2_bits_rs2),
    .io_OUT_decodeUop_2_bits_src1Type    (decodeUop_2_bits_src1Type),
    .io_OUT_decodeUop_2_bits_src2Type    (decodeUop_2_bits_src2Type),
    .io_OUT_decodeUop_2_bits_imm         (decodeUop_2_bits_imm),
    .io_OUT_decodeUop_2_bits_pc          (decodeUop_2_bits_pc),
    .io_OUT_decodeUop_2_bits_fuType      (decodeUop_2_bits_fuType),
    .io_OUT_decodeUop_2_bits_opcode      (decodeUop_2_bits_opcode),
    .io_OUT_decodeUop_2_bits_predTarget  (decodeUop_2_bits_predTarget),
    .io_OUT_decodeUop_2_bits_compressed  (decodeUop_2_bits_compressed),
    .io_OUT_decodeUop_2_bits_lockBackend (decodeUop_2_bits_lockBackend),
    .io_OUT_decodeUop_2_bits_lastBranch  (decodeUop_2_bits_lastBranch),
    .io_OUT_decodeUop_2_bits_inst        (decodeUop_2_bits_inst),
    .io_OUT_decodeUop_3_valid            (decodeUop_3_valid),
    .io_OUT_decodeUop_3_bits_rd          (decodeUop_3_bits_rd),
    .io_OUT_decodeUop_3_bits_rs1         (decodeUop_3_bits_rs1),
    .io_OUT_decodeUop_3_bits_rs2         (decodeUop_3_bits_rs2),
    .io_OUT_decodeUop_3_bits_src1Type    (decodeUop_3_bits_src1Type),
    .io_OUT_decodeUop_3_bits_src2Type    (decodeUop_3_bits_src2Type),
    .io_OUT_decodeUop_3_bits_imm         (decodeUop_3_bits_imm),
    .io_OUT_decodeUop_3_bits_pc          (decodeUop_3_bits_pc),
    .io_OUT_decodeUop_3_bits_fuType      (decodeUop_3_bits_fuType),
    .io_OUT_decodeUop_3_bits_opcode      (decodeUop_3_bits_opcode),
    .io_OUT_decodeUop_3_bits_predTarget  (decodeUop_3_bits_predTarget),
    .io_OUT_decodeUop_3_bits_compressed  (decodeUop_3_bits_compressed),
    .io_OUT_decodeUop_3_bits_lockBackend (decodeUop_3_bits_lockBackend),
    .io_OUT_decodeUop_3_bits_lastBranch  (decodeUop_3_bits_lastBranch),
    .io_OUT_decodeUop_3_bits_inst        (decodeUop_3_bits_inst),
    .io_IN_flush                         (_idu_io_IN_flush)
  );
  wire         renameIQReady_0 /*verilator public_flat*/;
  wire         renameIQReady_1 /*verilator public_flat*/;
  wire         renameIQReady_2 /*verilator public_flat*/;
  wire         renameIQReady_3 /*verilator public_flat*/;
  wire         writebackUop_0_valid /*verilator public_flat*/;
  wire [5:0]   writebackUop_0_bits_prd /*verilator public_flat*/;
  wire         writebackUop_1_valid /*verilator public_flat*/;
  wire [5:0]   writebackUop_1_bits_prd /*verilator public_flat*/;
  wire         writebackUop_2_valid /*verilator public_flat*/;
  wire [5:0]   writebackUop_2_bits_prd /*verilator public_flat*/;
  wire         writebackUop_3_valid /*verilator public_flat*/;
  wire [5:0]   writebackUop_3_bits_prd /*verilator public_flat*/;
  wire         writebackUop_4_valid /*verilator public_flat*/;
  wire         commitUop_0_valid /*verilator public_flat*/;
  wire [4:0]   commitUop_0_bits_rd /*verilator public_flat*/;
  wire [5:0]   commitUop_0_bits_prd /*verilator public_flat*/;
  wire         commitUop_1_valid /*verilator public_flat*/;
  wire [4:0]   commitUop_1_bits_rd /*verilator public_flat*/;
  wire [5:0]   commitUop_1_bits_prd /*verilator public_flat*/;
  wire         commitUop_2_valid /*verilator public_flat*/;
  wire [4:0]   commitUop_2_bits_rd /*verilator public_flat*/;
  wire [5:0]   commitUop_2_bits_prd /*verilator public_flat*/;
  wire         commitUop_3_valid /*verilator public_flat*/;
  wire [4:0]   commitUop_3_bits_rd /*verilator public_flat*/;
  wire [5:0]   commitUop_3_bits_prd /*verilator public_flat*/;
  assign _rename_io_IN_robTailPtr_flag = _rob_io_OUT_robTailPtr_flag;
  assign _rename_io_IN_robTailPtr_index = _rob_io_OUT_robTailPtr_index;
  assign _rename_io_IN_ldqTailPtr_flag = _rob_io_OUT_ldqTailPtr_flag;
  assign _rename_io_IN_ldqTailPtr_index = _rob_io_OUT_ldqTailPtr_index;
  assign _rename_io_IN_stqTailPtr_flag = _rob_io_OUT_stqTailPtr_flag;
  assign _rename_io_IN_stqTailPtr_index = _rob_io_OUT_stqTailPtr_index;
  assign _rename_io_IN_storeQueueEmpty = _storeQueue_io_OUT_storeQueueEmpty;
  assign _rename_io_IN_storeBufferEmpty = _storeBuffer_io_OUT_storeBufferEmpty;
  assign _rename_io_IN_flush = _flagHandler_io_OUT_flush;
  Rename rename (
    .clock                              (clock),
    .reset                              (reset),
    .io_IN_decodeUop_0_ready            (decodeUop_0_ready),
    .io_IN_decodeUop_0_valid            (decodeUop_0_valid),
    .io_IN_decodeUop_0_bits_rd          (decodeUop_0_bits_rd),
    .io_IN_decodeUop_0_bits_rs1         (decodeUop_0_bits_rs1),
    .io_IN_decodeUop_0_bits_rs2         (decodeUop_0_bits_rs2),
    .io_IN_decodeUop_0_bits_src1Type    (decodeUop_0_bits_src1Type),
    .io_IN_decodeUop_0_bits_src2Type    (decodeUop_0_bits_src2Type),
    .io_IN_decodeUop_0_bits_imm         (decodeUop_0_bits_imm),
    .io_IN_decodeUop_0_bits_pc          (decodeUop_0_bits_pc),
    .io_IN_decodeUop_0_bits_fuType      (decodeUop_0_bits_fuType),
    .io_IN_decodeUop_0_bits_opcode      (decodeUop_0_bits_opcode),
    .io_IN_decodeUop_0_bits_predTarget  (decodeUop_0_bits_predTarget),
    .io_IN_decodeUop_0_bits_compressed  (decodeUop_0_bits_compressed),
    .io_IN_decodeUop_0_bits_lockBackend (decodeUop_0_bits_lockBackend),
    .io_IN_decodeUop_0_bits_lastBranch  (decodeUop_0_bits_lastBranch),
    .io_IN_decodeUop_0_bits_inst        (decodeUop_0_bits_inst),
    .io_IN_decodeUop_1_ready            (decodeUop_1_ready),
    .io_IN_decodeUop_1_valid            (decodeUop_1_valid),
    .io_IN_decodeUop_1_bits_rd          (decodeUop_1_bits_rd),
    .io_IN_decodeUop_1_bits_rs1         (decodeUop_1_bits_rs1),
    .io_IN_decodeUop_1_bits_rs2         (decodeUop_1_bits_rs2),
    .io_IN_decodeUop_1_bits_src1Type    (decodeUop_1_bits_src1Type),
    .io_IN_decodeUop_1_bits_src2Type    (decodeUop_1_bits_src2Type),
    .io_IN_decodeUop_1_bits_imm         (decodeUop_1_bits_imm),
    .io_IN_decodeUop_1_bits_pc          (decodeUop_1_bits_pc),
    .io_IN_decodeUop_1_bits_fuType      (decodeUop_1_bits_fuType),
    .io_IN_decodeUop_1_bits_opcode      (decodeUop_1_bits_opcode),
    .io_IN_decodeUop_1_bits_predTarget  (decodeUop_1_bits_predTarget),
    .io_IN_decodeUop_1_bits_compressed  (decodeUop_1_bits_compressed),
    .io_IN_decodeUop_1_bits_lockBackend (decodeUop_1_bits_lockBackend),
    .io_IN_decodeUop_1_bits_lastBranch  (decodeUop_1_bits_lastBranch),
    .io_IN_decodeUop_1_bits_inst        (decodeUop_1_bits_inst),
    .io_IN_decodeUop_2_ready            (decodeUop_2_ready),
    .io_IN_decodeUop_2_valid            (decodeUop_2_valid),
    .io_IN_decodeUop_2_bits_rd          (decodeUop_2_bits_rd),
    .io_IN_decodeUop_2_bits_rs1         (decodeUop_2_bits_rs1),
    .io_IN_decodeUop_2_bits_rs2         (decodeUop_2_bits_rs2),
    .io_IN_decodeUop_2_bits_src1Type    (decodeUop_2_bits_src1Type),
    .io_IN_decodeUop_2_bits_src2Type    (decodeUop_2_bits_src2Type),
    .io_IN_decodeUop_2_bits_imm         (decodeUop_2_bits_imm),
    .io_IN_decodeUop_2_bits_pc          (decodeUop_2_bits_pc),
    .io_IN_decodeUop_2_bits_fuType      (decodeUop_2_bits_fuType),
    .io_IN_decodeUop_2_bits_opcode      (decodeUop_2_bits_opcode),
    .io_IN_decodeUop_2_bits_predTarget  (decodeUop_2_bits_predTarget),
    .io_IN_decodeUop_2_bits_compressed  (decodeUop_2_bits_compressed),
    .io_IN_decodeUop_2_bits_lockBackend (decodeUop_2_bits_lockBackend),
    .io_IN_decodeUop_2_bits_lastBranch  (decodeUop_2_bits_lastBranch),
    .io_IN_decodeUop_2_bits_inst        (decodeUop_2_bits_inst),
    .io_IN_decodeUop_3_ready            (decodeUop_3_ready),
    .io_IN_decodeUop_3_valid            (decodeUop_3_valid),
    .io_IN_decodeUop_3_bits_rd          (decodeUop_3_bits_rd),
    .io_IN_decodeUop_3_bits_rs1         (decodeUop_3_bits_rs1),
    .io_IN_decodeUop_3_bits_rs2         (decodeUop_3_bits_rs2),
    .io_IN_decodeUop_3_bits_src1Type    (decodeUop_3_bits_src1Type),
    .io_IN_decodeUop_3_bits_src2Type    (decodeUop_3_bits_src2Type),
    .io_IN_decodeUop_3_bits_imm         (decodeUop_3_bits_imm),
    .io_IN_decodeUop_3_bits_pc          (decodeUop_3_bits_pc),
    .io_IN_decodeUop_3_bits_fuType      (decodeUop_3_bits_fuType),
    .io_IN_decodeUop_3_bits_opcode      (decodeUop_3_bits_opcode),
    .io_IN_decodeUop_3_bits_predTarget  (decodeUop_3_bits_predTarget),
    .io_IN_decodeUop_3_bits_compressed  (decodeUop_3_bits_compressed),
    .io_IN_decodeUop_3_bits_lockBackend (decodeUop_3_bits_lockBackend),
    .io_IN_decodeUop_3_bits_lastBranch  (decodeUop_3_bits_lastBranch),
    .io_IN_decodeUop_3_bits_inst        (decodeUop_3_bits_inst),
    .io_OUT_renameUop_0_rd              (renameUop_0_rd),
    .io_OUT_renameUop_0_prd             (renameUop_0_prd),
    .io_OUT_renameUop_0_prs1            (renameUop_0_prs1),
    .io_OUT_renameUop_0_prs2            (renameUop_0_prs2),
    .io_OUT_renameUop_0_src1Type        (renameUop_0_src1Type),
    .io_OUT_renameUop_0_src2Type        (renameUop_0_src2Type),
    .io_OUT_renameUop_0_src1Ready       (renameUop_0_src1Ready),
    .io_OUT_renameUop_0_src2Ready       (renameUop_0_src2Ready),
    .io_OUT_renameUop_0_robPtr_flag     (renameUop_0_robPtr_flag),
    .io_OUT_renameUop_0_robPtr_index    (renameUop_0_robPtr_index),
    .io_OUT_renameUop_0_ldqPtr_flag     (renameUop_0_ldqPtr_flag),
    .io_OUT_renameUop_0_ldqPtr_index    (renameUop_0_ldqPtr_index),
    .io_OUT_renameUop_0_stqPtr_flag     (renameUop_0_stqPtr_flag),
    .io_OUT_renameUop_0_stqPtr_index    (renameUop_0_stqPtr_index),
    .io_OUT_renameUop_0_imm             (renameUop_0_imm),
    .io_OUT_renameUop_0_pc              (renameUop_0_pc),
    .io_OUT_renameUop_0_fuType          (renameUop_0_fuType),
    .io_OUT_renameUop_0_opcode          (renameUop_0_opcode),
    .io_OUT_renameUop_0_lockBackend     (renameUop_0_lockBackend),
    .io_OUT_renameUop_0_predTarget      (renameUop_0_predTarget),
    .io_OUT_renameUop_0_compressed      (renameUop_0_compressed),
    .io_OUT_renameUop_0_lastBranch      (renameUop_0_lastBranch),
    .io_OUT_renameUop_0_rs1             (renameUop_0_rs1),
    .io_OUT_renameUop_0_rs2             (renameUop_0_rs2),
    .io_OUT_renameUop_0_inst            (renameUop_0_inst),
    .io_OUT_renameUop_1_rd              (renameUop_1_rd),
    .io_OUT_renameUop_1_prd             (renameUop_1_prd),
    .io_OUT_renameUop_1_prs1            (renameUop_1_prs1),
    .io_OUT_renameUop_1_prs2            (renameUop_1_prs2),
    .io_OUT_renameUop_1_src1Type        (renameUop_1_src1Type),
    .io_OUT_renameUop_1_src2Type        (renameUop_1_src2Type),
    .io_OUT_renameUop_1_src1Ready       (renameUop_1_src1Ready),
    .io_OUT_renameUop_1_src2Ready       (renameUop_1_src2Ready),
    .io_OUT_renameUop_1_robPtr_flag     (renameUop_1_robPtr_flag),
    .io_OUT_renameUop_1_robPtr_index    (renameUop_1_robPtr_index),
    .io_OUT_renameUop_1_ldqPtr_flag     (renameUop_1_ldqPtr_flag),
    .io_OUT_renameUop_1_ldqPtr_index    (renameUop_1_ldqPtr_index),
    .io_OUT_renameUop_1_stqPtr_flag     (renameUop_1_stqPtr_flag),
    .io_OUT_renameUop_1_stqPtr_index    (renameUop_1_stqPtr_index),
    .io_OUT_renameUop_1_imm             (renameUop_1_imm),
    .io_OUT_renameUop_1_pc              (renameUop_1_pc),
    .io_OUT_renameUop_1_fuType          (renameUop_1_fuType),
    .io_OUT_renameUop_1_opcode          (renameUop_1_opcode),
    .io_OUT_renameUop_1_lockBackend     (renameUop_1_lockBackend),
    .io_OUT_renameUop_1_predTarget      (renameUop_1_predTarget),
    .io_OUT_renameUop_1_compressed      (renameUop_1_compressed),
    .io_OUT_renameUop_1_lastBranch      (renameUop_1_lastBranch),
    .io_OUT_renameUop_1_rs1             (renameUop_1_rs1),
    .io_OUT_renameUop_1_rs2             (renameUop_1_rs2),
    .io_OUT_renameUop_1_inst            (renameUop_1_inst),
    .io_OUT_renameUop_2_rd              (renameUop_2_rd),
    .io_OUT_renameUop_2_prd             (renameUop_2_prd),
    .io_OUT_renameUop_2_prs1            (renameUop_2_prs1),
    .io_OUT_renameUop_2_prs2            (renameUop_2_prs2),
    .io_OUT_renameUop_2_src1Type        (renameUop_2_src1Type),
    .io_OUT_renameUop_2_src2Type        (renameUop_2_src2Type),
    .io_OUT_renameUop_2_src1Ready       (renameUop_2_src1Ready),
    .io_OUT_renameUop_2_src2Ready       (renameUop_2_src2Ready),
    .io_OUT_renameUop_2_robPtr_flag     (renameUop_2_robPtr_flag),
    .io_OUT_renameUop_2_robPtr_index    (renameUop_2_robPtr_index),
    .io_OUT_renameUop_2_ldqPtr_flag     (renameUop_2_ldqPtr_flag),
    .io_OUT_renameUop_2_ldqPtr_index    (renameUop_2_ldqPtr_index),
    .io_OUT_renameUop_2_stqPtr_flag     (renameUop_2_stqPtr_flag),
    .io_OUT_renameUop_2_stqPtr_index    (renameUop_2_stqPtr_index),
    .io_OUT_renameUop_2_imm             (renameUop_2_imm),
    .io_OUT_renameUop_2_pc              (renameUop_2_pc),
    .io_OUT_renameUop_2_fuType          (renameUop_2_fuType),
    .io_OUT_renameUop_2_opcode          (renameUop_2_opcode),
    .io_OUT_renameUop_2_lockBackend     (renameUop_2_lockBackend),
    .io_OUT_renameUop_2_predTarget      (renameUop_2_predTarget),
    .io_OUT_renameUop_2_compressed      (renameUop_2_compressed),
    .io_OUT_renameUop_2_lastBranch      (renameUop_2_lastBranch),
    .io_OUT_renameUop_2_rs1             (renameUop_2_rs1),
    .io_OUT_renameUop_2_rs2             (renameUop_2_rs2),
    .io_OUT_renameUop_2_inst            (renameUop_2_inst),
    .io_OUT_renameUop_3_rd              (renameUop_3_rd),
    .io_OUT_renameUop_3_prd             (renameUop_3_prd),
    .io_OUT_renameUop_3_prs1            (renameUop_3_prs1),
    .io_OUT_renameUop_3_prs2            (renameUop_3_prs2),
    .io_OUT_renameUop_3_src1Type        (renameUop_3_src1Type),
    .io_OUT_renameUop_3_src2Type        (renameUop_3_src2Type),
    .io_OUT_renameUop_3_src1Ready       (renameUop_3_src1Ready),
    .io_OUT_renameUop_3_src2Ready       (renameUop_3_src2Ready),
    .io_OUT_renameUop_3_robPtr_flag     (renameUop_3_robPtr_flag),
    .io_OUT_renameUop_3_robPtr_index    (renameUop_3_robPtr_index),
    .io_OUT_renameUop_3_ldqPtr_flag     (renameUop_3_ldqPtr_flag),
    .io_OUT_renameUop_3_ldqPtr_index    (renameUop_3_ldqPtr_index),
    .io_OUT_renameUop_3_stqPtr_flag     (renameUop_3_stqPtr_flag),
    .io_OUT_renameUop_3_stqPtr_index    (renameUop_3_stqPtr_index),
    .io_OUT_renameUop_3_imm             (renameUop_3_imm),
    .io_OUT_renameUop_3_pc              (renameUop_3_pc),
    .io_OUT_renameUop_3_fuType          (renameUop_3_fuType),
    .io_OUT_renameUop_3_opcode          (renameUop_3_opcode),
    .io_OUT_renameUop_3_lockBackend     (renameUop_3_lockBackend),
    .io_OUT_renameUop_3_predTarget      (renameUop_3_predTarget),
    .io_OUT_renameUop_3_compressed      (renameUop_3_compressed),
    .io_OUT_renameUop_3_lastBranch      (renameUop_3_lastBranch),
    .io_OUT_renameUop_3_rs1             (renameUop_3_rs1),
    .io_OUT_renameUop_3_rs2             (renameUop_3_rs2),
    .io_OUT_renameUop_3_inst            (renameUop_3_inst),
    .io_OUT_robValid_0                  (renameRobValid_0),
    .io_OUT_robValid_1                  (renameRobValid_1),
    .io_OUT_robValid_2                  (renameRobValid_2),
    .io_OUT_robValid_3                  (renameRobValid_3),
    .io_IN_robTailPtr_flag              (_rename_io_IN_robTailPtr_flag),
    .io_IN_robTailPtr_index             (_rename_io_IN_robTailPtr_index),
    .io_IN_robEmpty                     (_rename_io_IN_robEmpty),
    .io_IN_ldqTailPtr_flag              (_rename_io_IN_ldqTailPtr_flag),
    .io_IN_ldqTailPtr_index             (_rename_io_IN_ldqTailPtr_index),
    .io_IN_stqTailPtr_flag              (_rename_io_IN_stqTailPtr_flag),
    .io_IN_stqTailPtr_index             (_rename_io_IN_stqTailPtr_index),
    .io_OUT_issueQueueValid_0           (renameIQValid_0),
    .io_OUT_issueQueueValid_1           (renameIQValid_1),
    .io_OUT_issueQueueValid_2           (renameIQValid_2),
    .io_OUT_issueQueueValid_3           (renameIQValid_3),
    .io_IN_issueQueueReady_0            (renameIQReady_0),
    .io_IN_issueQueueReady_1            (renameIQReady_1),
    .io_IN_issueQueueReady_2            (renameIQReady_2),
    .io_IN_issueQueueReady_3            (renameIQReady_3),
    .io_IN_writebackUop_0_valid         (writebackUop_0_valid),
    .io_IN_writebackUop_0_bits_prd      (writebackUop_0_bits_prd),
    .io_IN_writebackUop_1_valid         (writebackUop_1_valid),
    .io_IN_writebackUop_1_bits_prd      (writebackUop_1_bits_prd),
    .io_IN_writebackUop_2_valid         (writebackUop_2_valid),
    .io_IN_writebackUop_2_bits_prd      (writebackUop_2_bits_prd),
    .io_IN_writebackUop_3_valid         (writebackUop_3_valid),
    .io_IN_writebackUop_3_bits_prd      (writebackUop_3_bits_prd),
    .io_IN_writebackUop_4_valid         (writebackUop_4_valid),
    .io_IN_writebackUop_4_bits_prd      (writebackUop_4_bits_prd),
    .io_IN_commitUop_0_valid            (commitUop_0_valid),
    .io_IN_commitUop_0_bits_rd          (commitUop_0_bits_rd),
    .io_IN_commitUop_0_bits_prd         (commitUop_0_bits_prd),
    .io_IN_commitUop_1_valid            (commitUop_1_valid),
    .io_IN_commitUop_1_bits_rd          (commitUop_1_bits_rd),
    .io_IN_commitUop_1_bits_prd         (commitUop_1_bits_prd),
    .io_IN_commitUop_2_valid            (commitUop_2_valid),
    .io_IN_commitUop_2_bits_rd          (commitUop_2_bits_rd),
    .io_IN_commitUop_2_bits_prd         (commitUop_2_bits_prd),
    .io_IN_commitUop_3_valid            (commitUop_3_valid),
    .io_IN_commitUop_3_bits_rd          (commitUop_3_bits_rd),
    .io_IN_commitUop_3_bits_prd         (commitUop_3_bits_prd),
    .io_IN_storeQueueEmpty              (_rename_io_IN_storeQueueEmpty),
    .io_IN_storeBufferEmpty             (_rename_io_IN_storeBufferEmpty),
    .io_IN_flush                        (_rename_io_IN_flush)
  );
  wire [31:0]  writebackUop_0_bits_data /*verilator public_flat*/;
  wire [4:0]   writebackUop_0_bits_robPtr_index /*verilator public_flat*/;
  wire [3:0]   writebackUop_0_bits_flag /*verilator public_flat*/;
  wire [31:0]  writebackUop_0_bits_target /*verilator public_flat*/;
  wire [31:0]  writebackUop_1_bits_data /*verilator public_flat*/;
  wire [4:0]   writebackUop_1_bits_robPtr_index /*verilator public_flat*/;
  wire [31:0]  writebackUop_2_bits_data /*verilator public_flat*/;
  wire [4:0]   writebackUop_2_bits_robPtr_index /*verilator public_flat*/;
  wire [3:0]   writebackUop_2_bits_flag /*verilator public_flat*/;
  wire [31:0]  writebackUop_2_bits_target /*verilator public_flat*/;
  wire [31:0]  writebackUop_3_bits_data /*verilator public_flat*/;
  wire         writebackUop_3_bits_dest /*verilator public_flat*/;
  wire [4:0]   writebackUop_3_bits_robPtr_index /*verilator public_flat*/;
  wire [4:0]   writebackUop_4_bits_robPtr_index /*verilator public_flat*/;
  wire [3:0]   writebackUop_4_bits_flag /*verilator public_flat*/;
  wire [31:0]  writebackUop_4_bits_target /*verilator public_flat*/;
  assign _rob_io_IN_flush = _flagHandler_io_OUT_flush;
  ROB rob (
    .clock                                  (clock),
    .reset                                  (reset),
    .io_IN_renameUop_0_valid                (renameRobValid_0),
    .io_IN_renameUop_0_bits_rd              (renameUop_0_rd),
    .io_IN_renameUop_0_bits_prd             (renameUop_0_prd),
    .io_IN_renameUop_0_bits_robPtr_index    (renameUop_0_robPtr_index),
    .io_IN_renameUop_0_bits_ldqPtr_flag     (renameUop_0_ldqPtr_flag),
    .io_IN_renameUop_0_bits_ldqPtr_index    (renameUop_0_ldqPtr_index),
    .io_IN_renameUop_0_bits_stqPtr_flag     (renameUop_0_stqPtr_flag),
    .io_IN_renameUop_0_bits_stqPtr_index    (renameUop_0_stqPtr_index),
    .io_IN_renameUop_0_bits_pc              (renameUop_0_pc),
    .io_IN_renameUop_0_bits_fuType          (renameUop_0_fuType),
    .io_IN_renameUop_0_bits_opcode          (renameUop_0_opcode),
    .io_IN_renameUop_0_bits_lastBranch      (renameUop_0_lastBranch),
    .io_IN_renameUop_1_valid                (renameRobValid_1),
    .io_IN_renameUop_1_bits_rd              (renameUop_1_rd),
    .io_IN_renameUop_1_bits_prd             (renameUop_1_prd),
    .io_IN_renameUop_1_bits_robPtr_index    (renameUop_1_robPtr_index),
    .io_IN_renameUop_1_bits_ldqPtr_flag     (renameUop_1_ldqPtr_flag),
    .io_IN_renameUop_1_bits_ldqPtr_index    (renameUop_1_ldqPtr_index),
    .io_IN_renameUop_1_bits_stqPtr_flag     (renameUop_1_stqPtr_flag),
    .io_IN_renameUop_1_bits_stqPtr_index    (renameUop_1_stqPtr_index),
    .io_IN_renameUop_1_bits_pc              (renameUop_1_pc),
    .io_IN_renameUop_1_bits_fuType          (renameUop_1_fuType),
    .io_IN_renameUop_1_bits_opcode          (renameUop_1_opcode),
    .io_IN_renameUop_1_bits_lastBranch      (renameUop_1_lastBranch),
    .io_IN_renameUop_2_valid                (renameRobValid_2),
    .io_IN_renameUop_2_bits_rd              (renameUop_2_rd),
    .io_IN_renameUop_2_bits_prd             (renameUop_2_prd),
    .io_IN_renameUop_2_bits_robPtr_index    (renameUop_2_robPtr_index),
    .io_IN_renameUop_2_bits_ldqPtr_flag     (renameUop_2_ldqPtr_flag),
    .io_IN_renameUop_2_bits_ldqPtr_index    (renameUop_2_ldqPtr_index),
    .io_IN_renameUop_2_bits_stqPtr_flag     (renameUop_2_stqPtr_flag),
    .io_IN_renameUop_2_bits_stqPtr_index    (renameUop_2_stqPtr_index),
    .io_IN_renameUop_2_bits_pc              (renameUop_2_pc),
    .io_IN_renameUop_2_bits_fuType          (renameUop_2_fuType),
    .io_IN_renameUop_2_bits_opcode          (renameUop_2_opcode),
    .io_IN_renameUop_2_bits_lastBranch      (renameUop_2_lastBranch),
    .io_IN_renameUop_3_valid                (renameRobValid_3),
    .io_IN_renameUop_3_bits_rd              (renameUop_3_rd),
    .io_IN_renameUop_3_bits_prd             (renameUop_3_prd),
    .io_IN_renameUop_3_bits_robPtr_index    (renameUop_3_robPtr_index),
    .io_IN_renameUop_3_bits_ldqPtr_flag     (renameUop_3_ldqPtr_flag),
    .io_IN_renameUop_3_bits_ldqPtr_index    (renameUop_3_ldqPtr_index),
    .io_IN_renameUop_3_bits_stqPtr_flag     (renameUop_3_stqPtr_flag),
    .io_IN_renameUop_3_bits_stqPtr_index    (renameUop_3_stqPtr_index),
    .io_IN_renameUop_3_bits_pc              (renameUop_3_pc),
    .io_IN_renameUop_3_bits_fuType          (renameUop_3_fuType),
    .io_IN_renameUop_3_bits_opcode          (renameUop_3_opcode),
    .io_IN_renameUop_3_bits_lastBranch      (renameUop_3_lastBranch),
    .io_IN_writebackUop_0_valid             (writebackUop_0_valid),
    .io_IN_writebackUop_0_bits_data         (writebackUop_0_bits_data),
    .io_IN_writebackUop_0_bits_dest         (writebackUop_0_bits_dest),
    .io_IN_writebackUop_0_bits_robPtr_index (writebackUop_0_bits_robPtr_index),
    .io_IN_writebackUop_0_bits_flag         (writebackUop_0_bits_flag),
    .io_IN_writebackUop_0_bits_target       (writebackUop_0_bits_target),
    .io_IN_writebackUop_1_valid             (writebackUop_1_valid),
    .io_IN_writebackUop_1_bits_data         (writebackUop_1_bits_data),
    .io_IN_writebackUop_1_bits_dest         (writebackUop_1_bits_dest),
    .io_IN_writebackUop_1_bits_robPtr_index (writebackUop_1_bits_robPtr_index),
    .io_IN_writebackUop_1_bits_flag         (writebackUop_1_bits_flag),
    .io_IN_writebackUop_1_bits_target       (writebackUop_1_bits_target),
    .io_IN_writebackUop_2_valid             (writebackUop_2_valid),
    .io_IN_writebackUop_2_bits_data         (writebackUop_2_bits_data),
    .io_IN_writebackUop_2_bits_dest         (writebackUop_2_bits_dest),
    .io_IN_writebackUop_2_bits_robPtr_index (writebackUop_2_bits_robPtr_index),
    .io_IN_writebackUop_2_bits_flag         (writebackUop_2_bits_flag),
    .io_IN_writebackUop_2_bits_target       (writebackUop_2_bits_target),
    .io_IN_writebackUop_3_valid             (writebackUop_3_valid),
    .io_IN_writebackUop_3_bits_data         (writebackUop_3_bits_data),
    .io_IN_writebackUop_3_bits_dest         (writebackUop_3_bits_dest),
    .io_IN_writebackUop_3_bits_robPtr_index (writebackUop_3_bits_robPtr_index),
    .io_IN_writebackUop_3_bits_flag         (writebackUop_3_bits_flag),
    .io_IN_writebackUop_3_bits_target       (writebackUop_3_bits_target),
    .io_IN_writebackUop_4_valid             (writebackUop_4_valid),
    .io_IN_writebackUop_4_bits_data         (writebackUop_4_bits_data),
    .io_IN_writebackUop_4_bits_dest         (writebackUop_4_bits_dest),
    .io_IN_writebackUop_4_bits_robPtr_index (writebackUop_4_bits_robPtr_index),
    .io_IN_writebackUop_4_bits_flag         (writebackUop_4_bits_flag),
    .io_IN_writebackUop_4_bits_target       (writebackUop_4_bits_target),
    .io_OUT_commitUop_0_valid               (commitUop_0_valid),
    .io_OUT_commitUop_0_bits_rd             (commitUop_0_bits_rd),
    .io_OUT_commitUop_0_bits_prd            (commitUop_0_bits_prd),
    .io_OUT_commitUop_0_bits_robPtr_flag    (commitUop_0_bits_robPtr_flag),
    .io_OUT_commitUop_0_bits_robPtr_index   (commitUop_0_bits_robPtr_index),
    .io_OUT_commitUop_0_bits_pc             (commitUop_0_bits_pc),
    .io_OUT_commitUop_0_bits_flag           (commitUop_0_bits_flag),
    .io_OUT_commitUop_0_bits_target         (commitUop_0_bits_target),
    .io_OUT_commitUop_0_bits_ldqPtr_flag    (commitUop_0_bits_ldqPtr_flag),
    .io_OUT_commitUop_0_bits_ldqPtr_index   (commitUop_0_bits_ldqPtr_index),
    .io_OUT_commitUop_0_bits_stqPtr_flag    (commitUop_0_bits_stqPtr_flag),
    .io_OUT_commitUop_0_bits_stqPtr_index   (commitUop_0_bits_stqPtr_index),
    .io_OUT_commitUop_0_bits_result         (commitUop_0_bits_result),
    .io_OUT_commitUop_1_valid               (commitUop_1_valid),
    .io_OUT_commitUop_1_bits_rd             (commitUop_1_bits_rd),
    .io_OUT_commitUop_1_bits_prd            (commitUop_1_bits_prd),
    .io_OUT_commitUop_1_bits_robPtr_flag    (commitUop_1_bits_robPtr_flag),
    .io_OUT_commitUop_1_bits_robPtr_index   (commitUop_1_bits_robPtr_index),
    .io_OUT_commitUop_1_bits_pc             (commitUop_1_bits_pc),
    .io_OUT_commitUop_1_bits_flag           (commitUop_1_bits_flag),
    .io_OUT_commitUop_1_bits_target         (commitUop_1_bits_target),
    .io_OUT_commitUop_1_bits_ldqPtr_flag    (commitUop_1_bits_ldqPtr_flag),
    .io_OUT_commitUop_1_bits_ldqPtr_index   (commitUop_1_bits_ldqPtr_index),
    .io_OUT_commitUop_1_bits_stqPtr_flag    (commitUop_1_bits_stqPtr_flag),
    .io_OUT_commitUop_1_bits_stqPtr_index   (commitUop_1_bits_stqPtr_index),
    .io_OUT_commitUop_1_bits_result         (commitUop_1_bits_result),
    .io_OUT_commitUop_2_valid               (commitUop_2_valid),
    .io_OUT_commitUop_2_bits_rd             (commitUop_2_bits_rd),
    .io_OUT_commitUop_2_bits_prd            (commitUop_2_bits_prd),
    .io_OUT_commitUop_2_bits_robPtr_flag    (commitUop_2_bits_robPtr_flag),
    .io_OUT_commitUop_2_bits_robPtr_index   (commitUop_2_bits_robPtr_index),
    .io_OUT_commitUop_2_bits_pc             (commitUop_2_bits_pc),
    .io_OUT_commitUop_2_bits_flag           (commitUop_2_bits_flag),
    .io_OUT_commitUop_2_bits_target         (commitUop_2_bits_target),
    .io_OUT_commitUop_2_bits_ldqPtr_flag    (commitUop_2_bits_ldqPtr_flag),
    .io_OUT_commitUop_2_bits_ldqPtr_index   (commitUop_2_bits_ldqPtr_index),
    .io_OUT_commitUop_2_bits_stqPtr_flag    (commitUop_2_bits_stqPtr_flag),
    .io_OUT_commitUop_2_bits_stqPtr_index   (commitUop_2_bits_stqPtr_index),
    .io_OUT_commitUop_2_bits_result         (commitUop_2_bits_result),
    .io_OUT_commitUop_3_valid               (commitUop_3_valid),
    .io_OUT_commitUop_3_bits_rd             (commitUop_3_bits_rd),
    .io_OUT_commitUop_3_bits_prd            (commitUop_3_bits_prd),
    .io_OUT_commitUop_3_bits_robPtr_flag    (commitUop_3_bits_robPtr_flag),
    .io_OUT_commitUop_3_bits_robPtr_index   (commitUop_3_bits_robPtr_index),
    .io_OUT_commitUop_3_bits_pc             (commitUop_3_bits_pc),
    .io_OUT_commitUop_3_bits_flag           (commitUop_3_bits_flag),
    .io_OUT_commitUop_3_bits_target         (commitUop_3_bits_target),
    .io_OUT_commitUop_3_bits_ldqPtr_flag    (commitUop_3_bits_ldqPtr_flag),
    .io_OUT_commitUop_3_bits_ldqPtr_index   (commitUop_3_bits_ldqPtr_index),
    .io_OUT_commitUop_3_bits_stqPtr_flag    (commitUop_3_bits_stqPtr_flag),
    .io_OUT_commitUop_3_bits_stqPtr_index   (commitUop_3_bits_stqPtr_index),
    .io_OUT_commitUop_3_bits_result         (commitUop_3_bits_result),
    .io_OUT_robTailPtr_flag                 (_rob_io_OUT_robTailPtr_flag),
    .io_OUT_robTailPtr_index                (_rob_io_OUT_robTailPtr_index),
    .io_OUT_ldqTailPtr_flag                 (_rob_io_OUT_ldqTailPtr_flag),
    .io_OUT_ldqTailPtr_index                (_rob_io_OUT_ldqTailPtr_index),
    .io_OUT_stqTailPtr_flag                 (_rob_io_OUT_stqTailPtr_flag),
    .io_OUT_stqTailPtr_index                (_rob_io_OUT_stqTailPtr_index),
    .io_OUT_flagUop_valid                   (flagUop_valid),
    .io_OUT_flagUop_bits_rd                 (flagUop_bits_rd),
    .io_OUT_flagUop_bits_flag               (flagUop_bits_flag),
    .io_OUT_flagUop_bits_pc                 (flagUop_bits_pc),
    .io_OUT_flagUop_bits_target             (flagUop_bits_target),
    .io_OUT_flagUop_bits_robPtr_flag        (flagUop_bits_robPtr_flag),
    .io_OUT_flagUop_bits_robPtr_index       (flagUop_bits_robPtr_index),
    .io_OUT_robEmpty                        (_rename_io_IN_robEmpty),
    .io_OUT_phtUpdate_valid                 (_ifu_io_IN_phtUpdate_valid),
    .io_OUT_phtUpdate_bits_pc               (_ifu_io_IN_phtUpdate_bits_pc),
    .io_OUT_phtUpdate_bits_isLastBranch     (_ifu_io_IN_phtUpdate_bits_isLastBranch),
    .io_OUT_phtUpdate_bits_taken            (_ifu_io_IN_phtUpdate_bits_taken),
    .io_OUT_rasUpdate_valid                 (_ifu_io_IN_rasCommitUpdate_valid),
    .io_OUT_rasUpdate_bits_push             (_ifu_io_IN_rasCommitUpdate_bits_push),
    .io_OUT_rasUpdate_bits_target           (_ifu_io_IN_rasCommitUpdate_bits_target),
    .io_IN_flush                            (_rob_io_IN_flush)
  );
  Scheduler scheduler (
    .io_IN_renameUop_0_rd                 (renameUop_0_rd),
    .io_IN_renameUop_0_prd                (renameUop_0_prd),
    .io_IN_renameUop_0_prs1               (renameUop_0_prs1),
    .io_IN_renameUop_0_prs2               (renameUop_0_prs2),
    .io_IN_renameUop_0_src1Type           (renameUop_0_src1Type),
    .io_IN_renameUop_0_src2Type           (renameUop_0_src2Type),
    .io_IN_renameUop_0_src1Ready          (renameUop_0_src1Ready),
    .io_IN_renameUop_0_src2Ready          (renameUop_0_src2Ready),
    .io_IN_renameUop_0_robPtr_flag        (renameUop_0_robPtr_flag),
    .io_IN_renameUop_0_robPtr_index       (renameUop_0_robPtr_index),
    .io_IN_renameUop_0_ldqPtr_flag        (renameUop_0_ldqPtr_flag),
    .io_IN_renameUop_0_ldqPtr_index       (renameUop_0_ldqPtr_index),
    .io_IN_renameUop_0_stqPtr_flag        (renameUop_0_stqPtr_flag),
    .io_IN_renameUop_0_stqPtr_index       (renameUop_0_stqPtr_index),
    .io_IN_renameUop_0_imm                (renameUop_0_imm),
    .io_IN_renameUop_0_pc                 (renameUop_0_pc),
    .io_IN_renameUop_0_fuType             (renameUop_0_fuType),
    .io_IN_renameUop_0_opcode             (renameUop_0_opcode),
    .io_IN_renameUop_0_lockBackend        (renameUop_0_lockBackend),
    .io_IN_renameUop_0_predTarget         (renameUop_0_predTarget),
    .io_IN_renameUop_0_compressed         (renameUop_0_compressed),
    .io_IN_renameUop_0_lastBranch         (renameUop_0_lastBranch),
    .io_IN_renameUop_0_rs1                (renameUop_0_rs1),
    .io_IN_renameUop_0_rs2                (renameUop_0_rs2),
    .io_IN_renameUop_0_inst               (renameUop_0_inst),
    .io_IN_renameUop_1_rd                 (renameUop_1_rd),
    .io_IN_renameUop_1_prd                (renameUop_1_prd),
    .io_IN_renameUop_1_prs1               (renameUop_1_prs1),
    .io_IN_renameUop_1_prs2               (renameUop_1_prs2),
    .io_IN_renameUop_1_src1Type           (renameUop_1_src1Type),
    .io_IN_renameUop_1_src2Type           (renameUop_1_src2Type),
    .io_IN_renameUop_1_src1Ready          (renameUop_1_src1Ready),
    .io_IN_renameUop_1_src2Ready          (renameUop_1_src2Ready),
    .io_IN_renameUop_1_robPtr_flag        (renameUop_1_robPtr_flag),
    .io_IN_renameUop_1_robPtr_index       (renameUop_1_robPtr_index),
    .io_IN_renameUop_1_ldqPtr_flag        (renameUop_1_ldqPtr_flag),
    .io_IN_renameUop_1_ldqPtr_index       (renameUop_1_ldqPtr_index),
    .io_IN_renameUop_1_stqPtr_flag        (renameUop_1_stqPtr_flag),
    .io_IN_renameUop_1_stqPtr_index       (renameUop_1_stqPtr_index),
    .io_IN_renameUop_1_imm                (renameUop_1_imm),
    .io_IN_renameUop_1_pc                 (renameUop_1_pc),
    .io_IN_renameUop_1_fuType             (renameUop_1_fuType),
    .io_IN_renameUop_1_opcode             (renameUop_1_opcode),
    .io_IN_renameUop_1_lockBackend        (renameUop_1_lockBackend),
    .io_IN_renameUop_1_predTarget         (renameUop_1_predTarget),
    .io_IN_renameUop_1_compressed         (renameUop_1_compressed),
    .io_IN_renameUop_1_lastBranch         (renameUop_1_lastBranch),
    .io_IN_renameUop_1_rs1                (renameUop_1_rs1),
    .io_IN_renameUop_1_rs2                (renameUop_1_rs2),
    .io_IN_renameUop_1_inst               (renameUop_1_inst),
    .io_IN_renameUop_2_rd                 (renameUop_2_rd),
    .io_IN_renameUop_2_prd                (renameUop_2_prd),
    .io_IN_renameUop_2_prs1               (renameUop_2_prs1),
    .io_IN_renameUop_2_prs2               (renameUop_2_prs2),
    .io_IN_renameUop_2_src1Type           (renameUop_2_src1Type),
    .io_IN_renameUop_2_src2Type           (renameUop_2_src2Type),
    .io_IN_renameUop_2_src1Ready          (renameUop_2_src1Ready),
    .io_IN_renameUop_2_src2Ready          (renameUop_2_src2Ready),
    .io_IN_renameUop_2_robPtr_flag        (renameUop_2_robPtr_flag),
    .io_IN_renameUop_2_robPtr_index       (renameUop_2_robPtr_index),
    .io_IN_renameUop_2_ldqPtr_flag        (renameUop_2_ldqPtr_flag),
    .io_IN_renameUop_2_ldqPtr_index       (renameUop_2_ldqPtr_index),
    .io_IN_renameUop_2_stqPtr_flag        (renameUop_2_stqPtr_flag),
    .io_IN_renameUop_2_stqPtr_index       (renameUop_2_stqPtr_index),
    .io_IN_renameUop_2_imm                (renameUop_2_imm),
    .io_IN_renameUop_2_pc                 (renameUop_2_pc),
    .io_IN_renameUop_2_fuType             (renameUop_2_fuType),
    .io_IN_renameUop_2_opcode             (renameUop_2_opcode),
    .io_IN_renameUop_2_lockBackend        (renameUop_2_lockBackend),
    .io_IN_renameUop_2_predTarget         (renameUop_2_predTarget),
    .io_IN_renameUop_2_compressed         (renameUop_2_compressed),
    .io_IN_renameUop_2_lastBranch         (renameUop_2_lastBranch),
    .io_IN_renameUop_2_rs1                (renameUop_2_rs1),
    .io_IN_renameUop_2_rs2                (renameUop_2_rs2),
    .io_IN_renameUop_2_inst               (renameUop_2_inst),
    .io_IN_renameUop_3_rd                 (renameUop_3_rd),
    .io_IN_renameUop_3_prd                (renameUop_3_prd),
    .io_IN_renameUop_3_prs1               (renameUop_3_prs1),
    .io_IN_renameUop_3_prs2               (renameUop_3_prs2),
    .io_IN_renameUop_3_src1Type           (renameUop_3_src1Type),
    .io_IN_renameUop_3_src2Type           (renameUop_3_src2Type),
    .io_IN_renameUop_3_src1Ready          (renameUop_3_src1Ready),
    .io_IN_renameUop_3_src2Ready          (renameUop_3_src2Ready),
    .io_IN_renameUop_3_robPtr_flag        (renameUop_3_robPtr_flag),
    .io_IN_renameUop_3_robPtr_index       (renameUop_3_robPtr_index),
    .io_IN_renameUop_3_ldqPtr_flag        (renameUop_3_ldqPtr_flag),
    .io_IN_renameUop_3_ldqPtr_index       (renameUop_3_ldqPtr_index),
    .io_IN_renameUop_3_stqPtr_flag        (renameUop_3_stqPtr_flag),
    .io_IN_renameUop_3_stqPtr_index       (renameUop_3_stqPtr_index),
    .io_IN_renameUop_3_imm                (renameUop_3_imm),
    .io_IN_renameUop_3_pc                 (renameUop_3_pc),
    .io_IN_renameUop_3_fuType             (renameUop_3_fuType),
    .io_IN_renameUop_3_opcode             (renameUop_3_opcode),
    .io_IN_renameUop_3_lockBackend        (renameUop_3_lockBackend),
    .io_IN_renameUop_3_predTarget         (renameUop_3_predTarget),
    .io_IN_renameUop_3_compressed         (renameUop_3_compressed),
    .io_IN_renameUop_3_lastBranch         (renameUop_3_lastBranch),
    .io_IN_renameUop_3_rs1                (renameUop_3_rs1),
    .io_IN_renameUop_3_rs2                (renameUop_3_rs2),
    .io_IN_renameUop_3_inst               (renameUop_3_inst),
    .io_IN_issueQueueValid_0              (renameIQValid_0),
    .io_IN_issueQueueValid_1              (renameIQValid_1),
    .io_IN_issueQueueValid_2              (renameIQValid_2),
    .io_IN_issueQueueValid_3              (renameIQValid_3),
    .io_OUT_issueQueueReady_0             (renameIQReady_0),
    .io_OUT_issueQueueReady_1             (renameIQReady_1),
    .io_OUT_issueQueueReady_2             (renameIQReady_2),
    .io_OUT_issueQueueReady_3             (renameIQReady_3),
    .io_OUT_renameUop_0_ready             (_scheduler_io_OUT_renameUop_0_ready),
    .io_OUT_renameUop_0_valid             (_scheduler_io_OUT_renameUop_0_valid),
    .io_OUT_renameUop_0_bits_rd           (_scheduler_io_OUT_renameUop_0_bits_rd),
    .io_OUT_renameUop_0_bits_prd          (_scheduler_io_OUT_renameUop_0_bits_prd),
    .io_OUT_renameUop_0_bits_prs1         (_scheduler_io_OUT_renameUop_0_bits_prs1),
    .io_OUT_renameUop_0_bits_prs2         (_scheduler_io_OUT_renameUop_0_bits_prs2),
    .io_OUT_renameUop_0_bits_src1Type     (_scheduler_io_OUT_renameUop_0_bits_src1Type),
    .io_OUT_renameUop_0_bits_src2Type     (_scheduler_io_OUT_renameUop_0_bits_src2Type),
    .io_OUT_renameUop_0_bits_src1Ready    (_scheduler_io_OUT_renameUop_0_bits_src1Ready),
    .io_OUT_renameUop_0_bits_src2Ready    (_scheduler_io_OUT_renameUop_0_bits_src2Ready),
    .io_OUT_renameUop_0_bits_robPtr_flag
      (_scheduler_io_OUT_renameUop_0_bits_robPtr_flag),
    .io_OUT_renameUop_0_bits_robPtr_index
      (_scheduler_io_OUT_renameUop_0_bits_robPtr_index),
    .io_OUT_renameUop_0_bits_ldqPtr_flag
      (_scheduler_io_OUT_renameUop_0_bits_ldqPtr_flag),
    .io_OUT_renameUop_0_bits_ldqPtr_index
      (_scheduler_io_OUT_renameUop_0_bits_ldqPtr_index),
    .io_OUT_renameUop_0_bits_stqPtr_flag
      (_scheduler_io_OUT_renameUop_0_bits_stqPtr_flag),
    .io_OUT_renameUop_0_bits_stqPtr_index
      (_scheduler_io_OUT_renameUop_0_bits_stqPtr_index),
    .io_OUT_renameUop_0_bits_imm          (_scheduler_io_OUT_renameUop_0_bits_imm),
    .io_OUT_renameUop_0_bits_pc           (_scheduler_io_OUT_renameUop_0_bits_pc),
    .io_OUT_renameUop_0_bits_fuType       (_scheduler_io_OUT_renameUop_0_bits_fuType),
    .io_OUT_renameUop_0_bits_opcode       (_scheduler_io_OUT_renameUop_0_bits_opcode),
    .io_OUT_renameUop_0_bits_lockBackend
      (_scheduler_io_OUT_renameUop_0_bits_lockBackend),
    .io_OUT_renameUop_0_bits_predTarget   (_scheduler_io_OUT_renameUop_0_bits_predTarget),
    .io_OUT_renameUop_0_bits_compressed   (_scheduler_io_OUT_renameUop_0_bits_compressed),
    .io_OUT_renameUop_0_bits_lastBranch   (_scheduler_io_OUT_renameUop_0_bits_lastBranch),
    .io_OUT_renameUop_0_bits_rs1          (_scheduler_io_OUT_renameUop_0_bits_rs1),
    .io_OUT_renameUop_0_bits_rs2          (_scheduler_io_OUT_renameUop_0_bits_rs2),
    .io_OUT_renameUop_0_bits_inst         (_scheduler_io_OUT_renameUop_0_bits_inst),
    .io_OUT_renameUop_1_ready             (_scheduler_io_OUT_renameUop_1_ready),
    .io_OUT_renameUop_1_valid             (_scheduler_io_OUT_renameUop_1_valid),
    .io_OUT_renameUop_1_bits_rd           (_scheduler_io_OUT_renameUop_1_bits_rd),
    .io_OUT_renameUop_1_bits_prd          (_scheduler_io_OUT_renameUop_1_bits_prd),
    .io_OUT_renameUop_1_bits_prs1         (_scheduler_io_OUT_renameUop_1_bits_prs1),
    .io_OUT_renameUop_1_bits_prs2         (_scheduler_io_OUT_renameUop_1_bits_prs2),
    .io_OUT_renameUop_1_bits_src1Type     (_scheduler_io_OUT_renameUop_1_bits_src1Type),
    .io_OUT_renameUop_1_bits_src2Type     (_scheduler_io_OUT_renameUop_1_bits_src2Type),
    .io_OUT_renameUop_1_bits_src1Ready    (_scheduler_io_OUT_renameUop_1_bits_src1Ready),
    .io_OUT_renameUop_1_bits_src2Ready    (_scheduler_io_OUT_renameUop_1_bits_src2Ready),
    .io_OUT_renameUop_1_bits_robPtr_flag
      (_scheduler_io_OUT_renameUop_1_bits_robPtr_flag),
    .io_OUT_renameUop_1_bits_robPtr_index
      (_scheduler_io_OUT_renameUop_1_bits_robPtr_index),
    .io_OUT_renameUop_1_bits_ldqPtr_flag
      (_scheduler_io_OUT_renameUop_1_bits_ldqPtr_flag),
    .io_OUT_renameUop_1_bits_ldqPtr_index
      (_scheduler_io_OUT_renameUop_1_bits_ldqPtr_index),
    .io_OUT_renameUop_1_bits_stqPtr_flag
      (_scheduler_io_OUT_renameUop_1_bits_stqPtr_flag),
    .io_OUT_renameUop_1_bits_stqPtr_index
      (_scheduler_io_OUT_renameUop_1_bits_stqPtr_index),
    .io_OUT_renameUop_1_bits_imm          (_scheduler_io_OUT_renameUop_1_bits_imm),
    .io_OUT_renameUop_1_bits_pc           (_scheduler_io_OUT_renameUop_1_bits_pc),
    .io_OUT_renameUop_1_bits_fuType       (_scheduler_io_OUT_renameUop_1_bits_fuType),
    .io_OUT_renameUop_1_bits_opcode       (_scheduler_io_OUT_renameUop_1_bits_opcode),
    .io_OUT_renameUop_1_bits_lockBackend
      (_scheduler_io_OUT_renameUop_1_bits_lockBackend),
    .io_OUT_renameUop_1_bits_predTarget   (_scheduler_io_OUT_renameUop_1_bits_predTarget),
    .io_OUT_renameUop_1_bits_compressed   (_scheduler_io_OUT_renameUop_1_bits_compressed),
    .io_OUT_renameUop_1_bits_lastBranch   (_scheduler_io_OUT_renameUop_1_bits_lastBranch),
    .io_OUT_renameUop_1_bits_rs1          (_scheduler_io_OUT_renameUop_1_bits_rs1),
    .io_OUT_renameUop_1_bits_rs2          (_scheduler_io_OUT_renameUop_1_bits_rs2),
    .io_OUT_renameUop_1_bits_inst         (_scheduler_io_OUT_renameUop_1_bits_inst),
    .io_OUT_renameUop_2_ready             (_scheduler_io_OUT_renameUop_2_ready),
    .io_OUT_renameUop_2_valid             (_scheduler_io_OUT_renameUop_2_valid),
    .io_OUT_renameUop_2_bits_rd           (_scheduler_io_OUT_renameUop_2_bits_rd),
    .io_OUT_renameUop_2_bits_prd          (_scheduler_io_OUT_renameUop_2_bits_prd),
    .io_OUT_renameUop_2_bits_prs1         (_scheduler_io_OUT_renameUop_2_bits_prs1),
    .io_OUT_renameUop_2_bits_prs2         (_scheduler_io_OUT_renameUop_2_bits_prs2),
    .io_OUT_renameUop_2_bits_src1Type     (_scheduler_io_OUT_renameUop_2_bits_src1Type),
    .io_OUT_renameUop_2_bits_src2Type     (_scheduler_io_OUT_renameUop_2_bits_src2Type),
    .io_OUT_renameUop_2_bits_src1Ready    (_scheduler_io_OUT_renameUop_2_bits_src1Ready),
    .io_OUT_renameUop_2_bits_src2Ready    (_scheduler_io_OUT_renameUop_2_bits_src2Ready),
    .io_OUT_renameUop_2_bits_robPtr_flag
      (_scheduler_io_OUT_renameUop_2_bits_robPtr_flag),
    .io_OUT_renameUop_2_bits_robPtr_index
      (_scheduler_io_OUT_renameUop_2_bits_robPtr_index),
    .io_OUT_renameUop_2_bits_ldqPtr_flag
      (_scheduler_io_OUT_renameUop_2_bits_ldqPtr_flag),
    .io_OUT_renameUop_2_bits_ldqPtr_index
      (_scheduler_io_OUT_renameUop_2_bits_ldqPtr_index),
    .io_OUT_renameUop_2_bits_stqPtr_flag
      (_scheduler_io_OUT_renameUop_2_bits_stqPtr_flag),
    .io_OUT_renameUop_2_bits_stqPtr_index
      (_scheduler_io_OUT_renameUop_2_bits_stqPtr_index),
    .io_OUT_renameUop_2_bits_imm          (_scheduler_io_OUT_renameUop_2_bits_imm),
    .io_OUT_renameUop_2_bits_pc           (_scheduler_io_OUT_renameUop_2_bits_pc),
    .io_OUT_renameUop_2_bits_fuType       (_scheduler_io_OUT_renameUop_2_bits_fuType),
    .io_OUT_renameUop_2_bits_opcode       (_scheduler_io_OUT_renameUop_2_bits_opcode),
    .io_OUT_renameUop_2_bits_lockBackend
      (_scheduler_io_OUT_renameUop_2_bits_lockBackend),
    .io_OUT_renameUop_2_bits_predTarget   (_scheduler_io_OUT_renameUop_2_bits_predTarget),
    .io_OUT_renameUop_2_bits_compressed   (_scheduler_io_OUT_renameUop_2_bits_compressed),
    .io_OUT_renameUop_2_bits_lastBranch   (_scheduler_io_OUT_renameUop_2_bits_lastBranch),
    .io_OUT_renameUop_2_bits_rs1          (_scheduler_io_OUT_renameUop_2_bits_rs1),
    .io_OUT_renameUop_2_bits_rs2          (_scheduler_io_OUT_renameUop_2_bits_rs2),
    .io_OUT_renameUop_2_bits_inst         (_scheduler_io_OUT_renameUop_2_bits_inst),
    .io_OUT_renameUop_3_ready             (_scheduler_io_OUT_renameUop_3_ready),
    .io_OUT_renameUop_3_valid             (_scheduler_io_OUT_renameUop_3_valid),
    .io_OUT_renameUop_3_bits_rd           (_scheduler_io_OUT_renameUop_3_bits_rd),
    .io_OUT_renameUop_3_bits_prd          (_scheduler_io_OUT_renameUop_3_bits_prd),
    .io_OUT_renameUop_3_bits_prs1         (_scheduler_io_OUT_renameUop_3_bits_prs1),
    .io_OUT_renameUop_3_bits_prs2         (_scheduler_io_OUT_renameUop_3_bits_prs2),
    .io_OUT_renameUop_3_bits_src1Type     (_scheduler_io_OUT_renameUop_3_bits_src1Type),
    .io_OUT_renameUop_3_bits_src2Type     (_scheduler_io_OUT_renameUop_3_bits_src2Type),
    .io_OUT_renameUop_3_bits_src1Ready    (_scheduler_io_OUT_renameUop_3_bits_src1Ready),
    .io_OUT_renameUop_3_bits_src2Ready    (_scheduler_io_OUT_renameUop_3_bits_src2Ready),
    .io_OUT_renameUop_3_bits_robPtr_flag
      (_scheduler_io_OUT_renameUop_3_bits_robPtr_flag),
    .io_OUT_renameUop_3_bits_robPtr_index
      (_scheduler_io_OUT_renameUop_3_bits_robPtr_index),
    .io_OUT_renameUop_3_bits_ldqPtr_flag
      (_scheduler_io_OUT_renameUop_3_bits_ldqPtr_flag),
    .io_OUT_renameUop_3_bits_ldqPtr_index
      (_scheduler_io_OUT_renameUop_3_bits_ldqPtr_index),
    .io_OUT_renameUop_3_bits_stqPtr_flag
      (_scheduler_io_OUT_renameUop_3_bits_stqPtr_flag),
    .io_OUT_renameUop_3_bits_stqPtr_index
      (_scheduler_io_OUT_renameUop_3_bits_stqPtr_index),
    .io_OUT_renameUop_3_bits_imm          (_scheduler_io_OUT_renameUop_3_bits_imm),
    .io_OUT_renameUop_3_bits_pc           (_scheduler_io_OUT_renameUop_3_bits_pc),
    .io_OUT_renameUop_3_bits_fuType       (_scheduler_io_OUT_renameUop_3_bits_fuType),
    .io_OUT_renameUop_3_bits_opcode       (_scheduler_io_OUT_renameUop_3_bits_opcode),
    .io_OUT_renameUop_3_bits_lockBackend
      (_scheduler_io_OUT_renameUop_3_bits_lockBackend),
    .io_OUT_renameUop_3_bits_predTarget   (_scheduler_io_OUT_renameUop_3_bits_predTarget),
    .io_OUT_renameUop_3_bits_compressed   (_scheduler_io_OUT_renameUop_3_bits_compressed),
    .io_OUT_renameUop_3_bits_lastBranch   (_scheduler_io_OUT_renameUop_3_bits_lastBranch),
    .io_OUT_renameUop_3_bits_rs1          (_scheduler_io_OUT_renameUop_3_bits_rs1),
    .io_OUT_renameUop_3_bits_rs2          (_scheduler_io_OUT_renameUop_3_bits_rs2),
    .io_OUT_renameUop_3_bits_inst         (_scheduler_io_OUT_renameUop_3_bits_inst)
  );
  wire         issueUop_0_ready /*verilator public_flat*/;
  wire         issueUop_0_valid /*verilator public_flat*/;
  wire [5:0]   issueUop_0_bits_prd /*verilator public_flat*/;
  wire [3:0]   issueUop_0_bits_fuType /*verilator public_flat*/;
  wire         issueUop_1_valid /*verilator public_flat*/;
  wire [5:0]   issueUop_1_bits_prd /*verilator public_flat*/;
  wire [3:0]   issueUop_1_bits_fuType /*verilator public_flat*/;
  wire         issueUop_2_valid /*verilator public_flat*/;
  wire [5:0]   issueUop_2_bits_prd /*verilator public_flat*/;
  wire [3:0]   issueUop_2_bits_fuType /*verilator public_flat*/;
  assign _iq_0_io_IN_stqBasePtr_flag = _storeQueue_io_OUT_stqBasePtr_flag;
  assign _iq_0_io_IN_stqBasePtr_index = _storeQueue_io_OUT_stqBasePtr_index;
  assign _iq_0_io_IN_flush = _flagHandler_io_OUT_flush;
  assign _iq_0_io_IN_idivBusy =
    _iq_1_io_OUT_issueUop_valid & _iq_3_io_IN_idivBusy_T | readRegUop_1_valid
    & _iq_3_io_IN_idivBusy_T_2 | _div_io_OUT_idivBusy;
  IssueQueue iq_0 (
    .clock                             (clock),
    .reset                             (reset),
    .io_IN_renameUop_ready             (_scheduler_io_OUT_renameUop_0_ready),
    .io_IN_renameUop_valid             (_scheduler_io_OUT_renameUop_0_valid),
    .io_IN_renameUop_bits_rd           (_scheduler_io_OUT_renameUop_0_bits_rd),
    .io_IN_renameUop_bits_prd          (_scheduler_io_OUT_renameUop_0_bits_prd),
    .io_IN_renameUop_bits_prs1         (_scheduler_io_OUT_renameUop_0_bits_prs1),
    .io_IN_renameUop_bits_prs2         (_scheduler_io_OUT_renameUop_0_bits_prs2),
    .io_IN_renameUop_bits_src1Type     (_scheduler_io_OUT_renameUop_0_bits_src1Type),
    .io_IN_renameUop_bits_src2Type     (_scheduler_io_OUT_renameUop_0_bits_src2Type),
    .io_IN_renameUop_bits_src1Ready    (_scheduler_io_OUT_renameUop_0_bits_src1Ready),
    .io_IN_renameUop_bits_src2Ready    (_scheduler_io_OUT_renameUop_0_bits_src2Ready),
    .io_IN_renameUop_bits_robPtr_flag  (_scheduler_io_OUT_renameUop_0_bits_robPtr_flag),
    .io_IN_renameUop_bits_robPtr_index (_scheduler_io_OUT_renameUop_0_bits_robPtr_index),
    .io_IN_renameUop_bits_ldqPtr_flag  (_scheduler_io_OUT_renameUop_0_bits_ldqPtr_flag),
    .io_IN_renameUop_bits_ldqPtr_index (_scheduler_io_OUT_renameUop_0_bits_ldqPtr_index),
    .io_IN_renameUop_bits_stqPtr_flag  (_scheduler_io_OUT_renameUop_0_bits_stqPtr_flag),
    .io_IN_renameUop_bits_stqPtr_index (_scheduler_io_OUT_renameUop_0_bits_stqPtr_index),
    .io_IN_renameUop_bits_imm          (_scheduler_io_OUT_renameUop_0_bits_imm),
    .io_IN_renameUop_bits_pc           (_scheduler_io_OUT_renameUop_0_bits_pc),
    .io_IN_renameUop_bits_fuType       (_scheduler_io_OUT_renameUop_0_bits_fuType),
    .io_IN_renameUop_bits_opcode       (_scheduler_io_OUT_renameUop_0_bits_opcode),
    .io_IN_renameUop_bits_lockBackend  (_scheduler_io_OUT_renameUop_0_bits_lockBackend),
    .io_IN_renameUop_bits_predTarget   (_scheduler_io_OUT_renameUop_0_bits_predTarget),
    .io_IN_renameUop_bits_compressed   (_scheduler_io_OUT_renameUop_0_bits_compressed),
    .io_IN_renameUop_bits_lastBranch   (_scheduler_io_OUT_renameUop_0_bits_lastBranch),
    .io_IN_renameUop_bits_rs1          (_scheduler_io_OUT_renameUop_0_bits_rs1),
    .io_IN_renameUop_bits_rs2          (_scheduler_io_OUT_renameUop_0_bits_rs2),
    .io_IN_renameUop_bits_inst         (_scheduler_io_OUT_renameUop_0_bits_inst),
    .io_IN_writebackUop_0_valid        (writebackUop_0_valid),
    .io_IN_writebackUop_0_bits_prd     (writebackUop_0_bits_prd),
    .io_IN_writebackUop_1_valid        (writebackUop_1_valid),
    .io_IN_writebackUop_1_bits_prd     (writebackUop_1_bits_prd),
    .io_IN_writebackUop_2_valid        (writebackUop_2_valid),
    .io_IN_writebackUop_2_bits_prd     (writebackUop_2_bits_prd),
    .io_IN_writebackUop_3_valid        (writebackUop_3_valid),
    .io_IN_writebackUop_3_bits_prd     (writebackUop_3_bits_prd),
    .io_IN_writebackUop_4_valid        (writebackUop_4_valid),
    .io_IN_writebackUop_4_bits_prd     (writebackUop_4_bits_prd),
    .io_IN_issueUops_0_valid           (issueUop_0_valid),
    .io_IN_issueUops_0_bits_prd        (issueUop_0_bits_prd),
    .io_IN_issueUops_0_bits_fuType     (issueUop_0_bits_fuType),
    .io_IN_issueUops_1_valid           (issueUop_1_valid),
    .io_IN_issueUops_1_bits_prd        (issueUop_1_bits_prd),
    .io_IN_issueUops_1_bits_fuType     (issueUop_1_bits_fuType),
    .io_IN_issueUops_2_valid           (issueUop_2_valid),
    .io_IN_issueUops_2_bits_prd        (issueUop_2_bits_prd),
    .io_IN_issueUops_2_bits_fuType     (issueUop_2_bits_fuType),
    .io_OUT_issueUop_ready             (issueUop_0_ready),
    .io_OUT_issueUop_valid             (issueUop_0_valid),
    .io_OUT_issueUop_bits_rd           (issueUop_0_bits_rd),
    .io_OUT_issueUop_bits_prd          (issueUop_0_bits_prd),
    .io_OUT_issueUop_bits_prs1         (issueUop_0_bits_prs1),
    .io_OUT_issueUop_bits_prs2         (issueUop_0_bits_prs2),
    .io_OUT_issueUop_bits_src1Type     (issueUop_0_bits_src1Type),
    .io_OUT_issueUop_bits_src2Type     (issueUop_0_bits_src2Type),
    .io_OUT_issueUop_bits_src1Ready    (issueUop_0_bits_src1Ready),
    .io_OUT_issueUop_bits_src2Ready    (issueUop_0_bits_src2Ready),
    .io_OUT_issueUop_bits_robPtr_flag  (issueUop_0_bits_robPtr_flag),
    .io_OUT_issueUop_bits_robPtr_index (issueUop_0_bits_robPtr_index),
    .io_OUT_issueUop_bits_ldqPtr_flag  (issueUop_0_bits_ldqPtr_flag),
    .io_OUT_issueUop_bits_ldqPtr_index (issueUop_0_bits_ldqPtr_index),
    .io_OUT_issueUop_bits_stqPtr_flag  (issueUop_0_bits_stqPtr_flag),
    .io_OUT_issueUop_bits_stqPtr_index (issueUop_0_bits_stqPtr_index),
    .io_OUT_issueUop_bits_imm          (issueUop_0_bits_imm),
    .io_OUT_issueUop_bits_pc           (issueUop_0_bits_pc),
    .io_OUT_issueUop_bits_fuType       (issueUop_0_bits_fuType),
    .io_OUT_issueUop_bits_opcode       (issueUop_0_bits_opcode),
    .io_OUT_issueUop_bits_lockBackend  (issueUop_0_bits_lockBackend),
    .io_OUT_issueUop_bits_predTarget   (issueUop_0_bits_predTarget),
    .io_OUT_issueUop_bits_compressed   (issueUop_0_bits_compressed),
    .io_OUT_issueUop_bits_lastBranch   (issueUop_0_bits_lastBranch),
    .io_OUT_issueUop_bits_rs1          (issueUop_0_bits_rs1),
    .io_OUT_issueUop_bits_rs2          (issueUop_0_bits_rs2),
    .io_OUT_issueUop_bits_inst         (issueUop_0_bits_inst),
    .io_IN_robTailPtr_index            (_rob_io_OUT_robTailPtr_index),
    .io_IN_stqBasePtr_flag             (_iq_0_io_IN_stqBasePtr_flag),
    .io_IN_stqBasePtr_index            (_iq_0_io_IN_stqBasePtr_index),
    .io_IN_flush                       (_iq_0_io_IN_flush),
    .io_IN_idivBusy                    (_iq_0_io_IN_idivBusy)
  );
  wire         issueUop_1_ready /*verilator public_flat*/;
  assign _iq_1_io_IN_stqBasePtr_flag = _storeQueue_io_OUT_stqBasePtr_flag;
  assign _iq_1_io_IN_stqBasePtr_index = _storeQueue_io_OUT_stqBasePtr_index;
  assign _iq_1_io_IN_flush = _flagHandler_io_OUT_flush;
  assign _iq_1_io_IN_idivBusy =
    _iq_1_io_OUT_issueUop_valid & _iq_3_io_IN_idivBusy_T | readRegUop_1_valid
    & _iq_3_io_IN_idivBusy_T_2 | _div_io_OUT_idivBusy;
  IssueQueue_1 iq_1 (
    .clock                             (clock),
    .reset                             (reset),
    .io_IN_renameUop_ready             (_scheduler_io_OUT_renameUop_1_ready),
    .io_IN_renameUop_valid             (_scheduler_io_OUT_renameUop_1_valid),
    .io_IN_renameUop_bits_rd           (_scheduler_io_OUT_renameUop_1_bits_rd),
    .io_IN_renameUop_bits_prd          (_scheduler_io_OUT_renameUop_1_bits_prd),
    .io_IN_renameUop_bits_prs1         (_scheduler_io_OUT_renameUop_1_bits_prs1),
    .io_IN_renameUop_bits_prs2         (_scheduler_io_OUT_renameUop_1_bits_prs2),
    .io_IN_renameUop_bits_src1Type     (_scheduler_io_OUT_renameUop_1_bits_src1Type),
    .io_IN_renameUop_bits_src2Type     (_scheduler_io_OUT_renameUop_1_bits_src2Type),
    .io_IN_renameUop_bits_src1Ready    (_scheduler_io_OUT_renameUop_1_bits_src1Ready),
    .io_IN_renameUop_bits_src2Ready    (_scheduler_io_OUT_renameUop_1_bits_src2Ready),
    .io_IN_renameUop_bits_robPtr_flag  (_scheduler_io_OUT_renameUop_1_bits_robPtr_flag),
    .io_IN_renameUop_bits_robPtr_index (_scheduler_io_OUT_renameUop_1_bits_robPtr_index),
    .io_IN_renameUop_bits_ldqPtr_flag  (_scheduler_io_OUT_renameUop_1_bits_ldqPtr_flag),
    .io_IN_renameUop_bits_ldqPtr_index (_scheduler_io_OUT_renameUop_1_bits_ldqPtr_index),
    .io_IN_renameUop_bits_stqPtr_flag  (_scheduler_io_OUT_renameUop_1_bits_stqPtr_flag),
    .io_IN_renameUop_bits_stqPtr_index (_scheduler_io_OUT_renameUop_1_bits_stqPtr_index),
    .io_IN_renameUop_bits_imm          (_scheduler_io_OUT_renameUop_1_bits_imm),
    .io_IN_renameUop_bits_pc           (_scheduler_io_OUT_renameUop_1_bits_pc),
    .io_IN_renameUop_bits_fuType       (_scheduler_io_OUT_renameUop_1_bits_fuType),
    .io_IN_renameUop_bits_opcode       (_scheduler_io_OUT_renameUop_1_bits_opcode),
    .io_IN_renameUop_bits_lockBackend  (_scheduler_io_OUT_renameUop_1_bits_lockBackend),
    .io_IN_renameUop_bits_predTarget   (_scheduler_io_OUT_renameUop_1_bits_predTarget),
    .io_IN_renameUop_bits_compressed   (_scheduler_io_OUT_renameUop_1_bits_compressed),
    .io_IN_renameUop_bits_lastBranch   (_scheduler_io_OUT_renameUop_1_bits_lastBranch),
    .io_IN_renameUop_bits_rs1          (_scheduler_io_OUT_renameUop_1_bits_rs1),
    .io_IN_renameUop_bits_rs2          (_scheduler_io_OUT_renameUop_1_bits_rs2),
    .io_IN_renameUop_bits_inst         (_scheduler_io_OUT_renameUop_1_bits_inst),
    .io_IN_writebackUop_0_valid        (writebackUop_0_valid),
    .io_IN_writebackUop_0_bits_prd     (writebackUop_0_bits_prd),
    .io_IN_writebackUop_1_valid        (writebackUop_1_valid),
    .io_IN_writebackUop_1_bits_prd     (writebackUop_1_bits_prd),
    .io_IN_writebackUop_2_valid        (writebackUop_2_valid),
    .io_IN_writebackUop_2_bits_prd     (writebackUop_2_bits_prd),
    .io_IN_writebackUop_3_valid        (writebackUop_3_valid),
    .io_IN_writebackUop_3_bits_prd     (writebackUop_3_bits_prd),
    .io_IN_writebackUop_4_valid        (writebackUop_4_valid),
    .io_IN_writebackUop_4_bits_prd     (writebackUop_4_bits_prd),
    .io_IN_issueUops_0_valid           (issueUop_0_valid),
    .io_IN_issueUops_0_bits_prd        (issueUop_0_bits_prd),
    .io_IN_issueUops_0_bits_fuType     (issueUop_0_bits_fuType),
    .io_IN_issueUops_1_valid           (issueUop_1_valid),
    .io_IN_issueUops_1_bits_prd        (issueUop_1_bits_prd),
    .io_IN_issueUops_1_bits_fuType     (issueUop_1_bits_fuType),
    .io_IN_issueUops_2_valid           (issueUop_2_valid),
    .io_IN_issueUops_2_bits_prd        (issueUop_2_bits_prd),
    .io_IN_issueUops_2_bits_fuType     (issueUop_2_bits_fuType),
    .io_OUT_issueUop_ready             (issueUop_1_ready),
    .io_OUT_issueUop_valid             (_iq_1_io_OUT_issueUop_valid),
    .io_OUT_issueUop_bits_rd           (issueUop_1_bits_rd),
    .io_OUT_issueUop_bits_prd          (issueUop_1_bits_prd),
    .io_OUT_issueUop_bits_prs1         (issueUop_1_bits_prs1),
    .io_OUT_issueUop_bits_prs2         (issueUop_1_bits_prs2),
    .io_OUT_issueUop_bits_src1Type     (issueUop_1_bits_src1Type),
    .io_OUT_issueUop_bits_src2Type     (issueUop_1_bits_src2Type),
    .io_OUT_issueUop_bits_src1Ready    (issueUop_1_bits_src1Ready),
    .io_OUT_issueUop_bits_src2Ready    (issueUop_1_bits_src2Ready),
    .io_OUT_issueUop_bits_robPtr_flag  (issueUop_1_bits_robPtr_flag),
    .io_OUT_issueUop_bits_robPtr_index (issueUop_1_bits_robPtr_index),
    .io_OUT_issueUop_bits_ldqPtr_flag  (issueUop_1_bits_ldqPtr_flag),
    .io_OUT_issueUop_bits_ldqPtr_index (issueUop_1_bits_ldqPtr_index),
    .io_OUT_issueUop_bits_stqPtr_flag  (issueUop_1_bits_stqPtr_flag),
    .io_OUT_issueUop_bits_stqPtr_index (issueUop_1_bits_stqPtr_index),
    .io_OUT_issueUop_bits_imm          (issueUop_1_bits_imm),
    .io_OUT_issueUop_bits_pc           (issueUop_1_bits_pc),
    .io_OUT_issueUop_bits_fuType       (_iq_1_io_OUT_issueUop_bits_fuType),
    .io_OUT_issueUop_bits_opcode       (issueUop_1_bits_opcode),
    .io_OUT_issueUop_bits_lockBackend  (issueUop_1_bits_lockBackend),
    .io_OUT_issueUop_bits_predTarget   (issueUop_1_bits_predTarget),
    .io_OUT_issueUop_bits_compressed   (issueUop_1_bits_compressed),
    .io_OUT_issueUop_bits_lastBranch   (issueUop_1_bits_lastBranch),
    .io_OUT_issueUop_bits_rs1          (issueUop_1_bits_rs1),
    .io_OUT_issueUop_bits_rs2          (issueUop_1_bits_rs2),
    .io_OUT_issueUop_bits_inst         (issueUop_1_bits_inst),
    .io_IN_stqBasePtr_flag             (_iq_1_io_IN_stqBasePtr_flag),
    .io_IN_stqBasePtr_index            (_iq_1_io_IN_stqBasePtr_index),
    .io_IN_flush                       (_iq_1_io_IN_flush),
    .io_IN_idivBusy                    (_iq_1_io_IN_idivBusy)
  );
  assign issueUop_1_valid = _iq_1_io_OUT_issueUop_valid;
  assign issueUop_1_bits_fuType = _iq_1_io_OUT_issueUop_bits_fuType;
  wire         issueUop_2_ready /*verilator public_flat*/;
  assign _iq_2_io_IN_stqBasePtr_flag = _storeQueue_io_OUT_stqBasePtr_flag;
  assign _iq_2_io_IN_stqBasePtr_index = _storeQueue_io_OUT_stqBasePtr_index;
  assign _iq_2_io_IN_flush = _flagHandler_io_OUT_flush;
  assign _iq_2_io_IN_idivBusy =
    _iq_1_io_OUT_issueUop_valid & _iq_3_io_IN_idivBusy_T | readRegUop_1_valid
    & _iq_3_io_IN_idivBusy_T_2 | _div_io_OUT_idivBusy;
  IssueQueue_1 iq_2 (
    .clock                             (clock),
    .reset                             (reset),
    .io_IN_renameUop_ready             (_scheduler_io_OUT_renameUop_2_ready),
    .io_IN_renameUop_valid             (_scheduler_io_OUT_renameUop_2_valid),
    .io_IN_renameUop_bits_rd           (_scheduler_io_OUT_renameUop_2_bits_rd),
    .io_IN_renameUop_bits_prd          (_scheduler_io_OUT_renameUop_2_bits_prd),
    .io_IN_renameUop_bits_prs1         (_scheduler_io_OUT_renameUop_2_bits_prs1),
    .io_IN_renameUop_bits_prs2         (_scheduler_io_OUT_renameUop_2_bits_prs2),
    .io_IN_renameUop_bits_src1Type     (_scheduler_io_OUT_renameUop_2_bits_src1Type),
    .io_IN_renameUop_bits_src2Type     (_scheduler_io_OUT_renameUop_2_bits_src2Type),
    .io_IN_renameUop_bits_src1Ready    (_scheduler_io_OUT_renameUop_2_bits_src1Ready),
    .io_IN_renameUop_bits_src2Ready    (_scheduler_io_OUT_renameUop_2_bits_src2Ready),
    .io_IN_renameUop_bits_robPtr_flag  (_scheduler_io_OUT_renameUop_2_bits_robPtr_flag),
    .io_IN_renameUop_bits_robPtr_index (_scheduler_io_OUT_renameUop_2_bits_robPtr_index),
    .io_IN_renameUop_bits_ldqPtr_flag  (_scheduler_io_OUT_renameUop_2_bits_ldqPtr_flag),
    .io_IN_renameUop_bits_ldqPtr_index (_scheduler_io_OUT_renameUop_2_bits_ldqPtr_index),
    .io_IN_renameUop_bits_stqPtr_flag  (_scheduler_io_OUT_renameUop_2_bits_stqPtr_flag),
    .io_IN_renameUop_bits_stqPtr_index (_scheduler_io_OUT_renameUop_2_bits_stqPtr_index),
    .io_IN_renameUop_bits_imm          (_scheduler_io_OUT_renameUop_2_bits_imm),
    .io_IN_renameUop_bits_pc           (_scheduler_io_OUT_renameUop_2_bits_pc),
    .io_IN_renameUop_bits_fuType       (_scheduler_io_OUT_renameUop_2_bits_fuType),
    .io_IN_renameUop_bits_opcode       (_scheduler_io_OUT_renameUop_2_bits_opcode),
    .io_IN_renameUop_bits_lockBackend  (_scheduler_io_OUT_renameUop_2_bits_lockBackend),
    .io_IN_renameUop_bits_predTarget   (_scheduler_io_OUT_renameUop_2_bits_predTarget),
    .io_IN_renameUop_bits_compressed   (_scheduler_io_OUT_renameUop_2_bits_compressed),
    .io_IN_renameUop_bits_lastBranch   (_scheduler_io_OUT_renameUop_2_bits_lastBranch),
    .io_IN_renameUop_bits_rs1          (_scheduler_io_OUT_renameUop_2_bits_rs1),
    .io_IN_renameUop_bits_rs2          (_scheduler_io_OUT_renameUop_2_bits_rs2),
    .io_IN_renameUop_bits_inst         (_scheduler_io_OUT_renameUop_2_bits_inst),
    .io_IN_writebackUop_0_valid        (writebackUop_0_valid),
    .io_IN_writebackUop_0_bits_prd     (writebackUop_0_bits_prd),
    .io_IN_writebackUop_1_valid        (writebackUop_1_valid),
    .io_IN_writebackUop_1_bits_prd     (writebackUop_1_bits_prd),
    .io_IN_writebackUop_2_valid        (writebackUop_2_valid),
    .io_IN_writebackUop_2_bits_prd     (writebackUop_2_bits_prd),
    .io_IN_writebackUop_3_valid        (writebackUop_3_valid),
    .io_IN_writebackUop_3_bits_prd     (writebackUop_3_bits_prd),
    .io_IN_writebackUop_4_valid        (writebackUop_4_valid),
    .io_IN_writebackUop_4_bits_prd     (writebackUop_4_bits_prd),
    .io_IN_issueUops_0_valid           (issueUop_0_valid),
    .io_IN_issueUops_0_bits_prd        (issueUop_0_bits_prd),
    .io_IN_issueUops_0_bits_fuType     (issueUop_0_bits_fuType),
    .io_IN_issueUops_1_valid           (issueUop_1_valid),
    .io_IN_issueUops_1_bits_prd        (issueUop_1_bits_prd),
    .io_IN_issueUops_1_bits_fuType     (issueUop_1_bits_fuType),
    .io_IN_issueUops_2_valid           (issueUop_2_valid),
    .io_IN_issueUops_2_bits_prd        (issueUop_2_bits_prd),
    .io_IN_issueUops_2_bits_fuType     (issueUop_2_bits_fuType),
    .io_OUT_issueUop_ready             (issueUop_2_ready),
    .io_OUT_issueUop_valid             (issueUop_2_valid),
    .io_OUT_issueUop_bits_rd           (issueUop_2_bits_rd),
    .io_OUT_issueUop_bits_prd          (issueUop_2_bits_prd),
    .io_OUT_issueUop_bits_prs1         (issueUop_2_bits_prs1),
    .io_OUT_issueUop_bits_prs2         (issueUop_2_bits_prs2),
    .io_OUT_issueUop_bits_src1Type     (issueUop_2_bits_src1Type),
    .io_OUT_issueUop_bits_src2Type     (issueUop_2_bits_src2Type),
    .io_OUT_issueUop_bits_src1Ready    (issueUop_2_bits_src1Ready),
    .io_OUT_issueUop_bits_src2Ready    (issueUop_2_bits_src2Ready),
    .io_OUT_issueUop_bits_robPtr_flag  (issueUop_2_bits_robPtr_flag),
    .io_OUT_issueUop_bits_robPtr_index (issueUop_2_bits_robPtr_index),
    .io_OUT_issueUop_bits_ldqPtr_flag  (issueUop_2_bits_ldqPtr_flag),
    .io_OUT_issueUop_bits_ldqPtr_index (issueUop_2_bits_ldqPtr_index),
    .io_OUT_issueUop_bits_stqPtr_flag  (issueUop_2_bits_stqPtr_flag),
    .io_OUT_issueUop_bits_stqPtr_index (issueUop_2_bits_stqPtr_index),
    .io_OUT_issueUop_bits_imm          (issueUop_2_bits_imm),
    .io_OUT_issueUop_bits_pc           (issueUop_2_bits_pc),
    .io_OUT_issueUop_bits_fuType       (issueUop_2_bits_fuType),
    .io_OUT_issueUop_bits_opcode       (issueUop_2_bits_opcode),
    .io_OUT_issueUop_bits_lockBackend  (issueUop_2_bits_lockBackend),
    .io_OUT_issueUop_bits_predTarget   (issueUop_2_bits_predTarget),
    .io_OUT_issueUop_bits_compressed   (issueUop_2_bits_compressed),
    .io_OUT_issueUop_bits_lastBranch   (issueUop_2_bits_lastBranch),
    .io_OUT_issueUop_bits_rs1          (issueUop_2_bits_rs1),
    .io_OUT_issueUop_bits_rs2          (issueUop_2_bits_rs2),
    .io_OUT_issueUop_bits_inst         (issueUop_2_bits_inst),
    .io_IN_stqBasePtr_flag             (_iq_2_io_IN_stqBasePtr_flag),
    .io_IN_stqBasePtr_index            (_iq_2_io_IN_stqBasePtr_index),
    .io_IN_flush                       (_iq_2_io_IN_flush),
    .io_IN_idivBusy                    (_iq_2_io_IN_idivBusy)
  );
  wire         issueUop_3_ready /*verilator public_flat*/;
  assign _iq_3_io_IN_stqBasePtr_flag = _storeQueue_io_OUT_stqBasePtr_flag;
  assign _iq_3_io_IN_stqBasePtr_index = _storeQueue_io_OUT_stqBasePtr_index;
  assign _iq_3_io_IN_flush = _flagHandler_io_OUT_flush;
  assign _iq_3_io_IN_idivBusy =
    _iq_1_io_OUT_issueUop_valid & _iq_3_io_IN_idivBusy_T | readRegUop_1_valid
    & _iq_3_io_IN_idivBusy_T_2 | _div_io_OUT_idivBusy;
  IssueQueue_3 iq_3 (
    .clock                             (clock),
    .reset                             (reset),
    .io_IN_renameUop_ready             (_scheduler_io_OUT_renameUop_3_ready),
    .io_IN_renameUop_valid             (_scheduler_io_OUT_renameUop_3_valid),
    .io_IN_renameUop_bits_rd           (_scheduler_io_OUT_renameUop_3_bits_rd),
    .io_IN_renameUop_bits_prd          (_scheduler_io_OUT_renameUop_3_bits_prd),
    .io_IN_renameUop_bits_prs1         (_scheduler_io_OUT_renameUop_3_bits_prs1),
    .io_IN_renameUop_bits_prs2         (_scheduler_io_OUT_renameUop_3_bits_prs2),
    .io_IN_renameUop_bits_src1Type     (_scheduler_io_OUT_renameUop_3_bits_src1Type),
    .io_IN_renameUop_bits_src2Type     (_scheduler_io_OUT_renameUop_3_bits_src2Type),
    .io_IN_renameUop_bits_src1Ready    (_scheduler_io_OUT_renameUop_3_bits_src1Ready),
    .io_IN_renameUop_bits_src2Ready    (_scheduler_io_OUT_renameUop_3_bits_src2Ready),
    .io_IN_renameUop_bits_robPtr_flag  (_scheduler_io_OUT_renameUop_3_bits_robPtr_flag),
    .io_IN_renameUop_bits_robPtr_index (_scheduler_io_OUT_renameUop_3_bits_robPtr_index),
    .io_IN_renameUop_bits_ldqPtr_flag  (_scheduler_io_OUT_renameUop_3_bits_ldqPtr_flag),
    .io_IN_renameUop_bits_ldqPtr_index (_scheduler_io_OUT_renameUop_3_bits_ldqPtr_index),
    .io_IN_renameUop_bits_stqPtr_flag  (_scheduler_io_OUT_renameUop_3_bits_stqPtr_flag),
    .io_IN_renameUop_bits_stqPtr_index (_scheduler_io_OUT_renameUop_3_bits_stqPtr_index),
    .io_IN_renameUop_bits_imm          (_scheduler_io_OUT_renameUop_3_bits_imm),
    .io_IN_renameUop_bits_pc           (_scheduler_io_OUT_renameUop_3_bits_pc),
    .io_IN_renameUop_bits_fuType       (_scheduler_io_OUT_renameUop_3_bits_fuType),
    .io_IN_renameUop_bits_opcode       (_scheduler_io_OUT_renameUop_3_bits_opcode),
    .io_IN_renameUop_bits_lockBackend  (_scheduler_io_OUT_renameUop_3_bits_lockBackend),
    .io_IN_renameUop_bits_predTarget   (_scheduler_io_OUT_renameUop_3_bits_predTarget),
    .io_IN_renameUop_bits_compressed   (_scheduler_io_OUT_renameUop_3_bits_compressed),
    .io_IN_renameUop_bits_lastBranch   (_scheduler_io_OUT_renameUop_3_bits_lastBranch),
    .io_IN_renameUop_bits_rs1          (_scheduler_io_OUT_renameUop_3_bits_rs1),
    .io_IN_renameUop_bits_rs2          (_scheduler_io_OUT_renameUop_3_bits_rs2),
    .io_IN_renameUop_bits_inst         (_scheduler_io_OUT_renameUop_3_bits_inst),
    .io_IN_writebackUop_0_valid        (writebackUop_0_valid),
    .io_IN_writebackUop_0_bits_prd     (writebackUop_0_bits_prd),
    .io_IN_writebackUop_1_valid        (writebackUop_1_valid),
    .io_IN_writebackUop_1_bits_prd     (writebackUop_1_bits_prd),
    .io_IN_writebackUop_2_valid        (writebackUop_2_valid),
    .io_IN_writebackUop_2_bits_prd     (writebackUop_2_bits_prd),
    .io_IN_writebackUop_3_valid        (writebackUop_3_valid),
    .io_IN_writebackUop_3_bits_prd     (writebackUop_3_bits_prd),
    .io_IN_writebackUop_4_valid        (writebackUop_4_valid),
    .io_IN_writebackUop_4_bits_prd     (writebackUop_4_bits_prd),
    .io_IN_issueUops_0_valid           (issueUop_0_valid),
    .io_IN_issueUops_0_bits_prd        (issueUop_0_bits_prd),
    .io_IN_issueUops_0_bits_fuType     (issueUop_0_bits_fuType),
    .io_IN_issueUops_1_valid           (issueUop_1_valid),
    .io_IN_issueUops_1_bits_prd        (issueUop_1_bits_prd),
    .io_IN_issueUops_1_bits_fuType     (issueUop_1_bits_fuType),
    .io_IN_issueUops_2_valid           (issueUop_2_valid),
    .io_IN_issueUops_2_bits_prd        (issueUop_2_bits_prd),
    .io_IN_issueUops_2_bits_fuType     (issueUop_2_bits_fuType),
    .io_OUT_issueUop_ready             (issueUop_3_ready),
    .io_OUT_issueUop_valid             (issueUop_3_valid),
    .io_OUT_issueUop_bits_rd           (issueUop_3_bits_rd),
    .io_OUT_issueUop_bits_prd          (issueUop_3_bits_prd),
    .io_OUT_issueUop_bits_prs1         (issueUop_3_bits_prs1),
    .io_OUT_issueUop_bits_prs2         (issueUop_3_bits_prs2),
    .io_OUT_issueUop_bits_src1Type     (issueUop_3_bits_src1Type),
    .io_OUT_issueUop_bits_src2Type     (issueUop_3_bits_src2Type),
    .io_OUT_issueUop_bits_src1Ready    (issueUop_3_bits_src1Ready),
    .io_OUT_issueUop_bits_src2Ready    (issueUop_3_bits_src2Ready),
    .io_OUT_issueUop_bits_robPtr_flag  (issueUop_3_bits_robPtr_flag),
    .io_OUT_issueUop_bits_robPtr_index (issueUop_3_bits_robPtr_index),
    .io_OUT_issueUop_bits_ldqPtr_flag  (issueUop_3_bits_ldqPtr_flag),
    .io_OUT_issueUop_bits_ldqPtr_index (issueUop_3_bits_ldqPtr_index),
    .io_OUT_issueUop_bits_stqPtr_flag  (issueUop_3_bits_stqPtr_flag),
    .io_OUT_issueUop_bits_stqPtr_index (issueUop_3_bits_stqPtr_index),
    .io_OUT_issueUop_bits_imm          (issueUop_3_bits_imm),
    .io_OUT_issueUop_bits_pc           (issueUop_3_bits_pc),
    .io_OUT_issueUop_bits_fuType       (issueUop_3_bits_fuType),
    .io_OUT_issueUop_bits_opcode       (issueUop_3_bits_opcode),
    .io_OUT_issueUop_bits_lockBackend  (issueUop_3_bits_lockBackend),
    .io_OUT_issueUop_bits_predTarget   (issueUop_3_bits_predTarget),
    .io_OUT_issueUop_bits_compressed   (issueUop_3_bits_compressed),
    .io_OUT_issueUop_bits_lastBranch   (issueUop_3_bits_lastBranch),
    .io_OUT_issueUop_bits_rs1          (issueUop_3_bits_rs1),
    .io_OUT_issueUop_bits_rs2          (issueUop_3_bits_rs2),
    .io_OUT_issueUop_bits_inst         (issueUop_3_bits_inst),
    .io_IN_stqBasePtr_flag             (_iq_3_io_IN_stqBasePtr_flag),
    .io_IN_stqBasePtr_index            (_iq_3_io_IN_stqBasePtr_index),
    .io_IN_ldqBasePtr_flag             (_rob_io_OUT_ldqTailPtr_flag),
    .io_IN_ldqBasePtr_index            (_rob_io_OUT_ldqTailPtr_index),
    .io_IN_flush                       (_iq_3_io_IN_flush),
    .io_IN_idivBusy                    (_iq_3_io_IN_idivBusy)
  );
  wire         readRegUop_0_valid /*verilator public_flat*/;
  wire [5:0]   readRegUop_0_bits_prd /*verilator public_flat*/;
  wire [31:0]  readRegUop_0_bits_src1 /*verilator public_flat*/;
  wire [31:0]  readRegUop_0_bits_src2 /*verilator public_flat*/;
  wire         readRegUop_0_bits_robPtr_flag /*verilator public_flat*/;
  wire [4:0]   readRegUop_0_bits_robPtr_index /*verilator public_flat*/;
  wire [31:0]  readRegUop_0_bits_imm /*verilator public_flat*/;
  wire [31:0]  readRegUop_0_bits_pc /*verilator public_flat*/;
  wire [3:0]   readRegUop_0_bits_fuType /*verilator public_flat*/;
  wire [3:0]   readRegUop_0_bits_opcode /*verilator public_flat*/;
  Dispatcher dispatcher_0 (
    .io_IN_uop_valid                (readRegUop_0_valid),
    .io_IN_uop_bits_prd             (readRegUop_0_bits_prd),
    .io_IN_uop_bits_src1            (readRegUop_0_bits_src1),
    .io_IN_uop_bits_src2            (readRegUop_0_bits_src2),
    .io_IN_uop_bits_robPtr_flag     (readRegUop_0_bits_robPtr_flag),
    .io_IN_uop_bits_robPtr_index    (readRegUop_0_bits_robPtr_index),
    .io_IN_uop_bits_imm             (readRegUop_0_bits_imm),
    .io_IN_uop_bits_pc              (readRegUop_0_bits_pc),
    .io_IN_uop_bits_fuType          (readRegUop_0_bits_fuType),
    .io_IN_uop_bits_opcode          (readRegUop_0_bits_opcode),
    .io_OUT_uop_0_valid             (_dispatcher_0_io_OUT_uop_0_valid),
    .io_OUT_uop_0_bits_prd          (_dispatcher_0_io_OUT_uop_0_bits_prd),
    .io_OUT_uop_0_bits_src1         (_dispatcher_0_io_OUT_uop_0_bits_src1),
    .io_OUT_uop_0_bits_src2         (_dispatcher_0_io_OUT_uop_0_bits_src2),
    .io_OUT_uop_0_bits_robPtr_flag  (_dispatcher_0_io_OUT_uop_0_bits_robPtr_flag),
    .io_OUT_uop_0_bits_robPtr_index (_dispatcher_0_io_OUT_uop_0_bits_robPtr_index),
    .io_OUT_uop_0_bits_opcode       (_dispatcher_0_io_OUT_uop_0_bits_opcode),
    .io_OUT_uop_1_valid             (_dispatcher_0_io_OUT_uop_1_valid),
    .io_OUT_uop_1_bits_prd          (_dispatcher_0_io_OUT_uop_1_bits_prd),
    .io_OUT_uop_1_bits_src1         (_dispatcher_0_io_OUT_uop_1_bits_src1),
    .io_OUT_uop_1_bits_src2         (_dispatcher_0_io_OUT_uop_1_bits_src2),
    .io_OUT_uop_1_bits_robPtr_flag  (_dispatcher_0_io_OUT_uop_1_bits_robPtr_flag),
    .io_OUT_uop_1_bits_robPtr_index (_dispatcher_0_io_OUT_uop_1_bits_robPtr_index),
    .io_OUT_uop_1_bits_opcode       (_dispatcher_0_io_OUT_uop_1_bits_opcode),
    .io_OUT_uop_2_valid             (_dispatcher_0_io_OUT_uop_2_valid),
    .io_OUT_uop_2_bits_prd          (_dispatcher_0_io_OUT_uop_2_bits_prd),
    .io_OUT_uop_2_bits_src1         (_dispatcher_0_io_OUT_uop_2_bits_src1),
    .io_OUT_uop_2_bits_robPtr_flag  (_dispatcher_0_io_OUT_uop_2_bits_robPtr_flag),
    .io_OUT_uop_2_bits_robPtr_index (_dispatcher_0_io_OUT_uop_2_bits_robPtr_index),
    .io_OUT_uop_2_bits_imm          (_dispatcher_0_io_OUT_uop_2_bits_imm),
    .io_OUT_uop_2_bits_pc           (_dispatcher_0_io_OUT_uop_2_bits_pc),
    .io_OUT_uop_2_bits_opcode       (_dispatcher_0_io_OUT_uop_2_bits_opcode)
  );
  wire [5:0]   readRegUop_1_bits_prd /*verilator public_flat*/;
  wire [31:0]  readRegUop_1_bits_src1 /*verilator public_flat*/;
  wire [31:0]  readRegUop_1_bits_src2 /*verilator public_flat*/;
  wire         readRegUop_1_bits_robPtr_flag /*verilator public_flat*/;
  wire [4:0]   readRegUop_1_bits_robPtr_index /*verilator public_flat*/;
  wire [3:0]   readRegUop_1_bits_opcode /*verilator public_flat*/;
  Dispatcher_1 dispatcher_1 (
    .io_IN_uop_ready                (readRegUop_1_ready),
    .io_IN_uop_valid                (readRegUop_1_valid),
    .io_IN_uop_bits_prd             (readRegUop_1_bits_prd),
    .io_IN_uop_bits_src1            (readRegUop_1_bits_src1),
    .io_IN_uop_bits_src2            (readRegUop_1_bits_src2),
    .io_IN_uop_bits_robPtr_flag     (readRegUop_1_bits_robPtr_flag),
    .io_IN_uop_bits_robPtr_index    (readRegUop_1_bits_robPtr_index),
    .io_IN_uop_bits_fuType          (readRegUop_1_bits_fuType),
    .io_IN_uop_bits_opcode          (readRegUop_1_bits_opcode),
    .io_OUT_uop_0_valid             (_dispatcher_1_io_OUT_uop_0_valid),
    .io_OUT_uop_0_bits_prd          (_dispatcher_1_io_OUT_uop_0_bits_prd),
    .io_OUT_uop_0_bits_src1         (_dispatcher_1_io_OUT_uop_0_bits_src1),
    .io_OUT_uop_0_bits_src2         (_dispatcher_1_io_OUT_uop_0_bits_src2),
    .io_OUT_uop_0_bits_robPtr_flag  (_dispatcher_1_io_OUT_uop_0_bits_robPtr_flag),
    .io_OUT_uop_0_bits_robPtr_index (_dispatcher_1_io_OUT_uop_0_bits_robPtr_index),
    .io_OUT_uop_0_bits_opcode       (_dispatcher_1_io_OUT_uop_0_bits_opcode),
    .io_OUT_uop_1_ready             (_dispatcher_1_io_OUT_uop_1_ready),
    .io_OUT_uop_1_valid             (_dispatcher_1_io_OUT_uop_1_valid),
    .io_OUT_uop_1_bits_prd          (_dispatcher_1_io_OUT_uop_1_bits_prd),
    .io_OUT_uop_1_bits_src1         (_dispatcher_1_io_OUT_uop_1_bits_src1),
    .io_OUT_uop_1_bits_src2         (_dispatcher_1_io_OUT_uop_1_bits_src2),
    .io_OUT_uop_1_bits_robPtr_flag  (_dispatcher_1_io_OUT_uop_1_bits_robPtr_flag),
    .io_OUT_uop_1_bits_robPtr_index (_dispatcher_1_io_OUT_uop_1_bits_robPtr_index),
    .io_OUT_uop_1_bits_opcode       (_dispatcher_1_io_OUT_uop_1_bits_opcode)
  );
  wire         readRegUop_3_ready /*verilator public_flat*/;
  assign _readReg_io_IN_flush = _flagHandler_io_OUT_flush;
  ReadReg readReg (
    .clock                                 (clock),
    .reset                                 (reset),
    .io_IN_issueUop_0_ready                (issueUop_0_ready),
    .io_IN_issueUop_0_valid                (issueUop_0_valid),
    .io_IN_issueUop_0_bits_rd              (issueUop_0_bits_rd),
    .io_IN_issueUop_0_bits_prd             (issueUop_0_bits_prd),
    .io_IN_issueUop_0_bits_prs1            (issueUop_0_bits_prs1),
    .io_IN_issueUop_0_bits_prs2            (issueUop_0_bits_prs2),
    .io_IN_issueUop_0_bits_src1Type        (issueUop_0_bits_src1Type),
    .io_IN_issueUop_0_bits_src2Type        (issueUop_0_bits_src2Type),
    .io_IN_issueUop_0_bits_robPtr_flag     (issueUop_0_bits_robPtr_flag),
    .io_IN_issueUop_0_bits_robPtr_index    (issueUop_0_bits_robPtr_index),
    .io_IN_issueUop_0_bits_ldqPtr_flag     (issueUop_0_bits_ldqPtr_flag),
    .io_IN_issueUop_0_bits_ldqPtr_index    (issueUop_0_bits_ldqPtr_index),
    .io_IN_issueUop_0_bits_stqPtr_flag     (issueUop_0_bits_stqPtr_flag),
    .io_IN_issueUop_0_bits_stqPtr_index    (issueUop_0_bits_stqPtr_index),
    .io_IN_issueUop_0_bits_imm             (issueUop_0_bits_imm),
    .io_IN_issueUop_0_bits_pc              (issueUop_0_bits_pc),
    .io_IN_issueUop_0_bits_fuType          (issueUop_0_bits_fuType),
    .io_IN_issueUop_0_bits_opcode          (issueUop_0_bits_opcode),
    .io_IN_issueUop_0_bits_predTarget      (issueUop_0_bits_predTarget),
    .io_IN_issueUop_0_bits_compressed      (issueUop_0_bits_compressed),
    .io_IN_issueUop_0_bits_rs1             (issueUop_0_bits_rs1),
    .io_IN_issueUop_0_bits_rs2             (issueUop_0_bits_rs2),
    .io_IN_issueUop_1_ready                (issueUop_1_ready),
    .io_IN_issueUop_1_valid                (issueUop_1_valid),
    .io_IN_issueUop_1_bits_rd              (issueUop_1_bits_rd),
    .io_IN_issueUop_1_bits_prd             (issueUop_1_bits_prd),
    .io_IN_issueUop_1_bits_prs1            (issueUop_1_bits_prs1),
    .io_IN_issueUop_1_bits_prs2            (issueUop_1_bits_prs2),
    .io_IN_issueUop_1_bits_src1Type        (issueUop_1_bits_src1Type),
    .io_IN_issueUop_1_bits_src2Type        (issueUop_1_bits_src2Type),
    .io_IN_issueUop_1_bits_robPtr_flag     (issueUop_1_bits_robPtr_flag),
    .io_IN_issueUop_1_bits_robPtr_index    (issueUop_1_bits_robPtr_index),
    .io_IN_issueUop_1_bits_ldqPtr_flag     (issueUop_1_bits_ldqPtr_flag),
    .io_IN_issueUop_1_bits_ldqPtr_index    (issueUop_1_bits_ldqPtr_index),
    .io_IN_issueUop_1_bits_stqPtr_flag     (issueUop_1_bits_stqPtr_flag),
    .io_IN_issueUop_1_bits_stqPtr_index    (issueUop_1_bits_stqPtr_index),
    .io_IN_issueUop_1_bits_imm             (issueUop_1_bits_imm),
    .io_IN_issueUop_1_bits_pc              (issueUop_1_bits_pc),
    .io_IN_issueUop_1_bits_fuType          (issueUop_1_bits_fuType),
    .io_IN_issueUop_1_bits_opcode          (issueUop_1_bits_opcode),
    .io_IN_issueUop_1_bits_predTarget      (issueUop_1_bits_predTarget),
    .io_IN_issueUop_1_bits_compressed      (issueUop_1_bits_compressed),
    .io_IN_issueUop_1_bits_rs1             (issueUop_1_bits_rs1),
    .io_IN_issueUop_1_bits_rs2             (issueUop_1_bits_rs2),
    .io_IN_issueUop_2_ready                (issueUop_2_ready),
    .io_IN_issueUop_2_valid                (issueUop_2_valid),
    .io_IN_issueUop_2_bits_rd              (issueUop_2_bits_rd),
    .io_IN_issueUop_2_bits_prd             (issueUop_2_bits_prd),
    .io_IN_issueUop_2_bits_prs1            (issueUop_2_bits_prs1),
    .io_IN_issueUop_2_bits_prs2            (issueUop_2_bits_prs2),
    .io_IN_issueUop_2_bits_src1Type        (issueUop_2_bits_src1Type),
    .io_IN_issueUop_2_bits_src2Type        (issueUop_2_bits_src2Type),
    .io_IN_issueUop_2_bits_robPtr_flag     (issueUop_2_bits_robPtr_flag),
    .io_IN_issueUop_2_bits_robPtr_index    (issueUop_2_bits_robPtr_index),
    .io_IN_issueUop_2_bits_ldqPtr_flag     (issueUop_2_bits_ldqPtr_flag),
    .io_IN_issueUop_2_bits_ldqPtr_index    (issueUop_2_bits_ldqPtr_index),
    .io_IN_issueUop_2_bits_stqPtr_flag     (issueUop_2_bits_stqPtr_flag),
    .io_IN_issueUop_2_bits_stqPtr_index    (issueUop_2_bits_stqPtr_index),
    .io_IN_issueUop_2_bits_imm             (issueUop_2_bits_imm),
    .io_IN_issueUop_2_bits_pc              (issueUop_2_bits_pc),
    .io_IN_issueUop_2_bits_fuType          (issueUop_2_bits_fuType),
    .io_IN_issueUop_2_bits_opcode          (issueUop_2_bits_opcode),
    .io_IN_issueUop_2_bits_predTarget      (issueUop_2_bits_predTarget),
    .io_IN_issueUop_2_bits_compressed      (issueUop_2_bits_compressed),
    .io_IN_issueUop_2_bits_rs1             (issueUop_2_bits_rs1),
    .io_IN_issueUop_2_bits_rs2             (issueUop_2_bits_rs2),
    .io_IN_issueUop_3_ready                (issueUop_3_ready),
    .io_IN_issueUop_3_valid                (issueUop_3_valid),
    .io_IN_issueUop_3_bits_rd              (issueUop_3_bits_rd),
    .io_IN_issueUop_3_bits_prd             (issueUop_3_bits_prd),
    .io_IN_issueUop_3_bits_prs1            (issueUop_3_bits_prs1),
    .io_IN_issueUop_3_bits_prs2            (issueUop_3_bits_prs2),
    .io_IN_issueUop_3_bits_src1Type        (issueUop_3_bits_src1Type),
    .io_IN_issueUop_3_bits_src2Type        (issueUop_3_bits_src2Type),
    .io_IN_issueUop_3_bits_robPtr_flag     (issueUop_3_bits_robPtr_flag),
    .io_IN_issueUop_3_bits_robPtr_index    (issueUop_3_bits_robPtr_index),
    .io_IN_issueUop_3_bits_ldqPtr_flag     (issueUop_3_bits_ldqPtr_flag),
    .io_IN_issueUop_3_bits_ldqPtr_index    (issueUop_3_bits_ldqPtr_index),
    .io_IN_issueUop_3_bits_stqPtr_flag     (issueUop_3_bits_stqPtr_flag),
    .io_IN_issueUop_3_bits_stqPtr_index    (issueUop_3_bits_stqPtr_index),
    .io_IN_issueUop_3_bits_imm             (issueUop_3_bits_imm),
    .io_IN_issueUop_3_bits_pc              (issueUop_3_bits_pc),
    .io_IN_issueUop_3_bits_fuType          (issueUop_3_bits_fuType),
    .io_IN_issueUop_3_bits_opcode          (issueUop_3_bits_opcode),
    .io_IN_issueUop_3_bits_predTarget      (issueUop_3_bits_predTarget),
    .io_IN_issueUop_3_bits_compressed      (issueUop_3_bits_compressed),
    .io_IN_issueUop_3_bits_rs1             (issueUop_3_bits_rs1),
    .io_IN_issueUop_3_bits_rs2             (issueUop_3_bits_rs2),
    .io_IN_zeroCycleForward_0_valid        (_readReg_io_IN_zeroCycleForward_0_valid),
    .io_IN_zeroCycleForward_0_bits_prd     (_readReg_io_IN_zeroCycleForward_0_bits_prd),
    .io_IN_zeroCycleForward_0_bits_data    (_readReg_io_IN_zeroCycleForward_0_bits_data),
    .io_IN_zeroCycleForward_1_valid        (_readReg_io_IN_zeroCycleForward_1_valid),
    .io_IN_zeroCycleForward_1_bits_prd     (_readReg_io_IN_zeroCycleForward_1_bits_prd),
    .io_IN_zeroCycleForward_1_bits_data    (_readReg_io_IN_zeroCycleForward_1_bits_data),
    .io_IN_zeroCycleForward_2_valid        (_readReg_io_IN_zeroCycleForward_2_valid),
    .io_IN_zeroCycleForward_2_bits_prd     (_readReg_io_IN_zeroCycleForward_2_bits_prd),
    .io_IN_zeroCycleForward_2_bits_data    (_readReg_io_IN_zeroCycleForward_2_bits_data),
    .io_OUT_readRegIndex_0_0               (_readReg_io_OUT_readRegIndex_0_0),
    .io_OUT_readRegIndex_0_1               (_readReg_io_OUT_readRegIndex_0_1),
    .io_OUT_readRegIndex_1_0               (_readReg_io_OUT_readRegIndex_1_0),
    .io_OUT_readRegIndex_1_1               (_readReg_io_OUT_readRegIndex_1_1),
    .io_OUT_readRegIndex_2_0               (_readReg_io_OUT_readRegIndex_2_0),
    .io_OUT_readRegIndex_2_1               (_readReg_io_OUT_readRegIndex_2_1),
    .io_OUT_readRegIndex_3_0               (_readReg_io_OUT_readRegIndex_3_0),
    .io_OUT_readRegIndex_3_1               (_readReg_io_OUT_readRegIndex_3_1),
    .io_IN_readRegVal_0_0                  (_readReg_io_IN_readRegVal_0_0),
    .io_IN_readRegVal_0_1                  (_readReg_io_IN_readRegVal_0_1),
    .io_IN_readRegVal_1_0                  (_readReg_io_IN_readRegVal_1_0),
    .io_IN_readRegVal_1_1                  (_readReg_io_IN_readRegVal_1_1),
    .io_IN_readRegVal_2_0                  (_readReg_io_IN_readRegVal_2_0),
    .io_IN_readRegVal_2_1                  (_readReg_io_IN_readRegVal_2_1),
    .io_IN_readRegVal_3_0                  (_readReg_io_IN_readRegVal_3_0),
    .io_IN_readRegVal_3_1                  (_readReg_io_IN_readRegVal_3_1),
    .io_OUT_readRegUop_0_ready             (readRegUop_0_ready),
    .io_OUT_readRegUop_0_valid             (readRegUop_0_valid),
    .io_OUT_readRegUop_0_bits_rd           (readRegUop_0_bits_rd),
    .io_OUT_readRegUop_0_bits_prd          (readRegUop_0_bits_prd),
    .io_OUT_readRegUop_0_bits_prs1         (readRegUop_0_bits_prs1),
    .io_OUT_readRegUop_0_bits_prs2         (readRegUop_0_bits_prs2),
    .io_OUT_readRegUop_0_bits_src1         (readRegUop_0_bits_src1),
    .io_OUT_readRegUop_0_bits_src2         (readRegUop_0_bits_src2),
    .io_OUT_readRegUop_0_bits_robPtr_flag  (readRegUop_0_bits_robPtr_flag),
    .io_OUT_readRegUop_0_bits_robPtr_index (readRegUop_0_bits_robPtr_index),
    .io_OUT_readRegUop_0_bits_ldqPtr_flag  (readRegUop_0_bits_ldqPtr_flag),
    .io_OUT_readRegUop_0_bits_ldqPtr_index (readRegUop_0_bits_ldqPtr_index),
    .io_OUT_readRegUop_0_bits_stqPtr_flag  (readRegUop_0_bits_stqPtr_flag),
    .io_OUT_readRegUop_0_bits_stqPtr_index (readRegUop_0_bits_stqPtr_index),
    .io_OUT_readRegUop_0_bits_imm          (readRegUop_0_bits_imm),
    .io_OUT_readRegUop_0_bits_pc           (readRegUop_0_bits_pc),
    .io_OUT_readRegUop_0_bits_fuType       (readRegUop_0_bits_fuType),
    .io_OUT_readRegUop_0_bits_opcode       (readRegUop_0_bits_opcode),
    .io_OUT_readRegUop_0_bits_predTarget   (readRegUop_0_bits_predTarget),
    .io_OUT_readRegUop_0_bits_compressed   (readRegUop_0_bits_compressed),
    .io_OUT_readRegUop_1_ready             (readRegUop_1_ready),
    .io_OUT_readRegUop_1_valid             (readRegUop_1_valid),
    .io_OUT_readRegUop_1_bits_rd           (readRegUop_1_bits_rd),
    .io_OUT_readRegUop_1_bits_prd          (readRegUop_1_bits_prd),
    .io_OUT_readRegUop_1_bits_prs1         (readRegUop_1_bits_prs1),
    .io_OUT_readRegUop_1_bits_prs2         (readRegUop_1_bits_prs2),
    .io_OUT_readRegUop_1_bits_src1         (readRegUop_1_bits_src1),
    .io_OUT_readRegUop_1_bits_src2         (readRegUop_1_bits_src2),
    .io_OUT_readRegUop_1_bits_robPtr_flag  (readRegUop_1_bits_robPtr_flag),
    .io_OUT_readRegUop_1_bits_robPtr_index (readRegUop_1_bits_robPtr_index),
    .io_OUT_readRegUop_1_bits_ldqPtr_flag  (readRegUop_1_bits_ldqPtr_flag),
    .io_OUT_readRegUop_1_bits_ldqPtr_index (readRegUop_1_bits_ldqPtr_index),
    .io_OUT_readRegUop_1_bits_stqPtr_flag  (readRegUop_1_bits_stqPtr_flag),
    .io_OUT_readRegUop_1_bits_stqPtr_index (readRegUop_1_bits_stqPtr_index),
    .io_OUT_readRegUop_1_bits_imm          (readRegUop_1_bits_imm),
    .io_OUT_readRegUop_1_bits_pc           (readRegUop_1_bits_pc),
    .io_OUT_readRegUop_1_bits_fuType       (readRegUop_1_bits_fuType),
    .io_OUT_readRegUop_1_bits_opcode       (readRegUop_1_bits_opcode),
    .io_OUT_readRegUop_1_bits_predTarget   (readRegUop_1_bits_predTarget),
    .io_OUT_readRegUop_1_bits_compressed   (readRegUop_1_bits_compressed),
    .io_OUT_readRegUop_2_ready             (readRegUop_2_ready),
    .io_OUT_readRegUop_2_valid             (readRegUop_2_valid),
    .io_OUT_readRegUop_2_bits_rd           (readRegUop_2_bits_rd),
    .io_OUT_readRegUop_2_bits_prd          (readRegUop_2_bits_prd),
    .io_OUT_readRegUop_2_bits_prs1         (readRegUop_2_bits_prs1),
    .io_OUT_readRegUop_2_bits_prs2         (readRegUop_2_bits_prs2),
    .io_OUT_readRegUop_2_bits_src1         (readRegUop_2_bits_src1),
    .io_OUT_readRegUop_2_bits_src2         (readRegUop_2_bits_src2),
    .io_OUT_readRegUop_2_bits_robPtr_flag  (readRegUop_2_bits_robPtr_flag),
    .io_OUT_readRegUop_2_bits_robPtr_index (readRegUop_2_bits_robPtr_index),
    .io_OUT_readRegUop_2_bits_ldqPtr_flag  (readRegUop_2_bits_ldqPtr_flag),
    .io_OUT_readRegUop_2_bits_ldqPtr_index (readRegUop_2_bits_ldqPtr_index),
    .io_OUT_readRegUop_2_bits_stqPtr_flag  (readRegUop_2_bits_stqPtr_flag),
    .io_OUT_readRegUop_2_bits_stqPtr_index (readRegUop_2_bits_stqPtr_index),
    .io_OUT_readRegUop_2_bits_imm          (readRegUop_2_bits_imm),
    .io_OUT_readRegUop_2_bits_pc           (readRegUop_2_bits_pc),
    .io_OUT_readRegUop_2_bits_fuType       (readRegUop_2_bits_fuType),
    .io_OUT_readRegUop_2_bits_opcode       (readRegUop_2_bits_opcode),
    .io_OUT_readRegUop_2_bits_predTarget   (readRegUop_2_bits_predTarget),
    .io_OUT_readRegUop_2_bits_compressed   (readRegUop_2_bits_compressed),
    .io_OUT_readRegUop_3_ready             (readRegUop_3_ready),
    .io_OUT_readRegUop_3_valid             (readRegUop_3_valid),
    .io_OUT_readRegUop_3_bits_rd           (readRegUop_3_bits_rd),
    .io_OUT_readRegUop_3_bits_prd          (readRegUop_3_bits_prd),
    .io_OUT_readRegUop_3_bits_prs1         (readRegUop_3_bits_prs1),
    .io_OUT_readRegUop_3_bits_prs2         (readRegUop_3_bits_prs2),
    .io_OUT_readRegUop_3_bits_src1         (readRegUop_3_bits_src1),
    .io_OUT_readRegUop_3_bits_src2         (readRegUop_3_bits_src2),
    .io_OUT_readRegUop_3_bits_robPtr_flag  (readRegUop_3_bits_robPtr_flag),
    .io_OUT_readRegUop_3_bits_robPtr_index (readRegUop_3_bits_robPtr_index),
    .io_OUT_readRegUop_3_bits_ldqPtr_flag  (readRegUop_3_bits_ldqPtr_flag),
    .io_OUT_readRegUop_3_bits_ldqPtr_index (readRegUop_3_bits_ldqPtr_index),
    .io_OUT_readRegUop_3_bits_stqPtr_flag  (readRegUop_3_bits_stqPtr_flag),
    .io_OUT_readRegUop_3_bits_stqPtr_index (readRegUop_3_bits_stqPtr_index),
    .io_OUT_readRegUop_3_bits_imm          (readRegUop_3_bits_imm),
    .io_OUT_readRegUop_3_bits_pc           (readRegUop_3_bits_pc),
    .io_OUT_readRegUop_3_bits_fuType       (readRegUop_3_bits_fuType),
    .io_OUT_readRegUop_3_bits_opcode       (readRegUop_3_bits_opcode),
    .io_OUT_readRegUop_3_bits_predTarget   (readRegUop_3_bits_predTarget),
    .io_OUT_readRegUop_3_bits_compressed   (readRegUop_3_bits_compressed),
    .io_IN_flush                           (_readReg_io_IN_flush)
  );
  PReg pReg (
    .clock                          (clock),
    .io_IN_pRegIndex_0_0            (_readReg_io_OUT_readRegIndex_0_0),
    .io_IN_pRegIndex_0_1            (_readReg_io_OUT_readRegIndex_0_1),
    .io_IN_pRegIndex_1_0            (_readReg_io_OUT_readRegIndex_1_0),
    .io_IN_pRegIndex_1_1            (_readReg_io_OUT_readRegIndex_1_1),
    .io_IN_pRegIndex_2_0            (_readReg_io_OUT_readRegIndex_2_0),
    .io_IN_pRegIndex_2_1            (_readReg_io_OUT_readRegIndex_2_1),
    .io_IN_pRegIndex_3_0            (_readReg_io_OUT_readRegIndex_3_0),
    .io_IN_pRegIndex_3_1            (_readReg_io_OUT_readRegIndex_3_1),
    .io_IN_writebackUop_0_valid     (writebackUop_0_valid),
    .io_IN_writebackUop_0_bits_prd  (writebackUop_0_bits_prd),
    .io_IN_writebackUop_0_bits_data (writebackUop_0_bits_data),
    .io_IN_writebackUop_1_valid     (writebackUop_1_valid),
    .io_IN_writebackUop_1_bits_prd  (writebackUop_1_bits_prd),
    .io_IN_writebackUop_1_bits_data (writebackUop_1_bits_data),
    .io_IN_writebackUop_2_valid     (writebackUop_2_valid),
    .io_IN_writebackUop_2_bits_prd  (writebackUop_2_bits_prd),
    .io_IN_writebackUop_2_bits_data (writebackUop_2_bits_data),
    .io_IN_writebackUop_3_valid     (writebackUop_3_valid),
    .io_IN_writebackUop_3_bits_prd  (writebackUop_3_bits_prd),
    .io_IN_writebackUop_3_bits_data (writebackUop_3_bits_data),
    .io_IN_writebackUop_4_valid     (writebackUop_4_valid),
    .io_IN_writebackUop_4_bits_prd  (writebackUop_4_bits_prd),
    .io_IN_writebackUop_4_bits_data (writebackUop_4_bits_data),
    .io_OUT_pRegVal_0_0             (_readReg_io_IN_readRegVal_0_0),
    .io_OUT_pRegVal_0_1             (_readReg_io_IN_readRegVal_0_1),
    .io_OUT_pRegVal_1_0             (_readReg_io_IN_readRegVal_1_0),
    .io_OUT_pRegVal_1_1             (_readReg_io_IN_readRegVal_1_1),
    .io_OUT_pRegVal_2_0             (_readReg_io_IN_readRegVal_2_0),
    .io_OUT_pRegVal_2_1             (_readReg_io_IN_readRegVal_2_1),
    .io_OUT_pRegVal_3_0             (_readReg_io_IN_readRegVal_3_0),
    .io_OUT_pRegVal_3_1             (_readReg_io_IN_readRegVal_3_1)
  );
  assign _alu0_io_IN_flush = _flagHandler_io_OUT_flush;
  ALU alu0 (
    .clock                                 (clock),
    .reset                                 (reset),
    .io_IN_readRegUop_valid                (_dispatcher_0_io_OUT_uop_0_valid),
    .io_IN_readRegUop_bits_prd             (_dispatcher_0_io_OUT_uop_0_bits_prd),
    .io_IN_readRegUop_bits_src1            (_dispatcher_0_io_OUT_uop_0_bits_src1),
    .io_IN_readRegUop_bits_src2            (_dispatcher_0_io_OUT_uop_0_bits_src2),
    .io_IN_readRegUop_bits_robPtr_flag     (_dispatcher_0_io_OUT_uop_0_bits_robPtr_flag),
    .io_IN_readRegUop_bits_robPtr_index    (_dispatcher_0_io_OUT_uop_0_bits_robPtr_index),
    .io_IN_readRegUop_bits_opcode          (_dispatcher_0_io_OUT_uop_0_bits_opcode),
    .io_OUT_writebackUop_valid             (_alu0_io_OUT_writebackUop_valid),
    .io_OUT_writebackUop_bits_prd          (_alu0_io_OUT_writebackUop_bits_prd),
    .io_OUT_writebackUop_bits_data         (_alu0_io_OUT_writebackUop_bits_data),
    .io_OUT_writebackUop_bits_robPtr_flag  (_alu0_io_OUT_writebackUop_bits_robPtr_flag),
    .io_OUT_writebackUop_bits_robPtr_index (_alu0_io_OUT_writebackUop_bits_robPtr_index),
    .io_OUT_zeroCycleForward_valid         (_readReg_io_IN_zeroCycleForward_0_valid),
    .io_OUT_zeroCycleForward_bits_prd      (_readReg_io_IN_zeroCycleForward_0_bits_prd),
    .io_OUT_zeroCycleForward_bits_data     (_readReg_io_IN_zeroCycleForward_0_bits_data),
    .io_IN_flush                           (_alu0_io_IN_flush)
  );
  assign _mul_io_IN_flush = _flagHandler_io_OUT_flush;
  MUL mul (
    .clock                                 (clock),
    .reset                                 (reset),
    .io_IN_readRegUop_valid                (_dispatcher_0_io_OUT_uop_1_valid),
    .io_IN_readRegUop_bits_prd             (_dispatcher_0_io_OUT_uop_1_bits_prd),
    .io_IN_readRegUop_bits_src1            (_dispatcher_0_io_OUT_uop_1_bits_src1),
    .io_IN_readRegUop_bits_src2            (_dispatcher_0_io_OUT_uop_1_bits_src2),
    .io_IN_readRegUop_bits_robPtr_flag     (_dispatcher_0_io_OUT_uop_1_bits_robPtr_flag),
    .io_IN_readRegUop_bits_robPtr_index    (_dispatcher_0_io_OUT_uop_1_bits_robPtr_index),
    .io_IN_readRegUop_bits_opcode          (_dispatcher_0_io_OUT_uop_1_bits_opcode),
    .io_OUT_writebackUop_valid             (_mul_io_OUT_writebackUop_valid),
    .io_OUT_writebackUop_bits_prd          (_mul_io_OUT_writebackUop_bits_prd),
    .io_OUT_writebackUop_bits_data         (_mul_io_OUT_writebackUop_bits_data),
    .io_OUT_writebackUop_bits_robPtr_flag  (_mul_io_OUT_writebackUop_bits_robPtr_flag),
    .io_OUT_writebackUop_bits_robPtr_index (_mul_io_OUT_writebackUop_bits_robPtr_index),
    .io_IN_flush                           (_mul_io_IN_flush)
  );
  wire         CSRCtrl_trap /*verilator public_flat*/;
  wire         CSRCtrl_intr /*verilator public_flat*/;
  wire [31:0]  CSRCtrl_pc /*verilator public_flat*/;
  wire [3:0]   CSRCtrl_cause /*verilator public_flat*/;
  wire         CSRCtrl_delegate /*verilator public_flat*/;
  wire         CSRCtrl_mret /*verilator public_flat*/;
  wire         CSRCtrl_sret /*verilator public_flat*/;
  CSR csr (
    .clock                                 (clock),
    .reset                                 (reset),
    .io_IN_readRegUop_valid                (_dispatcher_0_io_OUT_uop_2_valid),
    .io_IN_readRegUop_bits_prd             (_dispatcher_0_io_OUT_uop_2_bits_prd),
    .io_IN_readRegUop_bits_src1            (_dispatcher_0_io_OUT_uop_2_bits_src1),
    .io_IN_readRegUop_bits_robPtr_flag     (_dispatcher_0_io_OUT_uop_2_bits_robPtr_flag),
    .io_IN_readRegUop_bits_robPtr_index    (_dispatcher_0_io_OUT_uop_2_bits_robPtr_index),
    .io_IN_readRegUop_bits_imm             (_dispatcher_0_io_OUT_uop_2_bits_imm),
    .io_IN_readRegUop_bits_pc              (_dispatcher_0_io_OUT_uop_2_bits_pc),
    .io_IN_readRegUop_bits_opcode          (_dispatcher_0_io_OUT_uop_2_bits_opcode),
    .io_OUT_writebackUop_valid             (_csr_io_OUT_writebackUop_valid),
    .io_OUT_writebackUop_bits_prd          (_csr_io_OUT_writebackUop_bits_prd),
    .io_OUT_writebackUop_bits_data         (_csr_io_OUT_writebackUop_bits_data),
    .io_OUT_writebackUop_bits_robPtr_flag  (_csr_io_OUT_writebackUop_bits_robPtr_flag),
    .io_OUT_writebackUop_bits_robPtr_index (_csr_io_OUT_writebackUop_bits_robPtr_index),
    .io_OUT_writebackUop_bits_flag         (_csr_io_OUT_writebackUop_bits_flag),
    .io_OUT_writebackUop_bits_target       (_csr_io_OUT_writebackUop_bits_target),
    .io_IN_CSRCtrl_trap                    (CSRCtrl_trap),
    .io_IN_CSRCtrl_intr                    (CSRCtrl_intr),
    .io_IN_CSRCtrl_pc                      (CSRCtrl_pc),
    .io_IN_CSRCtrl_cause                   (CSRCtrl_cause),
    .io_IN_CSRCtrl_delegate                (CSRCtrl_delegate),
    .io_IN_CSRCtrl_mret                    (CSRCtrl_mret),
    .io_IN_CSRCtrl_sret                    (CSRCtrl_sret),
    .io_OUT_VMCSR_mode                     (_csr_io_OUT_VMCSR_mode),
    .io_OUT_VMCSR_rootPPN                  (_csr_io_OUT_VMCSR_rootPPN),
    .io_OUT_VMCSR_epm                      (_csr_io_OUT_VMCSR_epm),
    .io_OUT_VMCSR_priv                     (_ifu_io_IN_VMCSR_priv),
    .io_OUT_VMCSR_mxr                      (_csr_io_OUT_VMCSR_mxr),
    .io_OUT_VMCSR_sum                      (_csr_io_OUT_VMCSR_sum),
    .io_OUT_trapCSR_mtvec                  (_csr_io_OUT_trapCSR_mtvec),
    .io_OUT_trapCSR_mepc                   (_csr_io_OUT_trapCSR_mepc),
    .io_OUT_trapCSR_stvec                  (_csr_io_OUT_trapCSR_stvec),
    .io_OUT_trapCSR_sepc                   (_csr_io_OUT_trapCSR_sepc),
    .io_OUT_trapCSR_mideleg                (_csr_io_OUT_trapCSR_mideleg),
    .io_OUT_trapCSR_medeleg                (_csr_io_OUT_trapCSR_medeleg),
    .io_OUT_trapCSR_priv                   (_csr_io_OUT_trapCSR_priv),
    .io_OUT_trapCSR_interrupt              (_csr_io_OUT_trapCSR_interrupt),
    .io_OUT_trapCSR_interruptCause         (_csr_io_OUT_trapCSR_interruptCause),
    .io_IN_mtime                           (_internalMMIO_io_OUT_mtime),
    .io_IN_MTIP                            (_internalMMIO_io_OUT_MTIP),
    .io_IN_xtvalRec_valid                  (_csr_io_IN_xtvalRec_valid),
    .io_IN_xtvalRec_bits_tval              (_csr_io_IN_xtvalRec_bits_tval)
  );
  assign _alu1_io_IN_flush = _flagHandler_io_OUT_flush;
  ALU alu1 (
    .clock                                 (clock),
    .reset                                 (reset),
    .io_IN_readRegUop_valid                (_dispatcher_1_io_OUT_uop_0_valid),
    .io_IN_readRegUop_bits_prd             (_dispatcher_1_io_OUT_uop_0_bits_prd),
    .io_IN_readRegUop_bits_src1            (_dispatcher_1_io_OUT_uop_0_bits_src1),
    .io_IN_readRegUop_bits_src2            (_dispatcher_1_io_OUT_uop_0_bits_src2),
    .io_IN_readRegUop_bits_robPtr_flag     (_dispatcher_1_io_OUT_uop_0_bits_robPtr_flag),
    .io_IN_readRegUop_bits_robPtr_index    (_dispatcher_1_io_OUT_uop_0_bits_robPtr_index),
    .io_IN_readRegUop_bits_opcode          (_dispatcher_1_io_OUT_uop_0_bits_opcode),
    .io_OUT_writebackUop_valid             (_alu1_io_OUT_writebackUop_valid),
    .io_OUT_writebackUop_bits_prd          (_alu1_io_OUT_writebackUop_bits_prd),
    .io_OUT_writebackUop_bits_data         (_alu1_io_OUT_writebackUop_bits_data),
    .io_OUT_writebackUop_bits_robPtr_flag  (_alu1_io_OUT_writebackUop_bits_robPtr_flag),
    .io_OUT_writebackUop_bits_robPtr_index (_alu1_io_OUT_writebackUop_bits_robPtr_index),
    .io_OUT_zeroCycleForward_valid         (_readReg_io_IN_zeroCycleForward_1_valid),
    .io_OUT_zeroCycleForward_bits_prd      (_readReg_io_IN_zeroCycleForward_1_bits_prd),
    .io_OUT_zeroCycleForward_bits_data     (_readReg_io_IN_zeroCycleForward_1_bits_data),
    .io_IN_flush                           (_alu1_io_IN_flush)
  );
  assign _div_io_IN_flush = _flagHandler_io_OUT_flush;
  DIV div (
    .clock                                 (clock),
    .reset                                 (reset),
    .io_IN_readRegUop_ready                (_dispatcher_1_io_OUT_uop_1_ready),
    .io_IN_readRegUop_valid                (_dispatcher_1_io_OUT_uop_1_valid),
    .io_IN_readRegUop_bits_prd             (_dispatcher_1_io_OUT_uop_1_bits_prd),
    .io_IN_readRegUop_bits_src1            (_dispatcher_1_io_OUT_uop_1_bits_src1),
    .io_IN_readRegUop_bits_src2            (_dispatcher_1_io_OUT_uop_1_bits_src2),
    .io_IN_readRegUop_bits_robPtr_flag     (_dispatcher_1_io_OUT_uop_1_bits_robPtr_flag),
    .io_IN_readRegUop_bits_robPtr_index    (_dispatcher_1_io_OUT_uop_1_bits_robPtr_index),
    .io_IN_readRegUop_bits_opcode          (_dispatcher_1_io_OUT_uop_1_bits_opcode),
    .io_OUT_writebackUop_valid             (_div_io_OUT_writebackUop_valid),
    .io_OUT_writebackUop_bits_prd          (_div_io_OUT_writebackUop_bits_prd),
    .io_OUT_writebackUop_bits_data         (_div_io_OUT_writebackUop_bits_data),
    .io_OUT_writebackUop_bits_robPtr_flag  (_div_io_OUT_writebackUop_bits_robPtr_flag),
    .io_OUT_writebackUop_bits_robPtr_index (_div_io_OUT_writebackUop_bits_robPtr_index),
    .io_OUT_idivBusy                       (_div_io_OUT_idivBusy),
    .io_IN_flush                           (_div_io_IN_flush)
  );
  assign _alu2_io_IN_flush = _flagHandler_io_OUT_flush;
  ALU_2 alu2 (
    .clock                                 (clock),
    .reset                                 (reset),
    .io_IN_readRegUop_valid                (readRegUop_2_valid),
    .io_IN_readRegUop_bits_prd             (readRegUop_2_bits_prd),
    .io_IN_readRegUop_bits_src1            (readRegUop_2_bits_src1),
    .io_IN_readRegUop_bits_src2            (readRegUop_2_bits_src2),
    .io_IN_readRegUop_bits_robPtr_flag     (readRegUop_2_bits_robPtr_flag),
    .io_IN_readRegUop_bits_robPtr_index    (readRegUop_2_bits_robPtr_index),
    .io_IN_readRegUop_bits_imm             (readRegUop_2_bits_imm),
    .io_IN_readRegUop_bits_pc              (readRegUop_2_bits_pc),
    .io_IN_readRegUop_bits_fuType          (readRegUop_2_bits_fuType),
    .io_IN_readRegUop_bits_opcode          (readRegUop_2_bits_opcode),
    .io_IN_readRegUop_bits_predTarget      (readRegUop_2_bits_predTarget),
    .io_OUT_writebackUop_valid             (writebackUop_2_valid),
    .io_OUT_writebackUop_bits_prd          (writebackUop_2_bits_prd),
    .io_OUT_writebackUop_bits_data         (writebackUop_2_bits_data),
    .io_OUT_writebackUop_bits_robPtr_flag  (writebackUop_2_bits_robPtr_flag),
    .io_OUT_writebackUop_bits_robPtr_index (writebackUop_2_bits_robPtr_index),
    .io_OUT_writebackUop_bits_flag         (writebackUop_2_bits_flag),
    .io_OUT_writebackUop_bits_target       (writebackUop_2_bits_target),
    .io_OUT_zeroCycleForward_valid         (_readReg_io_IN_zeroCycleForward_2_valid),
    .io_OUT_zeroCycleForward_bits_prd      (_readReg_io_IN_zeroCycleForward_2_bits_prd),
    .io_OUT_zeroCycleForward_bits_data     (_readReg_io_IN_zeroCycleForward_2_bits_data),
    .io_OUT_btbUpdate_valid                (_ifu_io_IN_btbUpdate_valid),
    .io_OUT_btbUpdate_bits_pc              (_ifu_io_IN_btbUpdate_bits_pc),
    .io_OUT_btbUpdate_bits_flush           (_ifu_io_IN_btbUpdate_bits_flush),
    .io_OUT_btbUpdate_bits_target          (_ifu_io_IN_btbUpdate_bits_target),
    .io_OUT_btbUpdate_bits_brType          (_ifu_io_IN_btbUpdate_bits_brType),
    .io_IN_flush                           (_alu2_io_IN_flush)
  );
  assign _agu_io_IN_PTWResp_valid = _ptw_io_OUT_PTWResp_valid;
  assign _agu_io_IN_PTWResp_bits_id = _ptw_io_OUT_PTWResp_bits_id;
  assign _agu_io_IN_flush = _flagHandler_io_OUT_flush;
  AGU agu (
    .clock                                 (clock),
    .reset                                 (reset),
    .io_IN_VMCSR_mode                      (_csr_io_OUT_VMCSR_mode),
    .io_IN_VMCSR_epm                       (_csr_io_OUT_VMCSR_epm),
    .io_IN_VMCSR_mxr                       (_csr_io_OUT_VMCSR_mxr),
    .io_IN_VMCSR_sum                       (_csr_io_OUT_VMCSR_sum),
    .io_IN_readRegUop_ready                (readRegUop_3_ready),
    .io_IN_readRegUop_valid                (readRegUop_3_valid),
    .io_IN_readRegUop_bits_prd             (readRegUop_3_bits_prd),
    .io_IN_readRegUop_bits_src1            (readRegUop_3_bits_src1),
    .io_IN_readRegUop_bits_src2            (readRegUop_3_bits_src2),
    .io_IN_readRegUop_bits_robPtr_flag     (readRegUop_3_bits_robPtr_flag),
    .io_IN_readRegUop_bits_robPtr_index    (readRegUop_3_bits_robPtr_index),
    .io_IN_readRegUop_bits_ldqPtr_flag     (readRegUop_3_bits_ldqPtr_flag),
    .io_IN_readRegUop_bits_ldqPtr_index    (readRegUop_3_bits_ldqPtr_index),
    .io_IN_readRegUop_bits_stqPtr_flag     (readRegUop_3_bits_stqPtr_flag),
    .io_IN_readRegUop_bits_stqPtr_index    (readRegUop_3_bits_stqPtr_index),
    .io_IN_readRegUop_bits_imm             (readRegUop_3_bits_imm),
    .io_IN_readRegUop_bits_fuType          (readRegUop_3_bits_fuType),
    .io_IN_readRegUop_bits_opcode          (readRegUop_3_bits_opcode),
    .io_IN_readRegUop_bits_predTarget      (readRegUop_3_bits_predTarget),
    .io_IN_readRegUop_bits_compressed      (readRegUop_3_bits_compressed),
    .io_OUT_TLBReq_valid                   (_agu_io_OUT_TLBReq_valid),
    .io_OUT_TLBReq_bits_vpn                (_agu_io_OUT_TLBReq_bits_vpn),
    .io_IN_TLBResp_valid                   (_agu_io_IN_TLBResp_valid),
    .io_IN_TLBResp_bits_isSuper            (_agu_io_IN_TLBResp_bits_isSuper),
    .io_IN_TLBResp_bits_pte_ppn1           (_agu_io_IN_TLBResp_bits_pte_ppn1),
    .io_IN_TLBResp_bits_pte_ppn0           (_agu_io_IN_TLBResp_bits_pte_ppn0),
    .io_IN_TLBResp_bits_pte_d              (_agu_io_IN_TLBResp_bits_pte_d),
    .io_IN_TLBResp_bits_pte_a              (_agu_io_IN_TLBResp_bits_pte_a),
    .io_IN_TLBResp_bits_pte_u              (_agu_io_IN_TLBResp_bits_pte_u),
    .io_IN_TLBResp_bits_pte_x              (_agu_io_IN_TLBResp_bits_pte_x),
    .io_IN_TLBResp_bits_pte_w              (_agu_io_IN_TLBResp_bits_pte_w),
    .io_IN_TLBResp_bits_pte_r              (_agu_io_IN_TLBResp_bits_pte_r),
    .io_IN_TLBResp_bits_pte_v              (_agu_io_IN_TLBResp_bits_pte_v),
    .io_OUT_PTWReq_valid                   (_agu_io_OUT_PTWReq_valid),
    .io_OUT_PTWReq_bits_vpn                (_agu_io_OUT_PTWReq_bits_vpn),
    .io_OUT_PTWReq_bits_stqPtr_flag        (_agu_io_OUT_PTWReq_bits_stqPtr_flag),
    .io_OUT_PTWReq_bits_stqPtr_index       (_agu_io_OUT_PTWReq_bits_stqPtr_index),
    .io_IN_PTWResp_valid                   (_agu_io_IN_PTWResp_valid),
    .io_IN_PTWResp_bits_id                 (_agu_io_IN_PTWResp_bits_id),
    .io_OUT_AGUUop_valid                   (aguUop_valid),
    .io_OUT_AGUUop_bits_prd                (aguUop_bits_prd),
    .io_OUT_AGUUop_bits_addr               (aguUop_bits_addr),
    .io_OUT_AGUUop_bits_wdata              (aguUop_bits_wdata),
    .io_OUT_AGUUop_bits_dest               (aguUop_bits_dest),
    .io_OUT_AGUUop_bits_robPtr_flag        (aguUop_bits_robPtr_flag),
    .io_OUT_AGUUop_bits_robPtr_index       (aguUop_bits_robPtr_index),
    .io_OUT_AGUUop_bits_ldqPtr_flag        (aguUop_bits_ldqPtr_flag),
    .io_OUT_AGUUop_bits_ldqPtr_index       (aguUop_bits_ldqPtr_index),
    .io_OUT_AGUUop_bits_stqPtr_flag        (aguUop_bits_stqPtr_flag),
    .io_OUT_AGUUop_bits_stqPtr_index       (aguUop_bits_stqPtr_index),
    .io_OUT_AGUUop_bits_fuType             (aguUop_bits_fuType),
    .io_OUT_AGUUop_bits_opcode             (aguUop_bits_opcode),
    .io_OUT_AGUUop_bits_predTarget         (aguUop_bits_predTarget),
    .io_OUT_AGUUop_bits_compressed         (aguUop_bits_compressed),
    .io_OUT_writebackUop_valid             (writebackUop_4_valid),
    .io_OUT_writebackUop_bits_robPtr_flag  (writebackUop_4_bits_robPtr_flag),
    .io_OUT_writebackUop_bits_robPtr_index (writebackUop_4_bits_robPtr_index),
    .io_OUT_writebackUop_bits_flag         (writebackUop_4_bits_flag),
    .io_OUT_writebackUop_bits_target       (writebackUop_4_bits_target),
    .io_OUT_xtvalRec_valid                 (_agu_io_OUT_xtvalRec_valid),
    .io_OUT_xtvalRec_bits_tval             (_agu_io_OUT_xtvalRec_bits_tval),
    .io_OUT_xtvalRec_bits_robPtr_flag      (_agu_io_OUT_xtvalRec_bits_robPtr_flag),
    .io_OUT_xtvalRec_bits_robPtr_index     (_agu_io_OUT_xtvalRec_bits_robPtr_index),
    .io_IN_flush                           (_agu_io_IN_flush)
  );
  assign _loadQueue_io_IN_negAck_valid = _lsu_io_OUT_loadNegAck_valid;
  assign _loadQueue_io_IN_negAck_bits_dest = _lsu_io_OUT_loadNegAck_bits_dest;
  assign _loadQueue_io_IN_flush = _flagHandler_io_OUT_flush;
  LoadQueue loadQueue (
    .clock                          (clock),
    .reset                          (reset),
    .io_IN_AGUUop_valid             (aguUop_valid),
    .io_IN_AGUUop_bits_prd          (aguUop_bits_prd),
    .io_IN_AGUUop_bits_addr         (aguUop_bits_addr),
    .io_IN_AGUUop_bits_dest         (aguUop_bits_dest),
    .io_IN_AGUUop_bits_robPtr_flag  (aguUop_bits_robPtr_flag),
    .io_IN_AGUUop_bits_robPtr_index (aguUop_bits_robPtr_index),
    .io_IN_AGUUop_bits_ldqPtr_index (aguUop_bits_ldqPtr_index),
    .io_IN_AGUUop_bits_stqPtr_flag  (aguUop_bits_stqPtr_flag),
    .io_IN_AGUUop_bits_stqPtr_index (aguUop_bits_stqPtr_index),
    .io_IN_AGUUop_bits_fuType       (aguUop_bits_fuType),
    .io_IN_AGUUop_bits_opcode       (aguUop_bits_opcode),
    .io_IN_negAck_valid             (_loadQueue_io_IN_negAck_valid),
    .io_IN_negAck_bits_ldqPtr_index (_loadQueue_io_IN_negAck_bits_ldqPtr_index),
    .io_IN_negAck_bits_dest         (_loadQueue_io_IN_negAck_bits_dest),
    .io_IN_robTailPtr_flag          (_rob_io_OUT_robTailPtr_flag),
    .io_IN_robTailPtr_index         (_rob_io_OUT_robTailPtr_index),
    .io_IN_commitLdqPtr_flag        (_rob_io_OUT_ldqTailPtr_flag),
    .io_IN_commitLdqPtr_index       (_rob_io_OUT_ldqTailPtr_index),
    .io_IN_commitStqPtr_flag        (_rob_io_OUT_stqTailPtr_flag),
    .io_IN_commitStqPtr_index       (_rob_io_OUT_stqTailPtr_index),
    .io_OUT_ldUop_ready             (_loadQueue_io_OUT_ldUop_ready),
    .io_OUT_ldUop_valid             (_loadQueue_io_OUT_ldUop_valid),
    .io_OUT_ldUop_bits_prd          (_loadQueue_io_OUT_ldUop_bits_prd),
    .io_OUT_ldUop_bits_addr         (_loadQueue_io_OUT_ldUop_bits_addr),
    .io_OUT_ldUop_bits_dest         (_loadQueue_io_OUT_ldUop_bits_dest),
    .io_OUT_ldUop_bits_robPtr_flag  (_loadQueue_io_OUT_ldUop_bits_robPtr_flag),
    .io_OUT_ldUop_bits_robPtr_index (_loadQueue_io_OUT_ldUop_bits_robPtr_index),
    .io_OUT_ldUop_bits_ldqPtr_index (_loadQueue_io_OUT_ldUop_bits_ldqPtr_index),
    .io_OUT_ldUop_bits_stqPtr_flag  (_loadQueue_io_OUT_ldUop_bits_stqPtr_flag),
    .io_OUT_ldUop_bits_stqPtr_index (_loadQueue_io_OUT_ldUop_bits_stqPtr_index),
    .io_OUT_ldUop_bits_opcode       (_loadQueue_io_OUT_ldUop_bits_opcode),
    .io_IN_flush                    (_loadQueue_io_IN_flush)
  );
  assign _storeQueue_io_IN_storeBypassReq_addr = _lsu_io_OUT_storeBypassReq_addr;
  StoreQueue storeQueue (
    .clock                             (clock),
    .reset                             (reset),
    .io_IN_AGUUop_valid                (aguUop_valid),
    .io_IN_AGUUop_bits_addr            (aguUop_bits_addr),
    .io_IN_AGUUop_bits_wdata           (aguUop_bits_wdata),
    .io_IN_AGUUop_bits_stqPtr_index    (aguUop_bits_stqPtr_index),
    .io_IN_AGUUop_bits_fuType          (aguUop_bits_fuType),
    .io_IN_AGUUop_bits_opcode          (aguUop_bits_opcode),
    .io_IN_commitStqPtr_flag           (_rob_io_OUT_stqTailPtr_flag),
    .io_IN_commitStqPtr_index          (_rob_io_OUT_stqTailPtr_index),
    .io_OUT_stUop_ready                (_storeQueue_io_OUT_stUop_ready),
    .io_OUT_stUop_valid                (_storeQueue_io_OUT_stUop_valid),
    .io_OUT_stUop_bits_addr            (_storeQueue_io_OUT_stUop_bits_addr),
    .io_OUT_stUop_bits_wdata           (_storeQueue_io_OUT_stUop_bits_wdata),
    .io_OUT_stUop_bits_opcode          (_storeQueue_io_OUT_stUop_bits_opcode),
    .io_OUT_stqBasePtr_flag            (_storeQueue_io_OUT_stqBasePtr_flag),
    .io_OUT_stqBasePtr_index           (_storeQueue_io_OUT_stqBasePtr_index),
    .io_OUT_storeQueueEmpty            (_storeQueue_io_OUT_storeQueueEmpty),
    .io_IN_storeBypassReq_addr         (_storeQueue_io_IN_storeBypassReq_addr),
    .io_IN_storeBypassReq_stqPtr_flag  (_storeQueue_io_IN_storeBypassReq_stqPtr_flag),
    .io_IN_storeBypassReq_stqPtr_index (_storeQueue_io_IN_storeBypassReq_stqPtr_index),
    .io_OUT_storeBypassResp_data       (_storeQueue_io_OUT_storeBypassResp_data),
    .io_OUT_storeBypassResp_mask       (_storeQueue_io_OUT_storeBypassResp_mask)
  );
  assign _storeBuffer_io_IN_storeBypassReq_addr = _lsu_io_OUT_storeBypassReq_addr;
  StoreBuffer storeBuffer (
    .clock                       (clock),
    .reset                       (reset),
    .io_IN_storeUop_ready        (_storeQueue_io_OUT_stUop_ready),
    .io_IN_storeUop_valid        (_storeQueue_io_OUT_stUop_valid),
    .io_IN_storeUop_bits_addr    (_storeQueue_io_OUT_stUop_bits_addr),
    .io_IN_storeUop_bits_wdata   (_storeQueue_io_OUT_stUop_bits_wdata),
    .io_IN_storeUop_bits_opcode  (_storeQueue_io_OUT_stUop_bits_opcode),
    .io_OUT_storeUop_ready       (_storeBuffer_io_OUT_storeUop_ready),
    .io_OUT_storeUop_valid       (_storeBuffer_io_OUT_storeUop_valid),
    .io_OUT_storeUop_bits_addr   (_storeBuffer_io_OUT_storeUop_bits_addr),
    .io_OUT_storeUop_bits_wdata  (_storeBuffer_io_OUT_storeUop_bits_wdata),
    .io_OUT_storeUop_bits_opcode (_storeBuffer_io_OUT_storeUop_bits_opcode),
    .io_IN_storeAck_valid        (_storeBuffer_io_IN_storeAck_valid),
    .io_IN_storeAck_bits_resp    (_storeBuffer_io_IN_storeAck_bits_resp),
    .io_OUT_storeBufferEmpty     (_storeBuffer_io_OUT_storeBufferEmpty),
    .io_IN_storeBypassReq_addr   (_storeBuffer_io_IN_storeBypassReq_addr),
    .io_OUT_storeBypassResp_data (_storeBuffer_io_OUT_storeBypassResp_data),
    .io_OUT_storeBypassResp_mask (_storeBuffer_io_OUT_storeBypassResp_mask)
  );
  AmoUnit amoUnit (
    .clock                           (clock),
    .reset                           (reset),
    .io_IN_AGUUop_valid              (aguUop_valid),
    .io_IN_AGUUop_bits_prd           (aguUop_bits_prd),
    .io_IN_AGUUop_bits_addr          (aguUop_bits_addr),
    .io_IN_AGUUop_bits_wdata         (aguUop_bits_wdata),
    .io_IN_AGUUop_bits_dest          (aguUop_bits_dest),
    .io_IN_AGUUop_bits_robPtr_flag   (aguUop_bits_robPtr_flag),
    .io_IN_AGUUop_bits_robPtr_index  (aguUop_bits_robPtr_index),
    .io_IN_AGUUop_bits_fuType        (aguUop_bits_fuType),
    .io_IN_AGUUop_bits_opcode        (aguUop_bits_opcode),
    .io_IN_amoAck_valid              (_amoUnit_io_IN_amoAck_valid),
    .io_IN_amoAck_bits_resp          (_amoUnit_io_IN_amoAck_bits_resp),
    .io_IN_storeQueueEmpty           (_storeQueue_io_OUT_storeQueueEmpty),
    .io_IN_storeBufferEmpty          (_storeBuffer_io_OUT_storeBufferEmpty),
    .io_OUT_amoActive                (_amoUnit_io_OUT_amoActive),
    .io_OUT_amoUop_ready             (_amoUnit_io_OUT_amoUop_ready),
    .io_OUT_amoUop_valid             (_amoUnit_io_OUT_amoUop_valid),
    .io_OUT_amoUop_bits_prd          (_amoUnit_io_OUT_amoUop_bits_prd),
    .io_OUT_amoUop_bits_addr         (_amoUnit_io_OUT_amoUop_bits_addr),
    .io_OUT_amoUop_bits_wdata        (_amoUnit_io_OUT_amoUop_bits_wdata),
    .io_OUT_amoUop_bits_dest         (_amoUnit_io_OUT_amoUop_bits_dest),
    .io_OUT_amoUop_bits_robPtr_flag  (_amoUnit_io_OUT_amoUop_bits_robPtr_flag),
    .io_OUT_amoUop_bits_robPtr_index (_amoUnit_io_OUT_amoUop_bits_robPtr_index),
    .io_OUT_amoUop_bits_opcode       (_amoUnit_io_OUT_amoUop_bits_opcode)
  );
  assign _lsu_io_IN_flush = _flagHandler_io_OUT_flush;
  NewLSU lsu (
    .clock                                 (clock),
    .reset                                 (reset),
    .io_IN_loadUop_ready                   (_lsu_io_IN_loadUop_ready),
    .io_IN_loadUop_valid                   (_lsu_io_IN_loadUop_valid),
    .io_IN_loadUop_bits_prd                (_lsu_io_IN_loadUop_bits_prd),
    .io_IN_loadUop_bits_addr               (_lsu_io_IN_loadUop_bits_addr),
    .io_IN_loadUop_bits_dest               (_lsu_io_IN_loadUop_bits_dest),
    .io_IN_loadUop_bits_robPtr_flag        (_lsu_io_IN_loadUop_bits_robPtr_flag),
    .io_IN_loadUop_bits_robPtr_index       (_lsu_io_IN_loadUop_bits_robPtr_index),
    .io_IN_loadUop_bits_ldqPtr_index       (_lsu_io_IN_loadUop_bits_ldqPtr_index),
    .io_IN_loadUop_bits_stqPtr_flag        (_lsu_io_IN_loadUop_bits_stqPtr_flag),
    .io_IN_loadUop_bits_stqPtr_index       (_lsu_io_IN_loadUop_bits_stqPtr_index),
    .io_IN_loadUop_bits_opcode             (_lsu_io_IN_loadUop_bits_opcode),
    .io_OUT_loadNegAck_valid               (_lsu_io_OUT_loadNegAck_valid),
    .io_OUT_loadNegAck_bits_ldqPtr_index   (_loadQueue_io_IN_negAck_bits_ldqPtr_index),
    .io_OUT_loadNegAck_bits_dest           (_lsu_io_OUT_loadNegAck_bits_dest),
    .io_IN_storeUop_ready                  (_storeBuffer_io_OUT_storeUop_ready),
    .io_IN_storeUop_valid                  (_storeBuffer_io_OUT_storeUop_valid),
    .io_IN_storeUop_bits_addr              (_storeBuffer_io_OUT_storeUop_bits_addr),
    .io_IN_storeUop_bits_wdata             (_storeBuffer_io_OUT_storeUop_bits_wdata),
    .io_IN_storeUop_bits_opcode            (_storeBuffer_io_OUT_storeUop_bits_opcode),
    .io_OUT_storeAck_valid                 (_storeBuffer_io_IN_storeAck_valid),
    .io_OUT_storeAck_bits_resp             (_storeBuffer_io_IN_storeAck_bits_resp),
    .io_IN_amoUop_ready                    (_amoUnit_io_OUT_amoUop_ready),
    .io_IN_amoUop_valid                    (_amoUnit_io_OUT_amoUop_valid),
    .io_IN_amoUop_bits_prd                 (_amoUnit_io_OUT_amoUop_bits_prd),
    .io_IN_amoUop_bits_addr                (_amoUnit_io_OUT_amoUop_bits_addr),
    .io_IN_amoUop_bits_wdata               (_amoUnit_io_OUT_amoUop_bits_wdata),
    .io_IN_amoUop_bits_dest                (_amoUnit_io_OUT_amoUop_bits_dest),
    .io_IN_amoUop_bits_robPtr_flag         (_amoUnit_io_OUT_amoUop_bits_robPtr_flag),
    .io_IN_amoUop_bits_robPtr_index        (_amoUnit_io_OUT_amoUop_bits_robPtr_index),
    .io_IN_amoUop_bits_opcode              (_amoUnit_io_OUT_amoUop_bits_opcode),
    .io_OUT_amoAck_valid                   (_amoUnit_io_IN_amoAck_valid),
    .io_OUT_amoAck_bits_resp               (_amoUnit_io_IN_amoAck_bits_resp),
    .io_OUT_storeBypassReq_addr            (_lsu_io_OUT_storeBypassReq_addr),
    .io_OUT_storeBypassReq_stqPtr_flag     (_storeQueue_io_IN_storeBypassReq_stqPtr_flag),
    .io_OUT_storeBypassReq_stqPtr_index
      (_storeQueue_io_IN_storeBypassReq_stqPtr_index),
    .io_IN_storeBypassResp_data            (_storeQueue_io_OUT_storeBypassResp_data),
    .io_IN_storeBypassResp_mask            (_storeQueue_io_OUT_storeBypassResp_mask),
    .io_IN_storeBufferBypassResp_data      (_storeBuffer_io_OUT_storeBypassResp_data),
    .io_IN_storeBufferBypassResp_mask      (_storeBuffer_io_OUT_storeBypassResp_mask),
    .io_OUT_tagReq_valid                   (_dcache_io_IN_tagReq_valid),
    .io_OUT_tagReq_bits_addr               (_dcache_io_IN_tagReq_bits_addr),
    .io_OUT_tagReq_bits_write              (_dcache_io_IN_tagReq_bits_write),
    .io_OUT_tagReq_bits_way                (_dcache_io_IN_tagReq_bits_way),
    .io_OUT_tagReq_bits_data_valid         (_dcache_io_IN_tagReq_bits_data_valid),
    .io_OUT_tagReq_bits_data_tag           (_dcache_io_IN_tagReq_bits_data_tag),
    .io_IN_tagResp_tags_0_valid            (_dcache_io_OUT_tagResp_tags_0_valid),
    .io_IN_tagResp_tags_0_tag              (_dcache_io_OUT_tagResp_tags_0_tag),
    .io_IN_tagResp_tags_1_valid            (_dcache_io_OUT_tagResp_tags_1_valid),
    .io_IN_tagResp_tags_1_tag              (_dcache_io_OUT_tagResp_tags_1_tag),
    .io_IN_tagResp_tags_2_valid            (_dcache_io_OUT_tagResp_tags_2_valid),
    .io_IN_tagResp_tags_2_tag              (_dcache_io_OUT_tagResp_tags_2_tag),
    .io_IN_tagResp_tags_3_valid            (_dcache_io_OUT_tagResp_tags_3_valid),
    .io_IN_tagResp_tags_3_tag              (_dcache_io_OUT_tagResp_tags_3_tag),
    .io_OUT_dataReq_ready                  (_dcache_io_IN_dataReq_ready),
    .io_OUT_dataReq_valid                  (_dcache_io_IN_dataReq_valid),
    .io_OUT_dataReq_bits_addr              (_dcache_io_IN_dataReq_bits_addr),
    .io_OUT_dataReq_bits_way               (_dcache_io_IN_dataReq_bits_way),
    .io_OUT_dataReq_bits_wmask             (_dcache_io_IN_dataReq_bits_wmask),
    .io_OUT_dataReq_bits_data              (_dcache_io_IN_dataReq_bits_data),
    .io_IN_dataResp_data_0_0               (_dcache_io_OUT_dataResp_data_0_0),
    .io_IN_dataResp_data_0_1               (_dcache_io_OUT_dataResp_data_0_1),
    .io_IN_dataResp_data_0_2               (_dcache_io_OUT_dataResp_data_0_2),
    .io_IN_dataResp_data_0_3               (_dcache_io_OUT_dataResp_data_0_3),
    .io_IN_dataResp_data_0_4               (_dcache_io_OUT_dataResp_data_0_4),
    .io_IN_dataResp_data_0_5               (_dcache_io_OUT_dataResp_data_0_5),
    .io_IN_dataResp_data_0_6               (_dcache_io_OUT_dataResp_data_0_6),
    .io_IN_dataResp_data_0_7               (_dcache_io_OUT_dataResp_data_0_7),
    .io_IN_dataResp_data_1_0               (_dcache_io_OUT_dataResp_data_1_0),
    .io_IN_dataResp_data_1_1               (_dcache_io_OUT_dataResp_data_1_1),
    .io_IN_dataResp_data_1_2               (_dcache_io_OUT_dataResp_data_1_2),
    .io_IN_dataResp_data_1_3               (_dcache_io_OUT_dataResp_data_1_3),
    .io_IN_dataResp_data_1_4               (_dcache_io_OUT_dataResp_data_1_4),
    .io_IN_dataResp_data_1_5               (_dcache_io_OUT_dataResp_data_1_5),
    .io_IN_dataResp_data_1_6               (_dcache_io_OUT_dataResp_data_1_6),
    .io_IN_dataResp_data_1_7               (_dcache_io_OUT_dataResp_data_1_7),
    .io_IN_dataResp_data_2_0               (_dcache_io_OUT_dataResp_data_2_0),
    .io_IN_dataResp_data_2_1               (_dcache_io_OUT_dataResp_data_2_1),
    .io_IN_dataResp_data_2_2               (_dcache_io_OUT_dataResp_data_2_2),
    .io_IN_dataResp_data_2_3               (_dcache_io_OUT_dataResp_data_2_3),
    .io_IN_dataResp_data_2_4               (_dcache_io_OUT_dataResp_data_2_4),
    .io_IN_dataResp_data_2_5               (_dcache_io_OUT_dataResp_data_2_5),
    .io_IN_dataResp_data_2_6               (_dcache_io_OUT_dataResp_data_2_6),
    .io_IN_dataResp_data_2_7               (_dcache_io_OUT_dataResp_data_2_7),
    .io_IN_dataResp_data_3_0               (_dcache_io_OUT_dataResp_data_3_0),
    .io_IN_dataResp_data_3_1               (_dcache_io_OUT_dataResp_data_3_1),
    .io_IN_dataResp_data_3_2               (_dcache_io_OUT_dataResp_data_3_2),
    .io_IN_dataResp_data_3_3               (_dcache_io_OUT_dataResp_data_3_3),
    .io_IN_dataResp_data_3_4               (_dcache_io_OUT_dataResp_data_3_4),
    .io_IN_dataResp_data_3_5               (_dcache_io_OUT_dataResp_data_3_5),
    .io_IN_dataResp_data_3_6               (_dcache_io_OUT_dataResp_data_3_6),
    .io_IN_dataResp_data_3_7               (_dcache_io_OUT_dataResp_data_3_7),
    .io_OUT_mmioReq_addr                   (_internalMMIO_io_IN_mmioReq_addr),
    .io_OUT_mmioReq_ren                    (_internalMMIO_io_IN_mmioReq_ren),
    .io_OUT_mmioReq_wdata                  (_internalMMIO_io_IN_mmioReq_wdata),
    .io_OUT_mmioReq_wen                    (_internalMMIO_io_IN_mmioReq_wen),
    .io_IN_mmioResp_data                   (_internalMMIO_io_OUT_mmioResp_data),
    .io_OUT_cacheCtrlUop_ready             (_cacheController_io_IN_cacheCtrlUop_0_ready),
    .io_OUT_cacheCtrlUop_valid             (_cacheController_io_IN_cacheCtrlUop_0_valid),
    .io_OUT_cacheCtrlUop_bits_index
      (_cacheController_io_IN_cacheCtrlUop_0_bits_index),
    .io_OUT_cacheCtrlUop_bits_rtag
      (_cacheController_io_IN_cacheCtrlUop_0_bits_rtag),
    .io_OUT_cacheCtrlUop_bits_way
      (_cacheController_io_IN_cacheCtrlUop_0_bits_way),
    .io_OUT_cacheCtrlUop_bits_wtag
      (_cacheController_io_IN_cacheCtrlUop_0_bits_wtag),
    .io_OUT_cacheCtrlUop_bits_offset
      (_cacheController_io_IN_cacheCtrlUop_0_bits_offset),
    .io_OUT_cacheCtrlUop_bits_opcode
      (_cacheController_io_IN_cacheCtrlUop_0_bits_opcode),
    .io_OUT_uncacheUop_ready               (_cacheController_io_IN_cacheCtrlUop_1_ready),
    .io_OUT_uncacheUop_valid               (_cacheController_io_IN_cacheCtrlUop_1_valid),
    .io_OUT_uncacheUop_bits_index
      (_cacheController_io_IN_cacheCtrlUop_1_bits_index),
    .io_OUT_uncacheUop_bits_rtag
      (_cacheController_io_IN_cacheCtrlUop_1_bits_rtag),
    .io_OUT_uncacheUop_bits_way
      (_cacheController_io_IN_cacheCtrlUop_1_bits_way),
    .io_OUT_uncacheUop_bits_wtag
      (_cacheController_io_IN_cacheCtrlUop_1_bits_wtag),
    .io_OUT_uncacheUop_bits_wmask
      (_cacheController_io_IN_cacheCtrlUop_1_bits_wmask),
    .io_OUT_uncacheUop_bits_offset
      (_cacheController_io_IN_cacheCtrlUop_1_bits_offset),
    .io_OUT_uncacheUop_bits_wdata
      (_cacheController_io_IN_cacheCtrlUop_1_bits_wdata),
    .io_OUT_uncacheUop_bits_opcode
      (_cacheController_io_IN_cacheCtrlUop_1_bits_opcode),
    .io_IN_mshrs_0_valid                   (_cacheController_io_OUT_MSHR_0_valid),
    .io_IN_mshrs_0_cacheId                 (_cacheController_io_OUT_MSHR_0_cacheId),
    .io_IN_mshrs_0_way                     (_cacheController_io_OUT_MSHR_0_way),
    .io_IN_mshrs_0_memReadAddr             (_cacheController_io_OUT_MSHR_0_memReadAddr),
    .io_IN_mshrs_0_memWriteAddr            (_cacheController_io_OUT_MSHR_0_memWriteAddr),
    .io_IN_mshrs_1_valid                   (_cacheController_io_OUT_MSHR_1_valid),
    .io_IN_mshrs_1_cacheId                 (_cacheController_io_OUT_MSHR_1_cacheId),
    .io_IN_mshrs_1_way                     (_cacheController_io_OUT_MSHR_1_way),
    .io_IN_mshrs_1_memReadAddr             (_cacheController_io_OUT_MSHR_1_memReadAddr),
    .io_IN_mshrs_1_memWriteAddr            (_cacheController_io_OUT_MSHR_1_memWriteAddr),
    .io_IN_mshrs_2_valid                   (_cacheController_io_OUT_MSHR_2_valid),
    .io_IN_mshrs_2_cacheId                 (_cacheController_io_OUT_MSHR_2_cacheId),
    .io_IN_mshrs_2_way                     (_cacheController_io_OUT_MSHR_2_way),
    .io_IN_mshrs_2_memReadAddr             (_cacheController_io_OUT_MSHR_2_memReadAddr),
    .io_IN_mshrs_2_memWriteAddr            (_cacheController_io_OUT_MSHR_2_memWriteAddr),
    .io_IN_mshrs_3_valid                   (_cacheController_io_OUT_MSHR_3_valid),
    .io_IN_mshrs_3_cacheId                 (_cacheController_io_OUT_MSHR_3_cacheId),
    .io_IN_mshrs_3_way                     (_cacheController_io_OUT_MSHR_3_way),
    .io_IN_mshrs_3_memReadAddr             (_cacheController_io_OUT_MSHR_3_memReadAddr),
    .io_IN_mshrs_3_memWriteAddr            (_cacheController_io_OUT_MSHR_3_memWriteAddr),
    .io_IN_mshrs_4_valid                   (_cacheController_io_OUT_MSHR_4_valid),
    .io_IN_mshrs_4_cacheId                 (_cacheController_io_OUT_MSHR_4_cacheId),
    .io_IN_mshrs_4_way                     (_cacheController_io_OUT_MSHR_4_way),
    .io_IN_mshrs_4_memReadAddr             (_cacheController_io_OUT_MSHR_4_memReadAddr),
    .io_IN_mshrs_4_memWriteAddr            (_cacheController_io_OUT_MSHR_4_memWriteAddr),
    .io_IN_mshrs_5_valid                   (_cacheController_io_OUT_MSHR_5_valid),
    .io_IN_mshrs_5_cacheId                 (_cacheController_io_OUT_MSHR_5_cacheId),
    .io_IN_mshrs_5_way                     (_cacheController_io_OUT_MSHR_5_way),
    .io_IN_mshrs_5_memReadAddr             (_cacheController_io_OUT_MSHR_5_memReadAddr),
    .io_IN_mshrs_5_memWriteAddr            (_cacheController_io_OUT_MSHR_5_memWriteAddr),
    .io_IN_mshrs_6_valid                   (_cacheController_io_OUT_MSHR_6_valid),
    .io_IN_mshrs_6_cacheId                 (_cacheController_io_OUT_MSHR_6_cacheId),
    .io_IN_mshrs_6_way                     (_cacheController_io_OUT_MSHR_6_way),
    .io_IN_mshrs_6_memReadAddr             (_cacheController_io_OUT_MSHR_6_memReadAddr),
    .io_IN_mshrs_6_memWriteAddr            (_cacheController_io_OUT_MSHR_6_memWriteAddr),
    .io_IN_mshrs_7_valid                   (_cacheController_io_OUT_MSHR_7_valid),
    .io_IN_mshrs_7_cacheId                 (_cacheController_io_OUT_MSHR_7_cacheId),
    .io_IN_mshrs_7_way                     (_cacheController_io_OUT_MSHR_7_way),
    .io_IN_mshrs_7_memReadAddr             (_cacheController_io_OUT_MSHR_7_memReadAddr),
    .io_IN_mshrs_7_memWriteAddr            (_cacheController_io_OUT_MSHR_7_memWriteAddr),
    .io_IN_memLoadFoward_valid             (_cacheController_io_OUT_memLoadFoward_valid),
    .io_IN_memLoadFoward_bits_addr
      (_cacheController_io_OUT_memLoadFoward_bits_addr),
    .io_IN_memLoadFoward_bits_data
      (_cacheController_io_OUT_memLoadFoward_bits_data),
    .io_IN_memLoadFoward_bits_uncached
      (_cacheController_io_OUT_memLoadFoward_bits_uncached),
    .io_IN_uncacheStoreResp                (_cacheController_io_OUT_uncacheStoreResp),
    .io_OUT_writebackUop_valid             (writebackUop_3_valid),
    .io_OUT_writebackUop_bits_prd          (writebackUop_3_bits_prd),
    .io_OUT_writebackUop_bits_data         (writebackUop_3_bits_data),
    .io_OUT_writebackUop_bits_dest         (writebackUop_3_bits_dest),
    .io_OUT_writebackUop_bits_robPtr_flag  (writebackUop_3_bits_robPtr_flag),
    .io_OUT_writebackUop_bits_robPtr_index (writebackUop_3_bits_robPtr_index),
    .io_IN_flushDCache                     (_lsu_io_IN_flushDCache),
    .io_OUT_flushBusy                      (_lsu_io_OUT_flushBusy),
    .io_IN_flush                           (_lsu_io_IN_flush)
  );
  assign _dtlb_io_IN_PTWResp_valid = _ptw_io_OUT_PTWResp_valid;
  assign _dtlb_io_IN_PTWResp_bits_isSuper = _ptw_io_OUT_PTWResp_bits_isSuper;
  assign _dtlb_io_IN_PTWResp_bits_pte_ppn1 = _ptw_io_OUT_PTWResp_bits_pte_ppn1;
  assign _dtlb_io_IN_PTWResp_bits_pte_ppn0 = _ptw_io_OUT_PTWResp_bits_pte_ppn0;
  assign _dtlb_io_IN_PTWResp_bits_pte_a = _ptw_io_OUT_PTWResp_bits_pte_a;
  assign _dtlb_io_IN_PTWResp_bits_pte_u = _ptw_io_OUT_PTWResp_bits_pte_u;
  assign _dtlb_io_IN_PTWResp_bits_pte_x = _ptw_io_OUT_PTWResp_bits_pte_x;
  assign _dtlb_io_IN_PTWResp_bits_pte_w = _ptw_io_OUT_PTWResp_bits_pte_w;
  assign _dtlb_io_IN_PTWResp_bits_pte_r = _ptw_io_OUT_PTWResp_bits_pte_r;
  assign _dtlb_io_IN_PTWResp_bits_pte_v = _ptw_io_OUT_PTWResp_bits_pte_v;
  assign _dtlb_io_IN_PTWResp_bits_vpn = _ptw_io_OUT_PTWResp_bits_vpn;
  assign _dtlb_io_IN_PTWResp_bits_id = _ptw_io_OUT_PTWResp_bits_id;
  assign _dtlb_io_IN_TLBFlush = _flagHandler_io_OUT_TLBFlush;
  TLB_1 dtlb (
    .clock                        (clock),
    .reset                        (reset),
    .io_IN_TLBReq_valid           (_agu_io_OUT_TLBReq_valid),
    .io_IN_TLBReq_bits_vpn        (_agu_io_OUT_TLBReq_bits_vpn),
    .io_OUT_TLBResp_valid         (_agu_io_IN_TLBResp_valid),
    .io_OUT_TLBResp_bits_isSuper  (_agu_io_IN_TLBResp_bits_isSuper),
    .io_OUT_TLBResp_bits_pte_ppn1 (_agu_io_IN_TLBResp_bits_pte_ppn1),
    .io_OUT_TLBResp_bits_pte_ppn0 (_agu_io_IN_TLBResp_bits_pte_ppn0),
    .io_OUT_TLBResp_bits_pte_d    (_agu_io_IN_TLBResp_bits_pte_d),
    .io_OUT_TLBResp_bits_pte_a    (_agu_io_IN_TLBResp_bits_pte_a),
    .io_OUT_TLBResp_bits_pte_u    (_agu_io_IN_TLBResp_bits_pte_u),
    .io_OUT_TLBResp_bits_pte_x    (_agu_io_IN_TLBResp_bits_pte_x),
    .io_OUT_TLBResp_bits_pte_w    (_agu_io_IN_TLBResp_bits_pte_w),
    .io_OUT_TLBResp_bits_pte_r    (_agu_io_IN_TLBResp_bits_pte_r),
    .io_OUT_TLBResp_bits_pte_v    (_agu_io_IN_TLBResp_bits_pte_v),
    .io_IN_PTWResp_valid          (_dtlb_io_IN_PTWResp_valid),
    .io_IN_PTWResp_bits_isSuper   (_dtlb_io_IN_PTWResp_bits_isSuper),
    .io_IN_PTWResp_bits_pte_ppn1  (_dtlb_io_IN_PTWResp_bits_pte_ppn1),
    .io_IN_PTWResp_bits_pte_ppn0  (_dtlb_io_IN_PTWResp_bits_pte_ppn0),
    .io_IN_PTWResp_bits_pte_d     (_dtlb_io_IN_PTWResp_bits_pte_d),
    .io_IN_PTWResp_bits_pte_a     (_dtlb_io_IN_PTWResp_bits_pte_a),
    .io_IN_PTWResp_bits_pte_u     (_dtlb_io_IN_PTWResp_bits_pte_u),
    .io_IN_PTWResp_bits_pte_x     (_dtlb_io_IN_PTWResp_bits_pte_x),
    .io_IN_PTWResp_bits_pte_w     (_dtlb_io_IN_PTWResp_bits_pte_w),
    .io_IN_PTWResp_bits_pte_r     (_dtlb_io_IN_PTWResp_bits_pte_r),
    .io_IN_PTWResp_bits_pte_v     (_dtlb_io_IN_PTWResp_bits_pte_v),
    .io_IN_PTWResp_bits_vpn       (_dtlb_io_IN_PTWResp_bits_vpn),
    .io_IN_PTWResp_bits_id        (_dtlb_io_IN_PTWResp_bits_id),
    .io_IN_TLBFlush               (_dtlb_io_IN_TLBFlush)
  );
  PTW ptw (
    .clock                            (clock),
    .reset                            (reset),
    .io_IN_PTWReq_0_valid             (_ifu_io_OUT_PTWReq_valid),
    .io_IN_PTWReq_0_bits_vpn          (_ifu_io_OUT_PTWReq_bits_vpn),
    .io_IN_PTWReq_0_bits_stqPtr_flag  (_ifu_io_OUT_PTWReq_bits_stqPtr_flag),
    .io_IN_PTWReq_0_bits_stqPtr_index (_ifu_io_OUT_PTWReq_bits_stqPtr_index),
    .io_IN_PTWReq_1_valid             (_agu_io_OUT_PTWReq_valid),
    .io_IN_PTWReq_1_bits_vpn          (_agu_io_OUT_PTWReq_bits_vpn),
    .io_IN_PTWReq_1_bits_stqPtr_flag  (_agu_io_OUT_PTWReq_bits_stqPtr_flag),
    .io_IN_PTWReq_1_bits_stqPtr_index (_agu_io_OUT_PTWReq_bits_stqPtr_index),
    .io_OUT_PTWResp_valid             (_ptw_io_OUT_PTWResp_valid),
    .io_OUT_PTWResp_bits_isSuper      (_ptw_io_OUT_PTWResp_bits_isSuper),
    .io_OUT_PTWResp_bits_pte_ppn1     (_ptw_io_OUT_PTWResp_bits_pte_ppn1),
    .io_OUT_PTWResp_bits_pte_ppn0     (_ptw_io_OUT_PTWResp_bits_pte_ppn0),
    .io_OUT_PTWResp_bits_pte_d        (_dtlb_io_IN_PTWResp_bits_pte_d),
    .io_OUT_PTWResp_bits_pte_a        (_ptw_io_OUT_PTWResp_bits_pte_a),
    .io_OUT_PTWResp_bits_pte_u        (_ptw_io_OUT_PTWResp_bits_pte_u),
    .io_OUT_PTWResp_bits_pte_x        (_ptw_io_OUT_PTWResp_bits_pte_x),
    .io_OUT_PTWResp_bits_pte_w        (_ptw_io_OUT_PTWResp_bits_pte_w),
    .io_OUT_PTWResp_bits_pte_r        (_ptw_io_OUT_PTWResp_bits_pte_r),
    .io_OUT_PTWResp_bits_pte_v        (_ptw_io_OUT_PTWResp_bits_pte_v),
    .io_OUT_PTWResp_bits_vpn          (_ptw_io_OUT_PTWResp_bits_vpn),
    .io_OUT_PTWResp_bits_id           (_ptw_io_OUT_PTWResp_bits_id),
    .io_IN_writebackUop_valid         (writebackUop_3_valid),
    .io_IN_writebackUop_bits_data     (writebackUop_3_bits_data),
    .io_IN_writebackUop_bits_dest     (writebackUop_3_bits_dest),
    .io_IN_VMCSR_rootPPN              (_csr_io_OUT_VMCSR_rootPPN),
    .io_IN_loadNegAck_valid           (_lsu_io_OUT_loadNegAck_valid),
    .io_IN_loadNegAck_bits_dest       (_lsu_io_OUT_loadNegAck_bits_dest),
    .io_OUT_PTWUop_ready              (_ptw_io_OUT_PTWUop_ready),
    .io_OUT_PTWUop_valid              (_ptw_io_OUT_PTWUop_valid),
    .io_OUT_PTWUop_bits_addr          (_ptw_io_OUT_PTWUop_bits_addr),
    .io_OUT_PTWUop_bits_stqPtr_flag   (_ptw_io_OUT_PTWUop_bits_stqPtr_flag),
    .io_OUT_PTWUop_bits_stqPtr_index  (_ptw_io_OUT_PTWUop_bits_stqPtr_index)
  );
  LoadArbiter loadArb (
    .io_IN_PTWUop_ready              (_ptw_io_OUT_PTWUop_ready),
    .io_IN_PTWUop_valid              (_ptw_io_OUT_PTWUop_valid),
    .io_IN_PTWUop_bits_addr          (_ptw_io_OUT_PTWUop_bits_addr),
    .io_IN_PTWUop_bits_stqPtr_flag   (_ptw_io_OUT_PTWUop_bits_stqPtr_flag),
    .io_IN_PTWUop_bits_stqPtr_index  (_ptw_io_OUT_PTWUop_bits_stqPtr_index),
    .io_IN_AGUUop_ready              (_loadQueue_io_OUT_ldUop_ready),
    .io_IN_AGUUop_valid              (_loadQueue_io_OUT_ldUop_valid),
    .io_IN_AGUUop_bits_prd           (_loadQueue_io_OUT_ldUop_bits_prd),
    .io_IN_AGUUop_bits_addr          (_loadQueue_io_OUT_ldUop_bits_addr),
    .io_IN_AGUUop_bits_dest          (_loadQueue_io_OUT_ldUop_bits_dest),
    .io_IN_AGUUop_bits_robPtr_flag   (_loadQueue_io_OUT_ldUop_bits_robPtr_flag),
    .io_IN_AGUUop_bits_robPtr_index  (_loadQueue_io_OUT_ldUop_bits_robPtr_index),
    .io_IN_AGUUop_bits_ldqPtr_index  (_loadQueue_io_OUT_ldUop_bits_ldqPtr_index),
    .io_IN_AGUUop_bits_stqPtr_flag   (_loadQueue_io_OUT_ldUop_bits_stqPtr_flag),
    .io_IN_AGUUop_bits_stqPtr_index  (_loadQueue_io_OUT_ldUop_bits_stqPtr_index),
    .io_IN_AGUUop_bits_opcode        (_loadQueue_io_OUT_ldUop_bits_opcode),
    .io_IN_stopPTWUop                (_amoUnit_io_OUT_amoActive),
    .io_OUT_AGUUop_ready             (_lsu_io_IN_loadUop_ready),
    .io_OUT_AGUUop_valid             (_lsu_io_IN_loadUop_valid),
    .io_OUT_AGUUop_bits_prd          (_lsu_io_IN_loadUop_bits_prd),
    .io_OUT_AGUUop_bits_addr         (_lsu_io_IN_loadUop_bits_addr),
    .io_OUT_AGUUop_bits_dest         (_lsu_io_IN_loadUop_bits_dest),
    .io_OUT_AGUUop_bits_robPtr_flag  (_lsu_io_IN_loadUop_bits_robPtr_flag),
    .io_OUT_AGUUop_bits_robPtr_index (_lsu_io_IN_loadUop_bits_robPtr_index),
    .io_OUT_AGUUop_bits_ldqPtr_index (_lsu_io_IN_loadUop_bits_ldqPtr_index),
    .io_OUT_AGUUop_bits_stqPtr_flag  (_lsu_io_IN_loadUop_bits_stqPtr_flag),
    .io_OUT_AGUUop_bits_stqPtr_index (_lsu_io_IN_loadUop_bits_stqPtr_index),
    .io_OUT_AGUUop_bits_opcode       (_lsu_io_IN_loadUop_bits_opcode)
  );
  assign _xtvalRecorder_io_IN_flush = _flagHandler_io_OUT_flush;
  XtvalRecorder xtvalRecorder (
    .clock                        (clock),
    .reset                        (reset),
    .io_IN_tval_valid             (_agu_io_OUT_xtvalRec_valid),
    .io_IN_tval_bits_tval         (_agu_io_OUT_xtvalRec_bits_tval),
    .io_IN_tval_bits_robPtr_flag  (_agu_io_OUT_xtvalRec_bits_robPtr_flag),
    .io_IN_tval_bits_robPtr_index (_agu_io_OUT_xtvalRec_bits_robPtr_index),
    .io_IN_robTailPtr_flag        (_rob_io_OUT_robTailPtr_flag),
    .io_IN_robTailPtr_index       (_rob_io_OUT_robTailPtr_index),
    .io_OUT_tval_valid            (_csr_io_IN_xtvalRec_valid),
    .io_OUT_tval_bits_tval        (_csr_io_IN_xtvalRec_bits_tval),
    .io_IN_flush                  (_xtvalRecorder_io_IN_flush)
  );
  FlagHandler flagHandler (
    .clock                        (clock),
    .io_IN_flagUop_valid          (flagUop_valid),
    .io_IN_flagUop_bits_rd        (flagUop_bits_rd),
    .io_IN_flagUop_bits_flag      (flagUop_bits_flag),
    .io_IN_flagUop_bits_pc        (flagUop_bits_pc),
    .io_IN_flagUop_bits_target    (flagUop_bits_target),
    .io_IN_trapCSR_mtvec          (_csr_io_OUT_trapCSR_mtvec),
    .io_IN_trapCSR_mepc           (_csr_io_OUT_trapCSR_mepc),
    .io_IN_trapCSR_stvec          (_csr_io_OUT_trapCSR_stvec),
    .io_IN_trapCSR_sepc           (_csr_io_OUT_trapCSR_sepc),
    .io_IN_trapCSR_mideleg        (_csr_io_OUT_trapCSR_mideleg),
    .io_IN_trapCSR_medeleg        (_csr_io_OUT_trapCSR_medeleg),
    .io_IN_trapCSR_priv           (_csr_io_OUT_trapCSR_priv),
    .io_IN_trapCSR_interrupt      (_csr_io_OUT_trapCSR_interrupt),
    .io_IN_trapCSR_interruptCause (_csr_io_OUT_trapCSR_interruptCause),
    .io_OUT_flush                 (_flagHandler_io_OUT_flush),
    .io_OUT_CSRCtrl_trap          (CSRCtrl_trap),
    .io_OUT_CSRCtrl_intr          (CSRCtrl_intr),
    .io_OUT_CSRCtrl_pc            (CSRCtrl_pc),
    .io_OUT_CSRCtrl_cause         (CSRCtrl_cause),
    .io_OUT_CSRCtrl_delegate      (CSRCtrl_delegate),
    .io_OUT_CSRCtrl_mret          (CSRCtrl_mret),
    .io_OUT_CSRCtrl_sret          (CSRCtrl_sret),
    .io_OUT_redirect_valid        (redirect_valid),
    .io_OUT_redirect_pc           (redirect_pc),
    .io_OUT_TLBFlush              (_flagHandler_io_OUT_TLBFlush),
    .io_OUT_flushICache           (_ifu_io_IN_flushICache),
    .io_OUT_flushDCache           (_lsu_io_IN_flushDCache)
  );
  WritebackSel port0wbsel (
    .io_IN_uop_0_valid             (_alu0_io_OUT_writebackUop_valid),
    .io_IN_uop_0_bits_prd          (_alu0_io_OUT_writebackUop_bits_prd),
    .io_IN_uop_0_bits_data         (_alu0_io_OUT_writebackUop_bits_data),
    .io_IN_uop_0_bits_robPtr_flag  (_alu0_io_OUT_writebackUop_bits_robPtr_flag),
    .io_IN_uop_0_bits_robPtr_index (_alu0_io_OUT_writebackUop_bits_robPtr_index),
    .io_IN_uop_1_valid             (_mul_io_OUT_writebackUop_valid),
    .io_IN_uop_1_bits_prd          (_mul_io_OUT_writebackUop_bits_prd),
    .io_IN_uop_1_bits_data         (_mul_io_OUT_writebackUop_bits_data),
    .io_IN_uop_1_bits_robPtr_flag  (_mul_io_OUT_writebackUop_bits_robPtr_flag),
    .io_IN_uop_1_bits_robPtr_index (_mul_io_OUT_writebackUop_bits_robPtr_index),
    .io_IN_uop_2_valid             (_csr_io_OUT_writebackUop_valid),
    .io_IN_uop_2_bits_prd          (_csr_io_OUT_writebackUop_bits_prd),
    .io_IN_uop_2_bits_data         (_csr_io_OUT_writebackUop_bits_data),
    .io_IN_uop_2_bits_robPtr_flag  (_csr_io_OUT_writebackUop_bits_robPtr_flag),
    .io_IN_uop_2_bits_robPtr_index (_csr_io_OUT_writebackUop_bits_robPtr_index),
    .io_IN_uop_2_bits_flag         (_csr_io_OUT_writebackUop_bits_flag),
    .io_IN_uop_2_bits_target       (_csr_io_OUT_writebackUop_bits_target),
    .io_OUT_uop_valid              (writebackUop_0_valid),
    .io_OUT_uop_bits_prd           (writebackUop_0_bits_prd),
    .io_OUT_uop_bits_data          (writebackUop_0_bits_data),
    .io_OUT_uop_bits_robPtr_flag   (writebackUop_0_bits_robPtr_flag),
    .io_OUT_uop_bits_robPtr_index  (writebackUop_0_bits_robPtr_index),
    .io_OUT_uop_bits_flag          (writebackUop_0_bits_flag),
    .io_OUT_uop_bits_target        (writebackUop_0_bits_target)
  );
  WritebackSel_1 port1wbsel (
    .io_IN_uop_0_valid             (_alu1_io_OUT_writebackUop_valid),
    .io_IN_uop_0_bits_prd          (_alu1_io_OUT_writebackUop_bits_prd),
    .io_IN_uop_0_bits_data         (_alu1_io_OUT_writebackUop_bits_data),
    .io_IN_uop_0_bits_robPtr_flag  (_alu1_io_OUT_writebackUop_bits_robPtr_flag),
    .io_IN_uop_0_bits_robPtr_index (_alu1_io_OUT_writebackUop_bits_robPtr_index),
    .io_IN_uop_1_valid             (_div_io_OUT_writebackUop_valid),
    .io_IN_uop_1_bits_prd          (_div_io_OUT_writebackUop_bits_prd),
    .io_IN_uop_1_bits_data         (_div_io_OUT_writebackUop_bits_data),
    .io_IN_uop_1_bits_robPtr_flag  (_div_io_OUT_writebackUop_bits_robPtr_flag),
    .io_IN_uop_1_bits_robPtr_index (_div_io_OUT_writebackUop_bits_robPtr_index),
    .io_OUT_uop_valid              (writebackUop_1_valid),
    .io_OUT_uop_bits_prd           (writebackUop_1_bits_prd),
    .io_OUT_uop_bits_data          (writebackUop_1_bits_data),
    .io_OUT_uop_bits_robPtr_flag   (writebackUop_1_bits_robPtr_flag),
    .io_OUT_uop_bits_robPtr_index  (writebackUop_1_bits_robPtr_index)
  );
  assign io_master_awlen = 8'h0;
  assign io_master_awburst = 2'h1;
  assign io_master_wlast = 1'h1;
  assign io_master_bready = 1'h1;
  assign io_master_arlen = 8'h0;
  assign io_master_arburst = 2'h1;
  assign io_master_rready = 1'h1;
endmodule

